{"version":3,"file":"msal-express-wrapper.esm.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/utils/Constants.ts","../src/config/ConfigHelper.ts","../src/middleware/BaseMiddlewareBuilder.ts","../src/crypto/TokenValidator.ts","../src/packageMetadata.ts","../src/middleware/BaseAuthMiddleware.ts","../src/network/FetchManager.ts","../src/utils/UrlUtils.ts","../src/middleware/webapp/AppServiceAuthHelper.ts","../src/middleware/webapp/WebAppAuthMiddleware.ts","../src/network/KeyVaultManager.ts","../src/cache/DistributedCachePlugin.ts","../src/config/MsalConfiguration.ts","../src/middleware/webapp/WebAppMiddlewareBuilder.ts","../src/middleware/webapi/WebApiAuthMiddleware.ts","../src/middleware/webapi/WebApiMiddlewareBuilder.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    LoggerOptions,\r\n    LogLevel,\r\n} from \"@azure/msal-common\";\r\n\r\n/**\r\n * Basic authentication stages used to determine\r\n * appropriate action after redirect occurs\r\n */\r\nexport enum AppStages {\r\n    SIGN_IN = \"sign_in\",\r\n    SIGN_OUT = \"sign_out\",\r\n    ACQUIRE_TOKEN = \"acquire_token\",\r\n};\r\n\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nexport const AADAuthorityConstants = {\r\n    COMMON: \"common\",\r\n    ORGANIZATIONS: \"organizations\",\r\n    CONSUMERS: \"consumers\"\r\n}\r\n\r\n/**\r\n * String constants related credential type\r\n */\r\nexport enum KeyVaultCredentialTypes {\r\n    SECRET = \"clientSecret\",\r\n    CERTIFICATE = \"clientCertificate\",\r\n}\r\n\r\n/**\r\n * Request headers used by App Service authentication\r\n */\r\nexport const AppServiceAuthenticationHeaders = {\r\n    APP_SERVICE_AUTHENTICATION_HEADER: \"X-MSAL-APP-SERVICE-AUTHENTICATION\",\r\n    APP_SERVICE_ACCESS_TOKEN_HEADER: \"X-MS-TOKEN-AAD-ACCESS-TOKEN\",\r\n    APP_SERVICE_ID_TOKEN_HEADER: \"X-MS-TOKEN-AAD-ID-TOKEN\",\r\n    APP_SERVICE_REFRESH_TOKEN_HEADER: \"X-MS-TOKEN-AAD-REFRESH-TOKEN\",\r\n    APP_SERVICE_ACCESS_TOKEN_EXPIRES_HEADER: \"X-MS-TOKEN-AAD-EXPIRES-ON\",\r\n    APP_SERVICE_USER_OID_HEADER: \"X-MS-CLIENT-PRINCIPAL-ID\",\r\n    APP_SERVICE_USER_UPN_HEADER: \"X-MS-CLIENT-PRINCIPAL-NAME\",\r\n    APP_SERVICE_IDP_X_HEADER: \"X-MS-CLIENT-PRINCIPAL-IDP\"\r\n}\r\n\r\n/**\r\n * Endpoints used by App Service authentication\r\n */\r\nexport const AppServiceAuthenticationEndpoints = {\r\n    ID_TOKEN_ENDPOINT: \"/.auth/me\",\r\n    POST_LOGOUT_DEFAULT_ENDPOINT: \"/.auth/logout/done\",\r\n    POST_LOGIN_DEFAULT_ENDPOINT: \"/.auth/login/done\",\r\n    AAD_SIGN_IN_ENDPOINT: \"/.auth/login/aad\",\r\n    AAD_SIGN_OUT_ENDPOINT: \"/.auth/logout\",\r\n    TOKEN_REFRESH_ENDPOINT: \"/.auth/refresh\",\r\n    AAD_REDIRECT_ENDPOINT: \"/.auth/login/aad/callback\",\r\n}\r\n\r\n/**\r\n * Query parameters used by App Service authentication endpoints\r\n */\r\nexport const AppServiceAuthenticationQueryParameters = {\r\n    POST_LOGIN_REDIRECT_QUERY_PARAM: \"?post_login_redirect_url=\",\r\n    POST_LOGOUT_REDIRECT_QUERY_PARAM: \"?post_logout_redirect_uri=\",\r\n}\r\n\r\n/**\r\n * Environment variables used by App Service authentication\r\n */\r\nexport const AppServiceEnvironmentVariables = {\r\n    WEBSITE_AUTH_ENABLED: \"WEBSITE_AUTH_ENABLED\",\r\n    WEBSITE_AUTH_ALLOWED_AUDIENCES: \"WEBSITE_AUTH_ALLOWED_AUDIENCES\",\r\n    WEBSITE_AUTH_DEFAULT_PROVIDER: \"WEBSITE_AUTH_DEFAULT_PROVIDER\",\r\n    WEBSITE_AUTH_TOKEN_STORE: \"WEBSITE_AUTH_TOKEN_STORE\",\r\n    WEBSITE_AUTH_LOGIN_PARAMS: \"WEBSITE_AUTH_LOGIN_PARAMS\",\r\n    WEBSITE_AUTH_PRESERVE_URL_FRAGMENT: \"WEBSITE_AUTH_PRESERVE_URL_FRAGMENT\",\r\n    WEBSITE_AUTH_OPENID_ISSUER: \"WEBSITE_AUTH_OPENID_ISSUER\",\r\n    WEBSITE_AUTH_CLIENT_ID: \"WEBSITE_AUTH_CLIENT_ID\",\r\n    WEBSITE_HOSTNAME: \"WEBSITE_HOSTNAME\",\r\n    WEBSITE_SITE_NAME: \"WEBSITE_SITE_NAME\",\r\n    WEBSITE_AUTH_REQUIRE_HTTPS: \"WEBSITE_AUTH_REQUIRE_HTTPS\",\r\n    WEBSITE_AUTH_UNAUTHENTICATED_ACTION: \"WEBSITE_AUTH_UNAUTHENTICATED_ACTION\",\r\n    WEBSITE_AUTH_API_PREFIX: \"WEBSITE_AUTH_API_PREFIX\",\r\n    MICROSOFT_PROVIDER_AUTHENTICATION_SECRET: \"MICROSOFT_PROVIDER_AUTHENTICATION_SECRET\",\r\n}\r\n\r\n/**\r\n * Constants used in access control scenarios\r\n */\r\nexport const AccessControlConstants = {\r\n    GROUPS: \"groups\",\r\n    ROLES: \"roles\",\r\n    CLAIM_NAMES: \"_claim_name\",\r\n    CLAIM_SOURCES: \"_claim_sources\",\r\n    PAGINATION_LINK: \"@odata.nextLink\",\r\n    GRAPH_MEMBERS_ENDPOINT: \"https://graph.microsoft.com/v1.0/me/memberOf\",\r\n    GRAPH_MEMBER_SCOPES: \"User.Read GroupMember.Read.All\"\r\n};\r\n\r\n/**\r\n * Various information constants\r\n */\r\nexport const InfoMessages = {\r\n    APP_SERVICE_AUTH_DETECTED: \"App Service Authentication detected\",\r\n    REQUEST_FOR_RESOURCE: \"Request made to web API\",\r\n    OVERAGE_OCCURRED: \"User has too many groups. Groups overage claim occurred\"\r\n}\r\n\r\n/**\r\n * Various error constants\r\n */\r\nexport const ErrorMessages = {\r\n    NOT_PERMITTED: \"Not permitted\",\r\n    INVALID_TOKEN: \"Invalid token\",\r\n    CANNOT_DETERMINE_APP_STAGE: \"Cannot determine application stage\",\r\n    CANNOT_VALIDATE_TOKEN: \"Cannot validate token\",\r\n    NONCE_MISMATCH: \"Nonce does not match\",\r\n    INTERACTION_REQUIRED: \"interaction_required\",\r\n    TOKEN_ACQUISITION_FAILED: \"Token acquisition failed\",\r\n    AUTH_CODE_NOT_OBTAINED: \"Authorization code cannot be obtained\",\r\n    TOKEN_NOT_FOUND: \"No token found\",\r\n    TOKEN_NOT_DECODED: \"Token cannot be decoded\",\r\n    TOKEN_NOT_VERIFIED: \"Token cannot be verified\",\r\n    KEYS_NOT_OBTAINED: \"Signing keys cannot be obtained\",\r\n    STATE_NOT_FOUND: \"State not found\",\r\n    USER_HAS_NO_ROLE: \"User does not have any roles\",\r\n    USER_NOT_IN_ROLE: \"User does not have this role\",\r\n    USER_HAS_NO_GROUP: \"User does not have any groups\",\r\n    USER_NOT_IN_GROUP: \"User does not have this group\",\r\n    METHOD_NOT_ALLOWED: \"Method not allowed for this route\",\r\n    RULE_NOT_FOUND: \"No rule found for this route\",\r\n    SESSION_NOT_FOUND: \"No session found for this request\",\r\n    KEY_VAULT_CONFIG_NOT_FOUND: \"No coordinates found for Key Vault\"\r\n};\r\n\r\n/**\r\n * Various configuration error constants\r\n */\r\nexport const ConfigurationErrorMessages = {\r\n    NO_CLIENT_ID: \"No clientId provided!\",\r\n    INVALID_CLIENT_ID: \"Invalid clientId!\",\r\n    NO_TENANT_INFO: \"No tenant info provided!\",\r\n    INVALID_TENANT_INFO: \"Invalid tenant info!\",\r\n    NO_CLIENT_CREDENTIAL: \"No client credential provided!\",\r\n    NO_REDIRECT_URI: \"No redirect URI provided!\",\r\n    NO_ERROR_ROUTE: \"No error route provided!\",\r\n    NO_UNAUTHORIZED_ROUTE: \"No unauthorized route provided!\"\r\n}\r\n\r\n/**\r\n * For more information, visit: https://login.microsoftonline.com/error\r\n */\r\nexport const ErrorCodes = {\r\n    65001: \"AADSTS65001\", // consent required\r\n    50076: \"AADSTS50076\", // mfa required\r\n    50079: \"AADSTS50079\", // mfa enrollment required\r\n    50001: \"AADSTS50001\", // invalid resource uri\r\n    65004: \"AADSTS65004\", // user declined consent\r\n    70011: \"AADSTS70011\", // invalid scope\r\n    700022: \"AADSTS700022\", // multiple resources\r\n    700020: \"AADSTS700020\", // interaction required\r\n    90118: \"AADB2C90118\", // password forgotten (B2C)\r\n};\r\n\r\nexport const DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\r\n    loggerCallback: (logLevel, message, containsPii) => {\r\n        if (containsPii) {\r\n            return;\r\n        }\r\n        console.info(message);\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info,\r\n};","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { StringUtils } from \"@azure/msal-common\";\r\n\r\nimport { AADAuthorityConstants, ConfigurationErrorMessages } from \"../utils/Constants\";\r\nimport { AppSettings, Resource } from \"./AppSettings\";\r\n\r\nexport class ConfigHelper {\r\n\r\n    /**\r\n     * Validates the fields in the configuration file\r\n     * @param {AppSettings} appSettings: configuration object\r\n     * @returns {void}\r\n     */\r\n    static validateAppSettings(appSettings: AppSettings): void {\r\n        if (StringUtils.isEmpty(appSettings.appCredentials.clientId)) {\r\n            throw new Error(ConfigurationErrorMessages.NO_CLIENT_ID);\r\n        } else if (!ConfigHelper.isGuid(appSettings.appCredentials.clientId)) {\r\n            throw new Error(ConfigurationErrorMessages.INVALID_CLIENT_ID);\r\n        }\r\n\r\n        if (StringUtils.isEmpty(appSettings.appCredentials.tenantInfo)) {\r\n            throw new Error(ConfigurationErrorMessages.NO_TENANT_INFO);\r\n        } else if (!ConfigHelper.isGuid(appSettings.appCredentials.tenantInfo) && !Object.values(AADAuthorityConstants).includes(appSettings.appCredentials.tenantInfo)) {\r\n            throw new Error(ConfigurationErrorMessages.INVALID_TENANT_INFO);\r\n        }\r\n\r\n        if (StringUtils.isEmpty(appSettings.authRoutes.redirect)) {\r\n            throw new Error(ConfigurationErrorMessages.NO_REDIRECT_URI);\r\n        }\r\n\r\n        if (StringUtils.isEmpty(appSettings.authRoutes.error)) {\r\n            throw new Error(ConfigurationErrorMessages.NO_ERROR_ROUTE);\r\n        }\r\n\r\n        if (StringUtils.isEmpty(appSettings.authRoutes.unauthorized)) {\r\n            throw new Error(ConfigurationErrorMessages.NO_UNAUTHORIZED_ROUTE);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Verifies if a string is GUID\r\n     * @param {string} guid\r\n     * @returns {boolean}\r\n     */\r\n    static isGuid(guid: string): boolean {\r\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n        return regexGuid.test(guid);\r\n    }\r\n\r\n    /**\r\n     * Util method to get the resource name for a given scope(s)\r\n     * @param {Array} scopes: an array of scopes that the resource is associated with\r\n     * @param {AppSettings} appSettings: application authentication parameters\r\n     * @returns {string}\r\n     */\r\n    static getResourceNameFromScopes(scopes: string[], appSettings: AppSettings): string {\r\n        const index = Object.values({ ...appSettings.protectedResources, ...appSettings.ownedResources })\r\n            .findIndex((resource: Resource) => JSON.stringify(resource.scopes) === JSON.stringify(scopes));\r\n\r\n        const resourceName = Object.keys({ ...appSettings.protectedResources, ...appSettings.ownedResources })[index];\r\n\r\n        return resourceName;\r\n    };\r\n\r\n    /**\r\n     * Util method to get the scopes for a given resource name\r\n     * @param {string} resourceEndpoint: the resource name\r\n     * @param {AppSettings} appSettings: application authentication parameters\r\n     * @returns {string}\r\n     */\r\n    static getScopesFromResourceEndpoint(resourceEndpoint: string, appSettings: AppSettings): string[] {\r\n        const scopes = Object.values(appSettings.ownedResources)\r\n            .find((resource: Resource) => resource.endpoint === resourceEndpoint).scopes;\r\n\r\n        return scopes;\r\n    };\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ICachePlugin } from \"@azure/msal-node\";\r\n\r\nimport { IDistributedPersistence } from \"../cache/IDistributedPersistence\";\r\nimport { ConfigHelper } from \"../config/ConfigHelper\";\r\nimport { AppSettings, KeyVaultCredential } from \"../config/AppSettings\";\r\n\r\nexport abstract class BaseMiddlewareBuilder {\r\n\r\n    appSettings: AppSettings;\r\n    protected persistenceManager: IDistributedPersistence;\r\n    protected keyVaultCredential: KeyVaultCredential;\r\n    protected customCachePlugin: ICachePlugin;\r\n\r\n    protected constructor(appSettings: AppSettings) {\r\n        ConfigHelper.validateAppSettings(appSettings);\r\n        this.appSettings = appSettings;\r\n    };\r\n\r\n    withKeyVaultCredentials(keyVaultCredential: KeyVaultCredential): BaseMiddlewareBuilder {\r\n        this.keyVaultCredential = keyVaultCredential;\r\n        return this;\r\n    }\r\n\r\n    withDistributedTokenCache(persistenceManager: IDistributedPersistence): BaseMiddlewareBuilder {\r\n        this.persistenceManager = persistenceManager;\r\n        return this;\r\n    }\r\n\r\n    withCustomCachePlugin(cachePlugin: ICachePlugin): BaseMiddlewareBuilder {\r\n        this.customCachePlugin = cachePlugin;\r\n        return this;\r\n    }\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport jwt from \"jsonwebtoken\";\r\nimport jwksClient from \"jwks-rsa\";\r\n\r\nimport {\r\n    StringUtils,\r\n    Constants,\r\n    TokenClaims,\r\n    Logger\r\n} from \"@azure/msal-common\";\r\nimport { Configuration } from \"@azure/msal-node\";\r\n\r\nimport {\r\n    AuthToken,\r\n    TokenHeader,\r\n    IdTokenClaims,\r\n    AccessTokenClaims\r\n} from \"./AuthToken\";\r\n\r\nimport { AppSettings } from \"../config/AppSettings\";\r\nimport { ConfigHelper } from \"../config/ConfigHelper\";\r\n\r\nimport {\r\n    ErrorMessages,\r\n    AADAuthorityConstants\r\n} from \"../utils/Constants\";\r\n\r\nexport class TokenValidator {\r\n\r\n    logger: Logger;\r\n    private _appSettings: AppSettings;\r\n    private _msalConfig: Configuration;\r\n\r\n    /**\r\n     * @param {AppSettings} appSettings \r\n     * @param {Configuration} msalConfig\r\n     * @param {Logger} logger\r\n     * @constructor\r\n     */\r\n    constructor(appSettings: AppSettings, msalConfig: Configuration, logger: Logger) {\r\n        this._appSettings = appSettings;\r\n        this._msalConfig = msalConfig;\r\n        this.logger = logger;\r\n    }\r\n\r\n    /**\r\n     * Verifies the access token for signature and claims\r\n     * @param {string} idToken: raw Id token\r\n     * @returns {Promise}\r\n     */\r\n    async validateIdToken(idToken: string): Promise<boolean> {\r\n        try {\r\n            const verifiedToken = await this.verifyTokenSignature(idToken);\r\n\r\n            if (verifiedToken) {\r\n                return this.validateIdTokenClaims(verifiedToken as IdTokenClaims);\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Verifies the access token for signature and claims\r\n     * @param {string} accessToken: raw access token\r\n     * @param {string} protectedRoute: used for checking scope\r\n     * @returns {Promise}\r\n     */\r\n    async validateAccessToken(accessToken: string, protectedRoute: string): Promise<boolean> {\r\n        try {\r\n            const verifiedToken = await this.verifyTokenSignature(accessToken);\r\n\r\n            if (verifiedToken) {\r\n                return this.validateAccessTokenClaims(verifiedToken as AccessTokenClaims, protectedRoute);\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Verifies a given token's signature using jwks-rsa\r\n     * @param {string} authToken \r\n     * @returns {Promise}\r\n     */\r\n    private async verifyTokenSignature(authToken: string): Promise<TokenClaims | boolean> {\r\n        if (StringUtils.isEmpty(authToken)) {\r\n            this.logger.error(ErrorMessages.TOKEN_NOT_FOUND);\r\n            return false;\r\n        }\r\n\r\n        // we will first decode to get kid parameter in header\r\n        let decodedToken: AuthToken = TokenValidator.decodeAuthToken(authToken);\r\n\r\n        // obtains signing keys from discovery endpoint\r\n        let keys;\r\n\r\n        try {\r\n            keys = await this.getSigningKeys(decodedToken.header, decodedToken.payload.tid);\r\n        } catch (error) {\r\n            this.logger.error(ErrorMessages.KEYS_NOT_OBTAINED);\r\n            return false;\r\n        }\r\n\r\n        // verify the signature at header section using keys\r\n        let verifiedToken: TokenClaims;\r\n\r\n        try {\r\n            verifiedToken = jwt.verify(authToken, keys);\r\n\r\n            /**\r\n             * if a multiplexer was used in place of tenantId i.e. if the app\r\n             * is multi-tenant, the tenantId should be obtained from the user\"s\r\n             * token\"s tid claim for verification purposes\r\n             */\r\n            if (\r\n                this._appSettings.appCredentials.tenantInfo === AADAuthorityConstants.COMMON ||\r\n                this._appSettings.appCredentials.tenantInfo === AADAuthorityConstants.ORGANIZATIONS ||\r\n                this._appSettings.appCredentials.tenantInfo === AADAuthorityConstants.CONSUMERS\r\n            ) {\r\n                this._appSettings.appCredentials.tenantInfo = decodedToken.payload.tid;\r\n            }\r\n\r\n            return verifiedToken;\r\n        } catch (error) {\r\n            this.logger.error(ErrorMessages.TOKEN_NOT_VERIFIED);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Fetches signing keys of an access token\r\n     * from the authority discovery endpoint\r\n     * @param {TokenHeader} header: token header\r\n     * @param {string} tid: tenant id\r\n     * @returns {Promise}\r\n     */\r\n    private async getSigningKeys(header: TokenHeader, tid: string): Promise<string> {\r\n        let jwksUri;\r\n\r\n        // Check if a B2C application i.e. app has b2cPolicies\r\n        if (this._appSettings.b2cPolicies) {\r\n            jwksUri = `${this._msalConfig.auth.authority}/discovery/v2.0/keys`;\r\n        } else {\r\n            jwksUri = `https://${Constants.DEFAULT_AUTHORITY_HOST}/${tid}/discovery/v2.0/keys`;\r\n        }\r\n\r\n        const client = jwksClient({\r\n            jwksUri: jwksUri,\r\n        });\r\n\r\n        return (await client.getSigningKeyAsync(header.kid)).getPublicKey();\r\n    };\r\n\r\n    /**\r\n     * Validates the id token for a set of claims\r\n     * @param {IdTokenClaims} idTokenClaims: decoded id token claims\r\n     * @returns {boolean}\r\n     */\r\n    private validateIdTokenClaims(idTokenClaims: IdTokenClaims): boolean {\r\n        const now = Math.round(new Date().getTime() / 1000); // in UNIX format\r\n\r\n        /**\r\n         * At the very least, check for issuer, audience, issue and expiry dates.\r\n         * For more information on validating id tokens, visit:\r\n         * https://docs.microsoft.com/azure/active-directory/develop/id-tokens#validating-an-id_token\r\n         */\r\n        const checkIssuer = idTokenClaims.iss.includes(this._appSettings.appCredentials.tenantInfo) ? true : false;\r\n        const checkAudience = idTokenClaims.aud === this._msalConfig.auth.clientId ? true : false;\r\n        const checkTimestamp = idTokenClaims.iat <= now && idTokenClaims.exp >= now ? true : false;\r\n\r\n        return checkIssuer && checkAudience && checkTimestamp;\r\n    };\r\n\r\n    /**\r\n     * Validates the access token for a set of claims\r\n     * @param {TokenClaims} verifiedToken: token with a verified signature\r\n     * @param {string} protectedRoute: route where this token is required to access\r\n     * @returns {boolean}\r\n     */\r\n    private validateAccessTokenClaims(verifiedToken: AccessTokenClaims, protectedRoute: string): boolean {\r\n        const now = Math.round(new Date().getTime() / 1000); // in UNIX format\r\n\r\n        /**\r\n         * At the very least, validate the token with respect to issuer, audience, scope\r\n         * and timestamp, though implementation and extent vary. For more information, visit:\r\n         * https://docs.microsoft.com/azure/active-directory/develop/access-tokens#validating-tokens\r\n         */\r\n        const checkIssuer = verifiedToken.iss.includes(this._appSettings.appCredentials.tenantInfo) ? true : false;\r\n        const checkTimestamp = verifiedToken.iat <= now && verifiedToken.iat >= now ? true : false;\r\n\r\n        const checkAudience = verifiedToken.aud === this._appSettings.appCredentials.clientId ||\r\n            verifiedToken.aud === \"api://\" + this._appSettings.appCredentials.clientId ? true : false;\r\n\r\n        const checkScopes = ConfigHelper.getScopesFromResourceEndpoint(protectedRoute, this._appSettings)\r\n            .every(scp => verifiedToken.scp.includes(scp));\r\n\r\n        return checkAudience && checkIssuer && checkTimestamp && checkScopes;\r\n    };\r\n\r\n    static decodeAuthToken(authToken: string): AuthToken {\r\n\r\n        try {\r\n            return jwt.decode(authToken, { complete: true });\r\n        } catch (error) {\r\n            throw new Error(ErrorMessages.TOKEN_NOT_DECODED);\r\n        }\r\n    }\r\n}\r\n","export const packageName = \"@azure-samples/msal-express-wrapper\";\r\nexport const packageVersion = \"0.1.0\";","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Router } from \"express\";\r\n\r\nimport { Logger } from \"@azure/msal-common\";\r\nimport {\r\n    ConfidentialClientApplication,\r\n    Configuration,\r\n} from \"@azure/msal-node\";\r\n\r\nimport { TokenValidator } from \"../crypto/TokenValidator\";\r\nimport { AppSettings } from \"../config/AppSettings\";\r\nimport { InitializationOptions } from \"./MiddlewareOptions\";\r\n\r\nimport {\r\n    packageName,\r\n    packageVersion\r\n} from \"../packageMetadata\";\r\n\r\nexport abstract class BaseAuthMiddleware {\r\n    \r\n    appSettings: AppSettings;\r\n    protected msalConfig: Configuration;\r\n    protected msalClient: ConfidentialClientApplication;\r\n    protected tokenValidator: TokenValidator;\r\n    protected logger: Logger;\r\n\r\n    protected constructor(appSettings: AppSettings, msalConfig: Configuration) {\r\n        this.appSettings = appSettings;\r\n        this.msalConfig = msalConfig;\r\n        this.tokenValidator = new TokenValidator(this.appSettings, this.msalConfig, this.logger);\r\n        this.logger = new Logger(this.msalConfig.system.loggerOptions, packageName, packageVersion);\r\n        this.msalClient = new ConfidentialClientApplication(this.msalConfig);\r\n    }\r\n\r\n    abstract initialize(options: InitializationOptions): Router;\r\n\r\n    getMsalClient(): ConfidentialClientApplication {\r\n        return this.msalClient;\r\n    }\r\n\r\n    getLogger(): Logger {\r\n        return this.logger;\r\n    }\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport axios, { AxiosResponse, AxiosRequestConfig } from \"axios\";\r\nimport { StringUtils } from \"@azure/msal-common\";\r\n\r\nimport {\r\n    AccessControlConstants,\r\n    ErrorMessages\r\n} from \"../utils/Constants\";\r\n\r\nexport class FetchManager {\r\n\r\n    /**\r\n     * Calls a resource endpoint\r\n     * @param {string} endpoint\r\n     * @returns {Promise}\r\n     */\r\n    static callApiEndpoint = async (endpoint: string): Promise<AxiosResponse> => {\r\n        try {\r\n            const response: AxiosResponse = await axios.get(endpoint);\r\n            return response.data;\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls a resource endpoint with a raw access token\r\n     * using the authorization bearer token scheme\r\n     * @param {string} endpoint \r\n     * @param {string} accessToken \r\n     * @returns {Promise}\r\n     */\r\n    static callApiEndpointWithToken = async (endpoint: string, accessToken: string): Promise<AxiosResponse> => {\r\n\r\n        if (StringUtils.isEmpty(accessToken)) {\r\n            throw new Error(ErrorMessages.TOKEN_NOT_FOUND)\r\n        }\r\n\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`\r\n            }\r\n        };\r\n\r\n        try {\r\n            const response: AxiosResponse = await axios.get(endpoint, options);\r\n            return response.data;\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles queries against Microsoft Graph that return multiple pages of data  \r\n     * @param {string} accessToken: access token required by endpoint \r\n     * @param {string} nextPage: next page link\r\n     * @param {Array} data: stores data from each page\r\n     * @returns {Promise}\r\n     */\r\n    static handlePagination = async (accessToken: string, nextPage: string, data: string[] = []): Promise<string[]> => {\r\n\r\n        try {\r\n            const graphResponse = await FetchManager.callApiEndpointWithToken(nextPage, accessToken);\r\n            graphResponse[\"value\"].map((v) => data.push(v.id));\r\n\r\n            if (graphResponse[AccessControlConstants.PAGINATION_LINK]) {\r\n                return await FetchManager.handlePagination(accessToken, graphResponse[AccessControlConstants.PAGINATION_LINK], data)\r\n            } else {\r\n                return data;\r\n            }\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Request } from \"express\";\r\nimport { IUri, UrlString } from \"@azure/msal-common\";\r\n\r\nexport class UrlUtils {\r\n    /**\r\n     * Gets the absolute URL from a given request and path string\r\n     * @param {Request} req: express request object \r\n     * @param {string} url: a given URL\r\n     * @returns {string}\r\n     */\r\n    static ensureAbsoluteUrl = (req: Request, url: string): string => {\r\n        const urlComponents: IUri = new UrlString(url).getUrlComponents();\r\n\r\n        if (!urlComponents.Protocol) {\r\n            if (!urlComponents.HostNameAndPort) {\r\n                return req.protocol + \"://\" + req.get(\"host\") + url;\r\n            }\r\n            return req.protocol + \"://\" + url;\r\n        } else {\r\n            return url;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the path segment from a given URL\r\n     * @param {string} url: a given URL\r\n     * @returns {string}\r\n     */\r\n    static getPathFromUrl = (url: string): string => {\r\n        const urlComponents: IUri = new UrlString(url).getUrlComponents();\r\n        return `/${urlComponents.PathSegments.join(\"/\")}`;\r\n    };\r\n}\r\n","\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    RequestHandler,\r\n    Request,\r\n    Response,\r\n    NextFunction\r\n} from \"express\";\r\n\r\nimport { AccountInfo, OIDC_DEFAULT_SCOPES } from \"@azure/msal-common\";\r\n\r\nimport { TokenValidator } from \"../../crypto/TokenValidator\";\r\nimport { AccessTokenClaims, IdTokenClaims } from \"../../crypto/AuthToken\";\r\nimport { Resource } from \"../../config/AppSettings\";\r\nimport { ConfigHelper } from \"../../config/ConfigHelper\";\r\n\r\nimport {\r\n    AppServiceAuthenticationHeaders,\r\n    AppServiceEnvironmentVariables,\r\n    AppServiceAuthenticationEndpoints,\r\n    AppServiceAuthenticationQueryParameters\r\n} from \"../../utils/Constants\";\r\n\r\nexport class AppServiceAuthHelper {\r\n\r\n    constructor() {\r\n    \r\n    }\r\n\r\n    static isAppServiceAuthEnabled(): boolean {\r\n        if (process.env[AppServiceEnvironmentVariables.WEBSITE_AUTH_ENABLED] === \"True\") {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static getEffectiveScopesFromLoginParams(): string[] {\r\n        const loginParams = process.env[AppServiceEnvironmentVariables.WEBSITE_AUTH_LOGIN_PARAMS] as string;\r\n        const scopesList = loginParams.split(\"scope=\")[1].split(\" \");\r\n        const effectiveScopesList = scopesList.filter(scope => !OIDC_DEFAULT_SCOPES.includes(scope));\r\n        return effectiveScopesList;\r\n    }\r\n\r\n    static getLoginUri(postLoginRedirectUri): string {\r\n        const loginUri = \"https://\" + process.env[AppServiceEnvironmentVariables.WEBSITE_HOSTNAME] + AppServiceAuthenticationEndpoints.AAD_SIGN_IN_ENDPOINT + AppServiceAuthenticationQueryParameters.POST_LOGIN_REDIRECT_QUERY_PARAM + postLoginRedirectUri;\r\n        return loginUri;\r\n    }\r\n\r\n    static getLogoutUri(postLogoutRedirectUri): string {\r\n        const logoutUri = \"https://\" + process.env[AppServiceEnvironmentVariables.WEBSITE_HOSTNAME] + AppServiceAuthenticationEndpoints.AAD_SIGN_OUT_ENDPOINT + AppServiceAuthenticationQueryParameters.POST_LOGOUT_REDIRECT_QUERY_PARAM + postLogoutRedirectUri;\r\n        return logoutUri;\r\n    }\r\n\r\n    handleAppServiceAuth(appSettings): RequestHandler {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n\r\n            // check headers for id and access tokens\r\n            const rawIdToken = req.headers[AppServiceAuthenticationHeaders.APP_SERVICE_ID_TOKEN_HEADER.toLowerCase()] as string;\r\n            const rawAccessToken = req.headers[AppServiceAuthenticationHeaders.APP_SERVICE_ACCESS_TOKEN_HEADER.toLowerCase()] as string;\r\n\r\n            if (rawIdToken && !req.session.isAuthenticated) {\r\n\r\n                // TODO: validate the id token\r\n\r\n                // parse the id token\r\n                const idTokenClaims: IdTokenClaims = TokenValidator.decodeAuthToken(rawIdToken).payload;\r\n\r\n                req.session.isAuthenticated = true;\r\n\r\n                req.session.account = {\r\n                    tenantId: idTokenClaims.tid,\r\n                    homeAccountId: idTokenClaims.oid + \".\" + idTokenClaims.tid,\r\n                    localAccountId: idTokenClaims.oid,\r\n                    environment: idTokenClaims.iss.split(\"://\")[1].split(\"/\")[0],\r\n                    username: idTokenClaims.preferred_username,\r\n                    name: idTokenClaims.name,\r\n                    idTokenClaims: idTokenClaims\r\n                } as AccountInfo;\r\n            }\r\n\r\n            if (rawAccessToken) {\r\n\r\n                const accessTokenClaims: AccessTokenClaims = TokenValidator.decodeAuthToken(rawAccessToken).payload;\r\n\r\n                // get the name of the resource associated with scope\r\n                const scopes = accessTokenClaims.scp;\r\n                console.log('inAuthHelper', scopes)\r\n                const resourceName = ConfigHelper.getResourceNameFromScopes(scopes, appSettings);\r\n                \r\n                console.log('inAuthHelper', resourceName);\r\n\r\n                if (!req.session.protectedResources) {\r\n                    req.session.protectedResources = {}\r\n                }\r\n\r\n                req.session.protectedResources = {\r\n                    [resourceName]: {\r\n                        ...appSettings.protectedResources[resourceName],\r\n                        accessToken: rawAccessToken,\r\n                    } as Resource\r\n                };\r\n            }\r\n\r\n            next();\r\n        }\r\n    };\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport express, {\r\n    RequestHandler,\r\n    Request,\r\n    Response,\r\n    NextFunction,\r\n    Router\r\n} from \"express\";\r\n\r\nimport {\r\n    OIDC_DEFAULT_SCOPES,\r\n    InteractionRequiredAuthError,\r\n    PromptValue,\r\n    StringUtils,\r\n    ClientAuthError,\r\n} from \"@azure/msal-common\";\r\n\r\nimport {\r\n    Configuration,\r\n    CryptoProvider,\r\n    SilentFlowRequest,\r\n    AuthenticationResult\r\n} from \"@azure/msal-node\";\r\n\r\nimport { BaseAuthMiddleware } from \"../BaseAuthMiddleware\";\r\nimport { ConfigHelper } from \"../../config/ConfigHelper\";\r\nimport { IdTokenClaims } from \"../../crypto/AuthToken\";\r\nimport { FetchManager } from \"../../network/FetchManager\";\r\nimport { UrlUtils } from \"../../utils/UrlUtils\";\r\nimport { AppServiceAuthHelper } from \"./AppServiceAuthHelper\";\r\n\r\nimport {\r\n    Resource,\r\n    AppSettings,\r\n    AccessRule,\r\n} from \"../../config/AppSettings\";\r\n\r\nimport { AuthCodeParams } from \"../../utils/Types\";\r\n\r\nimport {\r\n    InitializationOptions,\r\n    TokenRequestOptions,\r\n    GuardOptions,\r\n    SignInOptions,\r\n    SignOutOptions,\r\n    HandleRedirectOptions\r\n} from \"../MiddlewareOptions\";\r\n\r\nimport {\r\n    AppStages,\r\n    ErrorMessages,\r\n    AccessControlConstants,\r\n    InfoMessages,\r\n    AppServiceAuthenticationHeaders\r\n} from \"../../utils/Constants\";\r\n\r\n\r\n/**\r\n * A simple wrapper around MSAL Node ConfidentialClientApplication object.\r\n * It offers a collection of middleware and utility methods that automate\r\n * basic authentication and authorization tasks in Express MVC web apps\r\n */\r\nexport class WebAppAuthMiddleware extends BaseAuthMiddleware {\r\n\r\n    private _cryptoProvider: CryptoProvider;\r\n\r\n    /**\r\n     * @param {AppSettings} appSettings\r\n     * @param {ICachePlugin} cache: cachePlugin\r\n     * @constructor\r\n     */\r\n    constructor(appSettings: AppSettings, msalConfig: Configuration) {\r\n        super(appSettings, msalConfig);\r\n        this._cryptoProvider = new CryptoProvider();\r\n    }\r\n\r\n    /**\r\n     * Initialize AuthProvider and set default routes and handlers\r\n     * @param {InitializationOptions} options\r\n     * @returns {Router}\r\n     */\r\n    initialize(options?: InitializationOptions): Router {\r\n\r\n        const appRouter = express.Router();\r\n\r\n        // handle redirect\r\n        appRouter.get(UrlUtils.getPathFromUrl(this.appSettings.authRoutes.redirect), this.handleRedirect());\r\n\r\n        appRouter.use((req: Request, res: Response, next: NextFunction) => {\r\n\r\n            if (!req.session) {\r\n                // TODO: handle gracefully\r\n                throw new Error(ErrorMessages.SESSION_NOT_FOUND);\r\n            }\r\n\r\n            // add session nonce for crsf\r\n            req.session.nonce = this._cryptoProvider.createNewGuid();\r\n            next();\r\n        });\r\n\r\n        if (AppServiceAuthHelper.isAppServiceAuthEnabled()) {\r\n            /**\r\n             * Add a handler to handle App Service Auth\r\n             */\r\n            const appServiceAuthHandler = new AppServiceAuthHelper();\r\n            appRouter.use(appServiceAuthHandler.handleAppServiceAuth(this.appSettings));\r\n        }\r\n\r\n        if (this.appSettings.authRoutes.frontChannelLogout) {\r\n            /**\r\n             * Expose front-channel logout route. For more information, visit: \r\n             * https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc#single-sign-out\r\n             */\r\n            appRouter.get(this.appSettings.authRoutes.frontChannelLogout, (req: Request, res: Response, next: NextFunction) => {\r\n                req.session.destroy(() => {\r\n                    res.sendStatus(200);\r\n                });\r\n            });\r\n        }\r\n\r\n        return appRouter;\r\n    }\r\n\r\n    /**\r\n     * Initiates sign in flow\r\n     * @param {SignInOptions} options: options to modify login request\r\n     * @returns {RequestHandler}\r\n     */\r\n    signIn(options?: SignInOptions): RequestHandler {\r\n        return (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n\r\n            let loginUri; // redirect after destroying session\r\n            const postLoginRedirectUri = UrlUtils.ensureAbsoluteUrl(req, options.successRedirect);\r\n\r\n            if (AppServiceAuthHelper.isAppServiceAuthEnabled()) {\r\n                /**\r\n                 * App Service Auth is enabled. Use App Service Auth logout endpoint.\r\n                 */\r\n                loginUri = AppServiceAuthHelper.getLoginUri(postLoginRedirectUri);\r\n                res.redirect(loginUri);\r\n            } else {\r\n                // TODO: encrypt state parameter \r\n                const state = this._cryptoProvider.base64Encode(\r\n                    JSON.stringify({\r\n                        stage: AppStages.SIGN_IN,\r\n                        path: options.successRedirect,\r\n                        nonce: req.session.nonce,\r\n                    })\r\n                );\r\n\r\n                const params: AuthCodeParams = {\r\n                    authority: this.msalConfig.auth.authority,\r\n                    scopes: OIDC_DEFAULT_SCOPES,\r\n                    state: state,\r\n                    redirect: UrlUtils.ensureAbsoluteUrl(req, this.appSettings.authRoutes.redirect)\r\n                };\r\n\r\n                // get url to sign user in\r\n                return this.getAuthCode(req, res, next, params);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initiate sign out and destroy the session\r\n     * @param options: options to modify logout request \r\n     * @returns {RequestHandler}\r\n     */\r\n    signOut(options?: SignOutOptions): RequestHandler {\r\n        return (req: Request, res: Response, next: NextFunction): void => {\r\n\r\n            let logoutUri; // redirect after destroying session\r\n            const postLogoutRedirectUri = UrlUtils.ensureAbsoluteUrl(req, options.successRedirect);\r\n\r\n            if (AppServiceAuthHelper.isAppServiceAuthEnabled()) {\r\n                /**\r\n                 * App Service Auth is enabled. Use App Service Auth logout endpoint.\r\n                 */\r\n                logoutUri = AppServiceAuthHelper.getLogoutUri(postLogoutRedirectUri);\r\n            } else {\r\n                /**\r\n                 * Construct a logout URI and redirect the user to end the\r\n                 * session with Azure AD/B2C. For more information, visit:\r\n                 * (AAD) https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc#send-a-sign-out-request\r\n                 * (B2C) https://docs.microsoft.com/azure/active-directory-b2c/openid-connect#send-a-sign-out-request\r\n                 */\r\n                logoutUri = `${this.msalConfig.auth.authority}/oauth2/v2.0/logout?post_logout_redirect_uri=${postLogoutRedirectUri}`;\r\n            }\r\n\r\n            req.session.destroy(() => {\r\n                res.redirect(logoutUri);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Middleware that handles redirect depending on request state\r\n     * There are basically 2 stages: sign-in and acquire token\r\n     * @param {HandleRedirectOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    handleRedirect(options?: HandleRedirectOptions): RequestHandler {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n            if (req.query.state) {\r\n                const state = JSON.parse(this._cryptoProvider.base64Decode(req.query.state as string));\r\n\r\n                // check if nonce matches\r\n                if (state.nonce === req.session.nonce) {\r\n                    switch (state.stage) {\r\n                        case AppStages.SIGN_IN: {\r\n                            // token request should have auth code\r\n                            req.session.tokenRequest.code = req.query.code as string;\r\n\r\n                            try {\r\n                                // exchange auth code for tokens\r\n                                const tokenResponse: AuthenticationResult = await this.msalClient.acquireTokenByCode(req.session.tokenRequest);\r\n\r\n                                try {\r\n                                    const isIdTokenValid = await this.tokenValidator.validateIdToken(tokenResponse.idToken);\r\n\r\n                                    if (isIdTokenValid) {\r\n\r\n                                        // assign session variables\r\n                                        req.session.isAuthenticated = true;\r\n                                        req.session.account = tokenResponse.account;\r\n\r\n                                        res.redirect(state.path);\r\n                                    } else {\r\n                                        this.logger.error(ErrorMessages.INVALID_TOKEN);\r\n                                        res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                                    }\r\n                                } catch (error) {\r\n                                    this.logger.error(ErrorMessages.CANNOT_VALIDATE_TOKEN);\r\n                                    next(error)\r\n                                }\r\n                            } catch (error) {\r\n                                this.logger.error(ErrorMessages.TOKEN_ACQUISITION_FAILED);\r\n                                next(error)\r\n                            }\r\n                            break;\r\n                        }\r\n\r\n                        case AppStages.ACQUIRE_TOKEN: {\r\n                            // get the name of the resource associated with scope\r\n                            const resourceName = ConfigHelper.getResourceNameFromScopes(req.session.tokenRequest.scopes, this.appSettings);\r\n\r\n                            req.session.tokenRequest.code = req.query.code as string;\r\n\r\n                            try {\r\n                                const tokenResponse: AuthenticationResult = await this.msalClient.acquireTokenByCode(req.session.tokenRequest);\r\n                                req.session.protectedResources[resourceName].accessToken = tokenResponse.accessToken;\r\n                                res.redirect(state.path);\r\n                            } catch (error) {\r\n                                this.logger.error(ErrorMessages.TOKEN_ACQUISITION_FAILED);\r\n                                next(error);\r\n                            }\r\n                            break;\r\n                        }\r\n\r\n                        default:\r\n                            this.logger.error(ErrorMessages.CANNOT_DETERMINE_APP_STAGE);\r\n                            res.redirect(this.appSettings.authRoutes.error);\r\n                            break;\r\n                    }\r\n                } else {\r\n                    this.logger.error(ErrorMessages.NONCE_MISMATCH);\r\n                    res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                }\r\n            } else {\r\n                this.logger.error(ErrorMessages.STATE_NOT_FOUND);\r\n                res.redirect(this.appSettings.authRoutes.unauthorized);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Middleware that gets tokens via acquireToken*\r\n     * @param {TokenRequestOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    getToken(options: TokenRequestOptions): RequestHandler {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n\r\n            // get scopes for token request\r\n            const scopes = options.resource.scopes;\r\n            console.log(scopes);\r\n            const resourceName = ConfigHelper.getResourceNameFromScopes(scopes, this.appSettings)\r\n            console.log(resourceName);\r\n\r\n            if (AppServiceAuthHelper.isAppServiceAuthEnabled()) {\r\n                if (req.session.protectedResources[resourceName]) {\r\n                    if (req.session.protectedResources[resourceName].accessToken) {\r\n                        return next();\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!req.session.protectedResources) {\r\n                req.session.protectedResources = {}\r\n            }\r\n\r\n            req.session.protectedResources = {\r\n                [resourceName]: {\r\n                    ...this.appSettings.protectedResources[resourceName],\r\n                    accessToken: null,\r\n                } as Resource\r\n            };\r\n\r\n            try {\r\n                const silentRequest: SilentFlowRequest = {\r\n                    account: req.session.account,\r\n                    scopes: scopes,\r\n                };\r\n\r\n                // acquire token silently to be used in resource call\r\n                const tokenResponse: AuthenticationResult = await this.msalClient.acquireTokenSilent(silentRequest);\r\n\r\n                // In B2C scenarios, sometimes an access token is returned empty.\r\n                // In that case, we will acquire token interactively instead.\r\n                if (StringUtils.isEmpty(tokenResponse.accessToken)) {\r\n                    this.logger.error(ErrorMessages.TOKEN_NOT_FOUND);\r\n                    throw new InteractionRequiredAuthError(ErrorMessages.INTERACTION_REQUIRED);\r\n                }\r\n\r\n                req.session.protectedResources[resourceName].accessToken = tokenResponse.accessToken;\r\n                next();\r\n            } catch (error) {\r\n                // in case there are no cached tokens, initiate an interactive call\r\n                if (error instanceof InteractionRequiredAuthError || (error instanceof ClientAuthError && error.errorCode === \"no_tokens_found\")) {\r\n                    const state = this._cryptoProvider.base64Encode(\r\n                        JSON.stringify({\r\n                            stage: AppStages.ACQUIRE_TOKEN,\r\n                            path: req.originalUrl,\r\n                            nonce: req.session.nonce,\r\n                        })\r\n                    );\r\n\r\n                    const params: AuthCodeParams = {\r\n                        authority: this.msalConfig.auth.authority,\r\n                        scopes: scopes,\r\n                        state: state,\r\n                        redirect: UrlUtils.ensureAbsoluteUrl(req, this.appSettings.authRoutes.redirect),\r\n                        account: req.session.account,\r\n                    };\r\n\r\n                    // initiate the first leg of auth code grant to get token\r\n                    return this.getAuthCode(req, res, next, params);\r\n                } else {\r\n                    next(error);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Check if authenticated in session\r\n     * @param {GuardOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    isAuthenticated(options?: GuardOptions): RequestHandler {\r\n        return (req: Request, res: Response, next: NextFunction): void => {\r\n            if (req.session) {\r\n                if (!req.session.isAuthenticated) {\r\n                    this.logger.error(ErrorMessages.NOT_PERMITTED);\r\n                    return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                }\r\n\r\n                next();\r\n            } else {\r\n                this.logger.error(ErrorMessages.SESSION_NOT_FOUND);\r\n                res.redirect(this.appSettings.authRoutes.unauthorized);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Checks if the user has access for this route, defined in access matrix\r\n     * @param {GuardOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    hasAccess(options?: GuardOptions): RequestHandler {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n            if (req.session && this.appSettings.accessMatrix) {\r\n\r\n                const checkFor = options.accessRule.hasOwnProperty(AccessControlConstants.GROUPS) ? AccessControlConstants.GROUPS : AccessControlConstants.ROLES;\r\n\r\n                switch (checkFor) {\r\n                    case AccessControlConstants.GROUPS:\r\n\r\n                        if (req.session.account.idTokenClaims[AccessControlConstants.GROUPS] === undefined) {\r\n                            if (req.session.account.idTokenClaims[AccessControlConstants.CLAIM_NAMES]\r\n                                || req.session.account.idTokenClaims[AccessControlConstants.CLAIM_SOURCES]) {\r\n                                this.logger.warning(InfoMessages.OVERAGE_OCCURRED);\r\n                                return await this.handleOverage(req, res, next, options.accessRule);\r\n                            } else {\r\n                                this.logger.error(ErrorMessages.USER_HAS_NO_GROUP);\r\n                                return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                            }\r\n                        } else {\r\n                            const groups = req.session.account.idTokenClaims[AccessControlConstants.GROUPS];\r\n\r\n                            if (!this.checkAccessRule(req.method, options.accessRule, groups, AccessControlConstants.GROUPS)) {\r\n                                return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                            }\r\n                        }\r\n\r\n                        next();\r\n                        break;\r\n\r\n                    case AccessControlConstants.ROLES:\r\n                        if (req.session.account.idTokenClaims[AccessControlConstants.ROLES] === undefined) {\r\n                            this.logger.error(ErrorMessages.USER_HAS_NO_ROLE);\r\n                            return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                        } else {\r\n                            const roles = req.session.account.idTokenClaims[AccessControlConstants.ROLES];\r\n\r\n                            if (!this.checkAccessRule(req.method, options.accessRule, roles, AccessControlConstants.ROLES)) {\r\n                                return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                            }\r\n                        }\r\n\r\n                        next();\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n            } else {\r\n                res.redirect(this.appSettings.authRoutes.unauthorized);\r\n            }\r\n        }\r\n    }\r\n\r\n    // ============== UTILS ===============\r\n\r\n    /**\r\n     * This method is used to generate an auth code url request\r\n     * @param {Request} req: express request object\r\n     * @param {Response} res: express response object\r\n     * @param {NextFunction} next: express next function\r\n     * @param {AuthCodeParams} params: modifies auth code url request\r\n     * @returns {Promise}\r\n     */\r\n    private async getAuthCode(req: Request, res: Response, next: NextFunction, params: AuthCodeParams): Promise<void> {\r\n\r\n        // prepare the request\r\n        req.session.authCodeRequest = {\r\n            authority: params.authority,\r\n            scopes: params.scopes,\r\n            state: params.state,\r\n            redirectUri: params.redirect,\r\n            prompt: params.prompt,\r\n            account: params.account,\r\n        }\r\n\r\n        req.session.tokenRequest = {\r\n            authority: params.authority,\r\n            scopes: params.scopes,\r\n            redirectUri: params.redirect,\r\n            code: undefined,\r\n        }\r\n\r\n        // request an authorization code to exchange for tokens\r\n        try {\r\n            const response = await this.msalClient.getAuthCodeUrl(req.session.authCodeRequest);\r\n            res.redirect(response);\r\n        } catch (error) {\r\n            this.logger.error(ErrorMessages.AUTH_CODE_NOT_OBTAINED);\r\n            next(error);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handles group overage claims by querying MS Graph /memberOf endpoint\r\n     * @param {Request} req: express request object\r\n     * @param {Response} res: express response object\r\n     * @param {NextFunction} next: express next function\r\n     * @param {AccessRule} rule: a given access rule\r\n     * @returns {Promise}\r\n     */\r\n    private async handleOverage(req: Request, res: Response, next: NextFunction, rule: AccessRule): Promise<void> {\r\n        const { _claim_names, _claim_sources, ...newIdTokenClaims } = <IdTokenClaims>req.session.account.idTokenClaims;\r\n\r\n        const silentRequest: SilentFlowRequest = {\r\n            account: req.session.account,\r\n            scopes: AccessControlConstants.GRAPH_MEMBER_SCOPES.split(\" \"),\r\n        };\r\n\r\n        try {\r\n            // acquire token silently to be used in resource call\r\n            const tokenResponse = await this.msalClient.acquireTokenSilent(silentRequest);\r\n            try {\r\n                const graphResponse = await FetchManager.callApiEndpointWithToken(AccessControlConstants.GRAPH_MEMBERS_ENDPOINT, tokenResponse.accessToken);\r\n\r\n                /**\r\n                 * Some queries against Microsoft Graph return multiple pages of data either due to server-side paging \r\n                 * or due to the use of the $top query parameter to specifically limit the page size in a request. \r\n                 * When a result set spans multiple pages, Microsoft Graph returns an @odata.nextLink property in \r\n                 * the response that contains a URL to the next page of results. Learn more at https://docs.microsoft.com/graph/paging\r\n                 */\r\n                if (graphResponse[AccessControlConstants.PAGINATION_LINK]) {\r\n                    try {\r\n                        const userGroups = await FetchManager.handlePagination(tokenResponse.accessToken, graphResponse[AccessControlConstants.PAGINATION_LINK]);\r\n\r\n                        req.session.account.idTokenClaims = {\r\n                            ...newIdTokenClaims,\r\n                            groups: userGroups\r\n                        }\r\n\r\n                        if (!this.checkAccessRule(req.method, rule, req.session.account.idTokenClaims[AccessControlConstants.GROUPS], AccessControlConstants.GROUPS)) {\r\n                            return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                        } else {\r\n                            return next();\r\n                        }\r\n                    } catch (error) {\r\n                        next(error);\r\n                    }\r\n                } else {\r\n                    req.session.account.idTokenClaims = {\r\n                        ...newIdTokenClaims,\r\n                        groups: graphResponse[\"value\"].map((v) => v.id)\r\n                    }\r\n\r\n                    if (!this.checkAccessRule(req.method, rule, req.session.account.idTokenClaims[AccessControlConstants.GROUPS], AccessControlConstants.GROUPS)) {\r\n                        return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                    } else {\r\n                        return next();\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                next(error);\r\n            }\r\n        } catch (error) {\r\n            next(error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the request passes a given access rule\r\n     * @param {string} method: HTTP method for this route\r\n     * @param {AccessRule} rule: access rule for this route\r\n     * @param {Array} creds: user's credentials i.e. roles or groups\r\n     * @param {string} credType: roles or groups\r\n     * @returns {boolean}\r\n     */\r\n    private checkAccessRule(method: string, rule: AccessRule, creds: string[], credType: string): boolean {\r\n        if (rule.methods.includes(method)) {\r\n            switch (credType) {\r\n                case AccessControlConstants.GROUPS:\r\n                    if (rule.groups.filter(elem => creds.includes(elem)).length < 1) {\r\n                        this.logger.error(ErrorMessages.USER_NOT_IN_GROUP);\r\n                        return false;\r\n                    }\r\n                    break;\r\n\r\n                case AccessControlConstants.ROLES:\r\n                    if (rule.roles.filter(elem => creds.includes(elem)).length < 1) {\r\n                        this.logger.error(ErrorMessages.USER_NOT_IN_ROLE);\r\n                        return false;\r\n                    }\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        } else {\r\n            this.logger.error(ErrorMessages.METHOD_NOT_ALLOWED);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { DefaultAzureCredential } from \"@azure/identity\";\r\nimport { CertificateClient, KeyVaultCertificate } from \"@azure/keyvault-certificates\";\r\nimport { KeyVaultSecret, SecretClient } from \"@azure/keyvault-secrets\";\r\n\r\nimport { KeyVaultCredential, ClientCertificate } from \"../config/AppSettings\";\r\nimport { KeyVaultCredentialTypes } from \"../utils/Constants\";\r\n\r\nexport type KeyVaultCredentialResponse = {\r\n    type: KeyVaultCredentialTypes.SECRET | KeyVaultCredentialTypes.CERTIFICATE,\r\n    value: string & ClientCertificate\r\n}\r\n\r\nexport class KeyVaultManager {\r\n\r\n    /**\r\n     * Fetches credentials from Key Vault and updates appSettings\r\n     * @param {AppSettings} appSettings \r\n     * @returns {Promise}\r\n     */\r\n    async getCredentialFromKeyVault(keyVaultCredential: KeyVaultCredential): Promise<KeyVaultCredentialResponse> {\r\n\r\n        const credential = new DefaultAzureCredential();\r\n\r\n        switch (keyVaultCredential.credentialType) {\r\n            case KeyVaultCredentialTypes.SECRET: {\r\n                try {\r\n                    const secretResponse = await this.getSecretCredential(keyVaultCredential, credential);\r\n\r\n                    return {\r\n                        type: KeyVaultCredentialTypes.SECRET,\r\n                        value: secretResponse.value,\r\n                    } as KeyVaultCredentialResponse;\r\n\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n                break;\r\n            }\r\n\r\n            case KeyVaultCredentialTypes.CERTIFICATE: {\r\n                try {\r\n                    const certificateResponse = await this.getCertificateCredential(keyVaultCredential, credential);\r\n                    const secretResponse = await this.getSecretCredential(keyVaultCredential, credential);\r\n\r\n                    return {\r\n                        type: KeyVaultCredentialTypes.CERTIFICATE,\r\n                        value: {\r\n                            thumbprint: certificateResponse.properties.x509Thumbprint.toString(),\r\n                            privateKey: secretResponse.value.split('-----BEGIN CERTIFICATE-----\\n')[0]\r\n                        }\r\n                    } as KeyVaultCredentialResponse;\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n                break;\r\n            }\r\n\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets a certificate credential from Key Vault\r\n     * @param {AppSettings} config \r\n     * @param {DefaultAzureCredential} credential \r\n     * @returns {Promise}\r\n     */\r\n    async getCertificateCredential(keyVaultCredential: KeyVaultCredential, credential: DefaultAzureCredential): Promise<KeyVaultCertificate> {\r\n\r\n        // Initialize secretClient with credentials\r\n        const secretClient = new CertificateClient(keyVaultCredential.keyVaultUrl, credential);\r\n\r\n        try {\r\n            const keyVaultCertificate = await secretClient.getCertificate(keyVaultCredential.credentialName);\r\n            return keyVaultCertificate;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets a secret credential from Key Vault\r\n     * @param {AppSettings} config \r\n     * @param {DefaultAzureCredential} credential \r\n     * @returns {Promise}\r\n     */\r\n    async getSecretCredential(keyVaultCredential: KeyVaultCredential, credential: DefaultAzureCredential): Promise<KeyVaultSecret> {\r\n\r\n        // Initialize secretClient with credentials\r\n        const secretClient = new SecretClient(keyVaultCredential.keyVaultUrl, credential);\r\n\r\n        try {\r\n            const keyVaultSecret = await secretClient.getSecret(keyVaultCredential.credentialName);\r\n            return keyVaultSecret;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return error;\r\n        }\r\n    }\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ICachePlugin } from \"@azure/msal-node\";\r\nimport { IDistributedPersistence } from \"./IDistributedPersistence\";\r\n\r\nexport class DistributedCachePlugin implements ICachePlugin {\r\n\r\n    private static instance: DistributedCachePlugin;\r\n\r\n    private persistenceManager: IDistributedPersistence;\r\n    private persistenceKey: string;\r\n\r\n    private constructor(persistenceManager: IDistributedPersistence, persistenceKey?: string) {\r\n        this.persistenceManager = persistenceManager;\r\n        this.persistenceKey = persistenceKey;\r\n    }\r\n\r\n    static getInstance(persistenceManager: IDistributedPersistence, persistenceKey?: string): DistributedCachePlugin {\r\n        if (!DistributedCachePlugin.instance) {\r\n            DistributedCachePlugin.instance = new DistributedCachePlugin(persistenceManager, persistenceKey);\r\n        }\r\n\r\n        return DistributedCachePlugin.instance;\r\n    }\r\n\r\n    async beforeCacheAccess(cacheContext): Promise<void> {\r\n        return new Promise(async (resolve, reject) => {\r\n            const sessionData = await this.persistenceManager.get(this.persistenceKey);\r\n            if (sessionData) {\r\n                const cacheData = await this.persistenceManager.get(JSON.parse(sessionData).account.homeAccountId);\r\n                cacheContext.tokenCache.deserialize(cacheData);\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    async afterCacheAccess(cacheContext): Promise<void> {\r\n        return new Promise(async (resolve, reject) => {\r\n            if (cacheContext.cacheHasChanged) {\r\n                const kvStore = cacheContext.tokenCache.getKVStore();\r\n                const homeAccountId = Object.values(kvStore)[1][\"homeAccountId\"];\r\n                await this.persistenceManager.set(homeAccountId, cacheContext.tokenCache.serialize());\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    UrlString,\r\n    Constants,\r\n} from \"@azure/msal-common\";\r\n\r\nimport {\r\n    ICachePlugin,\r\n    Configuration\r\n} from \"@azure/msal-node\";\r\n\r\nimport { AppSettings } from \"./AppSettings\";\r\n\r\nimport {\r\n    DEFAULT_LOGGER_OPTIONS\r\n} from \"../utils/Constants\"\r\n\r\nimport { IDistributedPersistence } from \"../cache/IDistributedPersistence\";\r\nimport { DistributedCachePlugin } from \"../cache/DistributedCachePlugin\";\r\n\r\nexport class MsalConfiguration {\r\n\r\n    /**\r\n     * Maps the custom configuration object to configuration\r\n     * object expected by MSAL Node ConfidentialClientApplication class\r\n     * @param {AppSettings} appSettings: configuration object\r\n     * @param {ICachePlugin} cachePlugin: custom cache plugin\r\n     * @param {IDistributedPersistence} distributedPersistence: distributed persistence client\r\n     * @returns {Configuration}\r\n     */\r\n    static getMsalConfiguration(appSettings: AppSettings, persistenceManager?: IDistributedPersistence): Configuration {\r\n        return {\r\n            auth: {\r\n                clientId: appSettings.appCredentials.clientId,\r\n                authority: appSettings.b2cPolicies ?\r\n                    Object.entries(appSettings.b2cPolicies)[0][1][\"authority\"] // the first policy/user-flow is the default authority\r\n                    :\r\n                    appSettings.appCredentials.instance ? `https://${appSettings.appCredentials.instance}/${appSettings.appCredentials.tenantInfo}` \r\n                    :\r\n                    `https://${Constants.DEFAULT_AUTHORITY_HOST}/${appSettings.appCredentials.tenantInfo}`,\r\n                ...(appSettings.appCredentials.hasOwnProperty(\"clientSecret\")) && { clientSecret: appSettings.appCredentials.clientSecret },\r\n                ...(appSettings.appCredentials.hasOwnProperty(\"clientCertificate\")) && { clientCertificate: appSettings.appCredentials.clientCertificate },\r\n                knownAuthorities: appSettings.b2cPolicies ?\r\n                    [UrlString.getDomainFromUrl(Object.entries(appSettings.b2cPolicies)[0][1][\"authority\"])] // in B2C scenarios\r\n                    :\r\n                    [],\r\n            },\r\n            cache: {\r\n                cachePlugin: persistenceManager ? DistributedCachePlugin.getInstance(persistenceManager) : null\r\n            },\r\n            system: {\r\n                loggerOptions: appSettings.loggerOptions ? appSettings.loggerOptions : DEFAULT_LOGGER_OPTIONS,\r\n            },\r\n        };\r\n    };\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Configuration } from \"@azure/msal-node\";\r\n\r\nimport { BaseMiddlewareBuilder } from \"../BaseMiddlewareBuilder\";\r\nimport { WebAppAuthMiddleware } from \"./WebAppAuthMiddleware\";\r\nimport { KeyVaultManager } from \"../../network/KeyVaultManager\";\r\nimport { MsalConfiguration } from \"../../config/MsalConfiguration\";\r\nimport { AppSettings } from \"../../config/AppSettings\";\r\n\r\nexport class WebAppMiddlewareBuilder extends BaseMiddlewareBuilder {\r\n\r\n    appSettings: AppSettings;\r\n    private msalConfig: Configuration;\r\n\r\n    constructor(appSettings: AppSettings) {\r\n        super(appSettings)\r\n    };\r\n\r\n    /**\r\n     * Synchronously builds the MSAL middleware with the provided configuration.\r\n     * @returns {WebAppAuthMiddleware}\r\n     */\r\n    build(): WebAppAuthMiddleware {\r\n        // TODO: throw error if key vault credential is being built\r\n        this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings, this.persistenceManager);\r\n        return new WebAppAuthMiddleware(this.appSettings, this.msalConfig);\r\n    }\r\n\r\n    /**\r\n     * Asynchronously builds the MSAL middleware with the provided configuration.\r\n     * @returns {Promise}\r\n     */\r\n    async buildAsync(): Promise<WebAppAuthMiddleware> {\r\n        try {\r\n            if (this.keyVaultCredential) {\r\n                const keyVaultManager = new KeyVaultManager();\r\n                const credential = await keyVaultManager.getCredentialFromKeyVault(this.keyVaultCredential);\r\n                this.appSettings.appCredentials[credential.type] = credential.value;\r\n            }\r\n\r\n            if (this.persistenceManager) {\r\n                this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings, this.persistenceManager);\r\n            } else {\r\n                this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings);\r\n            }\r\n\r\n            return new WebAppAuthMiddleware(this.appSettings, this.msalConfig);\r\n        } catch (error) {\r\n            throw new Error(error);\r\n        }\r\n    }\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport express, {\r\n    RequestHandler,\r\n    Request,\r\n    Response,\r\n    NextFunction,\r\n    Router\r\n} from \"express\";\r\n\r\nimport {\r\n    AuthenticationResult,\r\n} from \"@azure/msal-common\";\r\n\r\nimport {\r\n    Configuration,\r\n    OnBehalfOfRequest,\r\n} from \"@azure/msal-node\";\r\n\r\nimport { BaseAuthMiddleware } from \"../BaseAuthMiddleware\";\r\n\r\nimport {\r\n    AppSettings,\r\n} from \"../../config/AppSettings\";\r\n\r\nimport {\r\n    InitializationOptions,\r\n    TokenRequestOptions,\r\n    GuardOptions,\r\n} from \"../MiddlewareOptions\";\r\n\r\nimport {\r\n    ErrorMessages,\r\n} from \"../../utils/Constants\";\r\n\r\n/**\r\n * A simple wrapper around MSAL Node ConfidentialClientApplication object.\r\n * It offers a collection of middleware and utility methods that automate\r\n * basic authentication and authorization tasks in RESTful APIs.\r\n */\r\nexport class WebApiAuthMiddleware extends BaseAuthMiddleware {\r\n\r\n    /**\r\n     * @param {AppSettings} appSettings\r\n     * @param {Configuration} msalConfig\r\n     * @constructor\r\n     */\r\n    constructor(appSettings: AppSettings, msalConfig: Configuration) {\r\n        super(appSettings, msalConfig);\r\n    }\r\n\r\n    /**\r\n     * Initialize AuthProvider and set default routes and handlers\r\n     * @param {InitializationOptions} options\r\n     * @returns {Router}\r\n     */\r\n    initialize(options?: InitializationOptions): Router {\r\n        const appRouter = express.Router();\r\n\r\n        appRouter.use((req: Request, res: Response, next: NextFunction) => {\r\n            // req.app.getMsalClient = () => this.getMsalClient();\r\n            // req.app.getLogger = () => this.getLogger();\r\n            next();\r\n        });\r\n\r\n        return appRouter;\r\n    }\r\n\r\n    /**\r\n     * Middleware that gets tokens via OBO flow. Used in web API scenarios\r\n     * @param {TokenRequestOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    getTokenOnBehalf(options: TokenRequestOptions): RequestHandler {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n            const authHeader: string = req.headers.authorization;\r\n\r\n            // get scopes for token request\r\n            const scopes: string[] = options.resource.scopes;\r\n\r\n            // get the raw access token from authZ header\r\n            const rawAccessToken: string = authHeader.split(\" \")[1];\r\n            req.oboAssertion = rawAccessToken;\r\n\r\n            const oboRequest: OnBehalfOfRequest = {\r\n                oboAssertion: rawAccessToken,\r\n                scopes: scopes,\r\n            }\r\n\r\n            try {\r\n                // TODO: check cache first\r\n                const tokenResponse: AuthenticationResult = await this.msalClient.acquireTokenOnBehalfOf(oboRequest);\r\n                req.oboToken = tokenResponse.accessToken;\r\n                next();\r\n            } catch (error) {\r\n                next(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Receives access token in req authorization header\r\n     * and validates it using the jwt.verify\r\n     * @param {GuardOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    isAuthorized(options?: GuardOptions): RequestHandler {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n            const rawAccessToken: string = req.headers.authorization.split(\" \")[1];\r\n\r\n            if (req.headers.authorization) {\r\n                if (!(await this.tokenValidator.validateAccessToken(rawAccessToken, `${req.baseUrl}${req.path}`))) {\r\n                    this.logger.error(ErrorMessages.INVALID_TOKEN);\r\n                    return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                }\r\n\r\n                next();\r\n            } else {\r\n                this.logger.error(ErrorMessages.TOKEN_NOT_FOUND);\r\n                res.redirect(this.appSettings.authRoutes.unauthorized);\r\n            }\r\n        }\r\n    };\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Configuration } from \"@azure/msal-node\";\r\n\r\nimport { BaseMiddlewareBuilder } from \"../BaseMiddlewareBuilder\";\r\nimport { WebApiAuthMiddleware } from \"./WebApiAuthMiddleware\";\r\nimport { KeyVaultManager } from \"../../network/KeyVaultManager\";\r\nimport { MsalConfiguration } from \"../../config/MsalConfiguration\";\r\nimport { AppSettings } from \"../../config/AppSettings\";\r\n\r\nexport class WebApiMiddlewareBuilder extends BaseMiddlewareBuilder {\r\n\r\n    appSettings: AppSettings;\r\n    private msalConfig: Configuration;\r\n\r\n    constructor(appSettings: AppSettings) {\r\n        super(appSettings)\r\n    };\r\n\r\n    /**\r\n     * Synchronously builds the MSAL middleware with the provided configuration.\r\n     * @returns {WebApiAuthMiddleware}\r\n     */\r\n    build(): WebApiAuthMiddleware {\r\n        // TODO: throw error if key vault credential is being built\r\n        this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings, this.persistenceManager);\r\n        return new WebApiAuthMiddleware(this.appSettings, this.msalConfig);\r\n    }\r\n\r\n    /**\r\n     * Asynchronously builds the MSAL middleware with the provided configuration.\r\n     * @returns {Promise}\r\n     */\r\n    async buildAsync(): Promise<WebApiAuthMiddleware> {\r\n        try {\r\n\r\n            if (this.keyVaultCredential) {\r\n                const keyVaultManager = new KeyVaultManager();\r\n                const credential = await keyVaultManager.getCredentialFromKeyVault(this.keyVaultCredential);\r\n                this.appSettings.appCredentials[credential.type] = credential.value;\r\n            }\r\n\r\n            if (this.persistenceManager) {\r\n                this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings, this.persistenceManager);\r\n            } else {\r\n                this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings);\r\n            }\r\n\r\n            return new WebApiAuthMiddleware(this.appSettings, this.msalConfig);\r\n        } catch (error) {\r\n            throw new Error(error);\r\n        }\r\n    }\r\n}"],"names":["undefined","AppStages","AADAuthorityConstants","COMMON","ORGANIZATIONS","CONSUMERS","KeyVaultCredentialTypes","AppServiceAuthenticationHeaders","APP_SERVICE_AUTHENTICATION_HEADER","APP_SERVICE_ACCESS_TOKEN_HEADER","APP_SERVICE_ID_TOKEN_HEADER","APP_SERVICE_REFRESH_TOKEN_HEADER","APP_SERVICE_ACCESS_TOKEN_EXPIRES_HEADER","APP_SERVICE_USER_OID_HEADER","APP_SERVICE_USER_UPN_HEADER","APP_SERVICE_IDP_X_HEADER","AppServiceAuthenticationEndpoints","ID_TOKEN_ENDPOINT","POST_LOGOUT_DEFAULT_ENDPOINT","POST_LOGIN_DEFAULT_ENDPOINT","AAD_SIGN_IN_ENDPOINT","AAD_SIGN_OUT_ENDPOINT","TOKEN_REFRESH_ENDPOINT","AAD_REDIRECT_ENDPOINT","AppServiceAuthenticationQueryParameters","POST_LOGIN_REDIRECT_QUERY_PARAM","POST_LOGOUT_REDIRECT_QUERY_PARAM","AppServiceEnvironmentVariables","WEBSITE_AUTH_ENABLED","WEBSITE_AUTH_ALLOWED_AUDIENCES","WEBSITE_AUTH_DEFAULT_PROVIDER","WEBSITE_AUTH_TOKEN_STORE","WEBSITE_AUTH_LOGIN_PARAMS","WEBSITE_AUTH_PRESERVE_URL_FRAGMENT","WEBSITE_AUTH_OPENID_ISSUER","WEBSITE_AUTH_CLIENT_ID","WEBSITE_HOSTNAME","WEBSITE_SITE_NAME","WEBSITE_AUTH_REQUIRE_HTTPS","WEBSITE_AUTH_UNAUTHENTICATED_ACTION","WEBSITE_AUTH_API_PREFIX","MICROSOFT_PROVIDER_AUTHENTICATION_SECRET","AccessControlConstants","GROUPS","ROLES","CLAIM_NAMES","CLAIM_SOURCES","PAGINATION_LINK","GRAPH_MEMBERS_ENDPOINT","GRAPH_MEMBER_SCOPES","InfoMessages","APP_SERVICE_AUTH_DETECTED","REQUEST_FOR_RESOURCE","OVERAGE_OCCURRED","ErrorMessages","NOT_PERMITTED","INVALID_TOKEN","CANNOT_DETERMINE_APP_STAGE","CANNOT_VALIDATE_TOKEN","NONCE_MISMATCH","INTERACTION_REQUIRED","TOKEN_ACQUISITION_FAILED","AUTH_CODE_NOT_OBTAINED","TOKEN_NOT_FOUND","TOKEN_NOT_DECODED","TOKEN_NOT_VERIFIED","KEYS_NOT_OBTAINED","STATE_NOT_FOUND","USER_HAS_NO_ROLE","USER_NOT_IN_ROLE","USER_HAS_NO_GROUP","USER_NOT_IN_GROUP","METHOD_NOT_ALLOWED","RULE_NOT_FOUND","SESSION_NOT_FOUND","KEY_VAULT_CONFIG_NOT_FOUND","ConfigurationErrorMessages","NO_CLIENT_ID","INVALID_CLIENT_ID","NO_TENANT_INFO","INVALID_TENANT_INFO","NO_CLIENT_CREDENTIAL","NO_REDIRECT_URI","NO_ERROR_ROUTE","NO_UNAUTHORIZED_ROUTE","DEFAULT_LOGGER_OPTIONS","loggerCallback","logLevel","message","containsPii","console","info","piiLoggingEnabled","LogLevel","Info","ConfigHelper","validateAppSettings","appSettings","StringUtils","isEmpty","appCredentials","clientId","Error","isGuid","tenantInfo","Object","values","includes","authRoutes","redirect","error","unauthorized","guid","regexGuid","test","getResourceNameFromScopes","scopes","index","protectedResources","ownedResources","findIndex","resource","JSON","stringify","resourceName","keys","getScopesFromResourceEndpoint","resourceEndpoint","find","endpoint","BaseMiddlewareBuilder","withKeyVaultCredentials","keyVaultCredential","withDistributedTokenCache","persistenceManager","withCustomCachePlugin","cachePlugin","customCachePlugin","TokenValidator","msalConfig","logger","_appSettings","_msalConfig","validateIdToken","idToken","verifyTokenSignature","verifiedToken","validateIdTokenClaims","validateAccessToken","accessToken","protectedRoute","validateAccessTokenClaims","authToken","decodedToken","decodeAuthToken","getSigningKeys","header","payload","tid","jwt","verify","b2cPolicies","jwksUri","auth","authority","Constants","DEFAULT_AUTHORITY_HOST","client","jwksClient","getSigningKeyAsync","kid","getPublicKey","idTokenClaims","now","Math","round","Date","getTime","checkIssuer","iss","checkAudience","aud","checkTimestamp","iat","exp","checkScopes","every","scp","decode","complete","packageName","packageVersion","BaseAuthMiddleware","tokenValidator","Logger","system","loggerOptions","msalClient","ConfidentialClientApplication","getMsalClient","getLogger","FetchManager","axios","get","response","data","options","headers","Authorization","nextPage","callApiEndpointWithToken","graphResponse","map","v","push","id","handlePagination","UrlUtils","req","url","urlComponents","UrlString","getUrlComponents","Protocol","HostNameAndPort","protocol","PathSegments","join","AppServiceAuthHelper","isAppServiceAuthEnabled","process","env","getEffectiveScopesFromLoginParams","loginParams","scopesList","split","effectiveScopesList","filter","scope","OIDC_DEFAULT_SCOPES","getLoginUri","postLoginRedirectUri","loginUri","getLogoutUri","postLogoutRedirectUri","logoutUri","handleAppServiceAuth","res","next","rawIdToken","toLowerCase","rawAccessToken","session","isAuthenticated","account","tenantId","homeAccountId","oid","localAccountId","environment","username","preferred_username","name","accessTokenClaims","log","WebAppAuthMiddleware","_cryptoProvider","CryptoProvider","initialize","appRouter","express","Router","getPathFromUrl","handleRedirect","use","nonce","createNewGuid","appServiceAuthHandler","frontChannelLogout","destroy","sendStatus","signIn","ensureAbsoluteUrl","successRedirect","state","base64Encode","stage","SIGN_IN","path","params","getAuthCode","signOut","query","parse","base64Decode","ACQUIRE_TOKEN","tokenRequest","code","acquireTokenByCode","tokenResponse","isIdTokenValid","getToken","silentRequest","acquireTokenSilent","InteractionRequiredAuthError","ClientAuthError","errorCode","originalUrl","hasAccess","accessMatrix","checkFor","accessRule","hasOwnProperty","warning","handleOverage","groups","checkAccessRule","method","roles","authCodeRequest","redirectUri","prompt","getAuthCodeUrl","rule","_claim_names","newIdTokenClaims","userGroups","creds","credType","methods","elem","length","KeyVaultManager","getCredentialFromKeyVault","credential","DefaultAzureCredential","credentialType","SECRET","CERTIFICATE","getSecretCredential","secretResponse","type","value","getCertificateCredential","certificateResponse","thumbprint","properties","x509Thumbprint","toString","privateKey","secretClient","CertificateClient","keyVaultUrl","getCertificate","credentialName","keyVaultCertificate","SecretClient","getSecret","keyVaultSecret","DistributedCachePlugin","persistenceKey","getInstance","instance","beforeCacheAccess","cacheContext","Promise","resolve","reject","sessionData","cacheData","tokenCache","deserialize","afterCacheAccess","cacheHasChanged","kvStore","getKVStore","set","serialize","MsalConfiguration","getMsalConfiguration","entries","clientSecret","clientCertificate","knownAuthorities","getDomainFromUrl","cache","WebAppMiddlewareBuilder","build","buildAsync","keyVaultManager","WebApiAuthMiddleware","getTokenOnBehalf","authHeader","authorization","oboAssertion","oboRequest","acquireTokenOnBehalfOf","oboToken","isAuthorized","baseUrl","WebApiMiddlewareBuilder"],"mappings":"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"}