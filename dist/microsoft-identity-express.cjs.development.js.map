{"version":3,"file":"microsoft-identity-express.cjs.development.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/utils/Constants.ts","../src/config/ConfigHelper.ts","../src/client/BaseAuthClientBuilder.ts","../src/crypto/TokenValidator.ts","../src/packageMetadata.ts","../src/client/BaseAuthClient.ts","../src/network/FetchManager.ts","../src/utils/UrlUtils.ts","../src/utils/CryptoUtils.ts","../src/client/webapp/MsalWebAppAuthClient.ts","../src/client/webapp/AppServiceWebAppAuthClient.ts","../src/network/KeyVaultManager.ts","../src/cache/DistributedCachePlugin.ts","../src/config/MsalConfiguration.ts","../src/utils/EnvironmentUtils.ts","../src/client/webapp/WebAppAuthClientBuilder.ts","../src/client/webapi/MsalWebApiAuthClient.ts","../src/client/webapi/WebApiAuthClientBuilder.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    LoggerOptions,\n    LogLevel,\n    OIDC_DEFAULT_SCOPES,\n} from \"@azure/msal-common\";\n\n/**\n * Basic authentication stages used to determine\n * appropriate action after redirect occurs\n */\nexport enum AppStages {\n    SIGN_IN = \"sign_in\",\n    SIGN_OUT = \"sign_out\",\n    ACQUIRE_TOKEN = \"acquire_token\",\n};\n\n/**\n * String constants related to AAD Authority\n */\nexport const AADAuthorityConstants = {\n    COMMON: \"common\",\n    ORGANIZATIONS: \"organizations\",\n    CONSUMERS: \"consumers\"\n}\n\n/**\n * String constants related credential type\n */\nexport enum KeyVaultCredentialTypes {\n    SECRET = \"clientSecret\",\n    CERTIFICATE = \"clientCertificate\",\n}\n\nexport const OIDC_SCOPES = [\n    ...OIDC_DEFAULT_SCOPES,\n    \"email\"\n]\n\n/**\n * Request headers used by App Service authentication\n */\nexport const AppServiceAuthenticationHeaders = {\n    APP_SERVICE_AUTHENTICATION_HEADER: \"X-MSAL-APP-SERVICE-AUTHENTICATION\",\n    APP_SERVICE_ACCESS_TOKEN_HEADER: \"X-MS-TOKEN-AAD-ACCESS-TOKEN\",\n    APP_SERVICE_ID_TOKEN_HEADER: \"X-MS-TOKEN-AAD-ID-TOKEN\",\n    APP_SERVICE_REFRESH_TOKEN_HEADER: \"X-MS-TOKEN-AAD-REFRESH-TOKEN\",\n    APP_SERVICE_ACCESS_TOKEN_EXPIRES_HEADER: \"X-MS-TOKEN-AAD-EXPIRES-ON\",\n    APP_SERVICE_USER_OID_HEADER: \"X-MS-CLIENT-PRINCIPAL-ID\",\n    APP_SERVICE_USER_UPN_HEADER: \"X-MS-CLIENT-PRINCIPAL-NAME\",\n    APP_SERVICE_IDP_X_HEADER: \"X-MS-CLIENT-PRINCIPAL-IDP\"\n}\n\n/**\n * Endpoints used by App Service authentication\n */\nexport const AppServiceAuthenticationEndpoints = {\n    ID_TOKEN_ENDPOINT: \"/.auth/me\",\n    POST_LOGOUT_DEFAULT_ENDPOINT: \"/.auth/logout/done\",\n    POST_LOGIN_DEFAULT_ENDPOINT: \"/.auth/login/done\",\n    AAD_SIGN_IN_ENDPOINT: \"/.auth/login/aad\",\n    AAD_SIGN_OUT_ENDPOINT: \"/.auth/logout\",\n    TOKEN_REFRESH_ENDPOINT: \"/.auth/refresh\",\n    AAD_REDIRECT_ENDPOINT: \"/.auth/login/aad/callback\",\n}\n\n/**\n * Query parameters used by App Service authentication endpoints\n */\nexport const AppServiceAuthenticationQueryParameters = {\n    POST_LOGIN_REDIRECT_QUERY_PARAM: \"?post_login_redirect_url=\",\n    POST_LOGOUT_REDIRECT_QUERY_PARAM: \"?post_logout_redirect_uri=\",\n}\n\n/**\n * Environment variables used by App Service authentication\n */\nexport const AppServiceEnvironmentVariables = {\n    WEBSITE_AUTH_ENABLED: \"WEBSITE_AUTH_ENABLED\",\n    WEBSITE_AUTH_ALLOWED_AUDIENCES: \"WEBSITE_AUTH_ALLOWED_AUDIENCES\",\n    WEBSITE_AUTH_DEFAULT_PROVIDER: \"WEBSITE_AUTH_DEFAULT_PROVIDER\",\n    WEBSITE_AUTH_TOKEN_STORE: \"WEBSITE_AUTH_TOKEN_STORE\",\n    WEBSITE_AUTH_LOGIN_PARAMS: \"WEBSITE_AUTH_LOGIN_PARAMS\",\n    WEBSITE_AUTH_PRESERVE_URL_FRAGMENT: \"WEBSITE_AUTH_PRESERVE_URL_FRAGMENT\",\n    WEBSITE_AUTH_OPENID_ISSUER: \"WEBSITE_AUTH_OPENID_ISSUER\",\n    WEBSITE_AUTH_CLIENT_ID: \"WEBSITE_AUTH_CLIENT_ID\",\n    WEBSITE_HOSTNAME: \"WEBSITE_HOSTNAME\",\n    WEBSITE_SITE_NAME: \"WEBSITE_SITE_NAME\",\n    WEBSITE_AUTH_REQUIRE_HTTPS: \"WEBSITE_AUTH_REQUIRE_HTTPS\",\n    WEBSITE_AUTH_UNAUTHENTICATED_ACTION: \"WEBSITE_AUTH_UNAUTHENTICATED_ACTION\",\n    WEBSITE_AUTH_API_PREFIX: \"WEBSITE_AUTH_API_PREFIX\",\n    MICROSOFT_PROVIDER_AUTHENTICATION_SECRET: \"MICROSOFT_PROVIDER_AUTHENTICATION_SECRET\",\n}\n\n/**\n * Constants used in access control scenarios\n */\nexport const AccessControlConstants = {\n    GROUPS: \"groups\",\n    ROLES: \"roles\",\n    CLAIM_NAMES: \"_claim_name\",\n    CLAIM_SOURCES: \"_claim_sources\",\n    PAGINATION_LINK: \"@odata.nextLink\",\n    GRAPH_MEMBERS_ENDPOINT: \"https://graph.microsoft.com/v1.0/me/memberOf\",\n    GRAPH_MEMBER_SCOPES: \"User.Read GroupMember.Read.All\"\n};\n\n/**\n * Various information constants\n */\nexport const InfoMessages = {\n    APP_SERVICE_AUTH_DETECTED: \"App Service Authentication detected\",\n    REQUEST_FOR_RESOURCE: \"Request made to web API\",\n    OVERAGE_OCCURRED: \"User has too many groups. Groups overage claim occurred\"\n}\n\n/**\n * Various error constants\n */\nexport const ErrorMessages = {\n    NOT_PERMITTED: \"Not permitted\",\n    INVALID_TOKEN: \"Invalid token\",\n    CANNOT_DETERMINE_APP_STAGE: \"Cannot determine application stage\",\n    CANNOT_VALIDATE_TOKEN: \"Cannot validate token\",\n    NONCE_MISMATCH: \"Nonce does not match\",\n    INTERACTION_REQUIRED: \"interaction_required\",\n    TOKEN_ACQUISITION_FAILED: \"Token acquisition failed\",\n    AUTH_CODE_NOT_OBTAINED: \"Authorization code cannot be obtained\",\n    TOKEN_NOT_FOUND: \"No token found\",\n    TOKEN_NOT_DECODED: \"Token cannot be decoded\",\n    TOKEN_NOT_VERIFIED: \"Token cannot be verified\",\n    KEYS_NOT_OBTAINED: \"Signing keys cannot be obtained\",\n    STATE_NOT_FOUND: \"State not found\",\n    USER_HAS_NO_ROLE: \"User does not have any roles\",\n    USER_NOT_IN_ROLE: \"User does not have this role\",\n    USER_HAS_NO_GROUP: \"User does not have any groups\",\n    USER_NOT_IN_GROUP: \"User does not have this group\",\n    METHOD_NOT_ALLOWED: \"Method not allowed for this route\",\n    RULE_NOT_FOUND: \"No rule found for this route\",\n    SESSION_NOT_FOUND: \"No session found for this request\",\n    KEY_VAULT_CONFIG_NOT_FOUND: \"No coordinates found for Key Vault\"\n};\n\n/**\n * Various configuration error constants\n */\nexport const ConfigurationErrorMessages = {\n    NO_CLIENT_ID: \"No clientId provided!\",\n    INVALID_CLIENT_ID: \"Invalid clientId!\",\n    NO_TENANT_INFO: \"No tenant info provided!\",\n    INVALID_TENANT_INFO: \"Invalid tenant info!\",\n    NO_CLIENT_CREDENTIAL: \"No client credential provided!\",\n    NO_REDIRECT_URI: \"No redirect URI provided!\",\n    NO_ERROR_ROUTE: \"No error route provided!\",\n    NO_UNAUTHORIZED_ROUTE: \"No unauthorized route provided!\"\n}\n\n/**\n * For more information, visit: https://login.microsoftonline.com/error\n */\nexport const ErrorCodes = {\n    65001: \"AADSTS65001\", // consent required\n    50076: \"AADSTS50076\", // mfa required\n    50079: \"AADSTS50079\", // mfa enrollment required\n    50001: \"AADSTS50001\", // invalid resource uri\n    65004: \"AADSTS65004\", // user declined consent\n    70011: \"AADSTS70011\", // invalid scope\n    700022: \"AADSTS700022\", // multiple resources\n    700020: \"AADSTS700020\", // interaction required\n    90118: \"AADB2C90118\", // password forgotten (B2C)\n};\n\nexport const DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\n    loggerCallback: (logLevel, message, containsPii) => {\n        if (containsPii) {\n            return;\n        }\n        console.info(message);\n    },\n    piiLoggingEnabled: false,\n    logLevel: LogLevel.Info,\n};","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StringUtils } from \"@azure/msal-common\";\n\nimport { AADAuthorityConstants, ConfigurationErrorMessages, OIDC_SCOPES } from \"../utils/Constants\";\nimport { AppSettings, Resource } from \"./AppSettings\";\n\nexport class ConfigHelper {\n\n    /**\n     * Validates the fields in the configuration file\n     * @param {AppSettings} appSettings: configuration object\n     * @returns {void}\n     */\n    static validateAppSettings(appSettings: AppSettings): void {\n        if (StringUtils.isEmpty(appSettings.appCredentials.clientId)) {\n            throw new Error(ConfigurationErrorMessages.NO_CLIENT_ID);\n        } else if (!ConfigHelper.isGuid(appSettings.appCredentials.clientId)) {\n            throw new Error(ConfigurationErrorMessages.INVALID_CLIENT_ID);\n        }\n\n        if (StringUtils.isEmpty(appSettings.appCredentials.tenantId)) {\n            throw new Error(ConfigurationErrorMessages.NO_TENANT_INFO);\n        } else if (!ConfigHelper.isGuid(appSettings.appCredentials.tenantId) && !Object.values(AADAuthorityConstants).includes(appSettings.appCredentials.tenantId)) {\n            throw new Error(ConfigurationErrorMessages.INVALID_TENANT_INFO);\n        }\n\n        if (StringUtils.isEmpty(appSettings.authRoutes.redirect)) {\n            throw new Error(ConfigurationErrorMessages.NO_REDIRECT_URI);\n        }\n\n        if (StringUtils.isEmpty(appSettings.authRoutes.error)) {\n            throw new Error(ConfigurationErrorMessages.NO_ERROR_ROUTE);\n        }\n\n        if (StringUtils.isEmpty(appSettings.authRoutes.unauthorized)) {\n            throw new Error(ConfigurationErrorMessages.NO_UNAUTHORIZED_ROUTE);\n        }\n    };\n\n    /**\n     * Verifies if a string is GUID\n     * @param {string} guid\n     * @returns {boolean}\n     */\n    static isGuid(guid: string): boolean {\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n        return regexGuid.test(guid);\n    }\n\n    /**\n     * Util method to get the resource name for a given scope(s)\n     * @param {Array} scopes: an array of scopes that the resource is associated with\n     * @param {AppSettings} appSettings: application authentication parameters\n     * @returns {string}\n     */\n    static getResourceNameFromScopes(scopes: string[], appSettings: AppSettings): string {\n        const index = Object.values({ ...appSettings.protectedResources, ...appSettings.ownedResources })\n            .findIndex((resource: Resource) => JSON.stringify(resource.scopes) === JSON.stringify(scopes));\n\n        const resourceName = Object.keys({ ...appSettings.protectedResources, ...appSettings.ownedResources })[index];\n\n        return resourceName;\n    };\n\n    /**\n     * Util method to get the scopes for a given resource name\n     * @param {string} resourceEndpoint: the resource name\n     * @param {AppSettings} appSettings: application authentication parameters\n     * @returns {string}\n     */\n    static getScopesFromResourceEndpoint(resourceEndpoint: string, appSettings: AppSettings): string[] {\n        const scopes = Object.values({ ...appSettings.protectedResources, ...appSettings.ownedResources })\n            .find((resource: Resource) => resource.endpoint === resourceEndpoint).scopes;\n\n        return scopes;\n    };\n\n    static getEffectiveScopes(scopesList: string[]): string[] {\n        const effectiveScopesList = scopesList.filter(scope => !OIDC_SCOPES.includes(scope));\n        return effectiveScopesList;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICachePlugin } from \"@azure/msal-node\";\n\nimport { IDistributedPersistence } from \"../cache/IDistributedPersistence\";\nimport { ConfigHelper } from \"../config/ConfigHelper\";\nimport { AppSettings, KeyVaultCredential } from \"../config/AppSettings\";\n\nexport abstract class BaseAuthClientBuilder {\n\n    appSettings: AppSettings;\n    protected persistenceManager: IDistributedPersistence;\n    protected keyVaultCredential: KeyVaultCredential;\n    protected customCachePlugin: ICachePlugin;\n\n    protected constructor(appSettings: AppSettings) {\n        ConfigHelper.validateAppSettings(appSettings);\n        this.appSettings = appSettings;\n    };\n\n    withKeyVaultCredentials(keyVaultCredential: KeyVaultCredential): BaseAuthClientBuilder {\n        this.keyVaultCredential = keyVaultCredential;\n        return this;\n    }\n\n    withCustomCachePlugin(cachePlugin: ICachePlugin): BaseAuthClientBuilder {\n        this.customCachePlugin = cachePlugin;\n        return this;\n    }\n    \n    withDistributedTokenCache(persistenceManager: IDistributedPersistence): BaseAuthClientBuilder {\n        this.persistenceManager = persistenceManager;\n        return this;\n    }\n\n    abstract build(): any;\n\n    abstract buildAsync(): Promise<any>;\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport jwt from \"jsonwebtoken\";\nimport jwksClient from \"jwks-rsa\";\n\nimport {\n    StringUtils,\n    Constants,\n    TokenClaims,\n    Logger\n} from \"@azure/msal-common\";\nimport { Configuration } from \"@azure/msal-node\";\n\nimport {\n    AuthToken,\n    TokenHeader,\n    IdTokenClaims,\n    AccessTokenClaims\n} from \"./AuthToken\";\n\nimport { AppSettings } from \"../config/AppSettings\";\nimport { ConfigHelper } from \"../config/ConfigHelper\";\n\nimport {\n    ErrorMessages,\n    AADAuthorityConstants\n} from \"../utils/Constants\";\n\nexport class TokenValidator {\n\n    logger: Logger;\n    private appSettings: AppSettings;\n    private msalConfig: Configuration;\n\n    /**\n     * @param {AppSettings} appSettings \n     * @param {Configuration} msalConfig\n     * @param {Logger} logger\n     * @constructor\n     */\n    constructor(appSettings: AppSettings, msalConfig: Configuration, logger: Logger) {\n        this.appSettings = appSettings;\n        this.msalConfig = msalConfig;\n        this.logger = logger;\n    }\n\n    /**\n     * Verifies the access token for signature and claims\n     * @param {string} idToken: raw Id token\n     * @returns {Promise}\n     */\n    async validateIdToken(idToken: string): Promise<boolean> {\n        try {\n            const verifiedToken = await this.verifyTokenSignature(idToken);\n\n            if (verifiedToken) {\n                return this.validateIdTokenClaims(verifiedToken as IdTokenClaims);\n            } else {\n                return false;\n            }\n        } catch (error) {\n            return false;\n        }\n    };\n\n    /**\n     * Verifies the access token for signature and claims\n     * @param {string} accessToken: raw access token\n     * @param {string} protectedRoute: used for checking scope\n     * @returns {Promise}\n     */\n    async validateAccessToken(accessToken: string, protectedRoute: string): Promise<boolean> {\n        try {\n            const verifiedToken = await this.verifyTokenSignature(accessToken);\n\n            if (verifiedToken) {\n                return this.validateAccessTokenClaims(verifiedToken as AccessTokenClaims, protectedRoute);\n            } else {\n                return false;\n            }\n        } catch (error) {\n            return false;\n        }\n    };\n\n    /**\n     * Verifies a given token's signature using jwks-rsa\n     * @param {string} authToken \n     * @returns {Promise}\n     */\n    private async verifyTokenSignature(authToken: string): Promise<TokenClaims | boolean> {\n        if (StringUtils.isEmpty(authToken)) {\n            this.logger.error(ErrorMessages.TOKEN_NOT_FOUND);\n            return false;\n        }\n\n        // we will first decode to get kid parameter in header\n        let decodedToken: AuthToken = TokenValidator.decodeAuthToken(authToken);\n\n        // obtains signing keys from discovery endpoint\n        let keys;\n\n        try {\n            keys = await this.getSigningKeys(decodedToken.header, decodedToken.payload.tid);\n        } catch (error) {\n            this.logger.error(ErrorMessages.KEYS_NOT_OBTAINED);\n            return false;\n        }\n\n        // verify the signature at header section using keys\n        let verifiedToken: TokenClaims;\n\n        try {\n            verifiedToken = jwt.verify(authToken, keys);\n\n            /**\n             * if a multiplexer was used in place of tenantId i.e. if the app\n             * is multi-tenant, the tenantId should be obtained from the user\"s\n             * token\"s tid claim for verification purposes\n             */\n            if (\n                this.appSettings.appCredentials.tenantId === AADAuthorityConstants.COMMON ||\n                this.appSettings.appCredentials.tenantId === AADAuthorityConstants.ORGANIZATIONS ||\n                this.appSettings.appCredentials.tenantId === AADAuthorityConstants.CONSUMERS\n            ) {\n                this.appSettings.appCredentials.tenantId = decodedToken.payload.tid;\n            }\n\n            return verifiedToken;\n        } catch (error) {\n            this.logger.error(ErrorMessages.TOKEN_NOT_VERIFIED);\n            return false;\n        }\n    };\n\n    /**\n     * Fetches signing keys of an access token\n     * from the authority discovery endpoint\n     * @param {TokenHeader} header: token header\n     * @param {string} tid: tenant id\n     * @returns {Promise}\n     */\n    private async getSigningKeys(header: TokenHeader, tid: string): Promise<string> {\n        let jwksUri;\n\n        // Check if a B2C application i.e. app has b2cPolicies\n        if (this.appSettings.b2cPolicies) {\n            jwksUri = `${this.msalConfig.auth.authority}/discovery/v2.0/keys`;\n        } else {\n            jwksUri = `https://${Constants.DEFAULT_AUTHORITY_HOST}/${tid}/discovery/v2.0/keys`;\n        }\n\n        const client = jwksClient({\n            jwksUri: jwksUri,\n        });\n\n        return (await client.getSigningKeyAsync(header.kid)).getPublicKey();\n    };\n\n    /**\n     * Validates the id token for a set of claims\n     * @param {IdTokenClaims} idTokenClaims: decoded id token claims\n     * @returns {boolean}\n     */\n    private validateIdTokenClaims(idTokenClaims: IdTokenClaims): boolean {\n        const now = Math.round(new Date().getTime() / 1000); // in UNIX format\n\n        /**\n         * At the very least, check for issuer, audience, issue and expiry dates.\n         * For more information on validating id tokens, visit:\n         * https://docs.microsoft.com/azure/active-directory/develop/id-tokens#validating-an-id_token\n         */\n        const checkIssuer = idTokenClaims.iss.includes(this.appSettings.appCredentials.tenantId) ? true : false;\n        const checkAudience = idTokenClaims.aud === this.msalConfig.auth.clientId ? true : false;\n        const checkTimestamp = idTokenClaims.iat <= now && idTokenClaims.exp >= now ? true : false;\n\n        return checkIssuer && checkAudience && checkTimestamp;\n    };\n\n    /**\n     * Validates the access token for a set of claims\n     * @param {TokenClaims} verifiedToken: token with a verified signature\n     * @param {string} protectedRoute: route where this token is required to access\n     * @returns {boolean}\n     */\n    private validateAccessTokenClaims(verifiedToken: AccessTokenClaims, protectedRoute: string): boolean {\n        const now = Math.round(new Date().getTime() / 1000); // in UNIX format\n\n        /**\n         * At the very least, validate the token with respect to issuer, audience, scope\n         * and timestamp, though implementation and extent vary. For more information, visit:\n         * https://docs.microsoft.com/azure/active-directory/develop/access-tokens#validating-tokens\n         */\n        const checkIssuer = verifiedToken.iss.includes(this.appSettings.appCredentials.tenantId) ? true : false;\n        const checkTimestamp = verifiedToken.iat <= now && verifiedToken.iat >= now ? true : false;\n\n        const checkAudience = verifiedToken.aud === this.appSettings.appCredentials.clientId ||\n            verifiedToken.aud === \"api://\" + this.appSettings.appCredentials.clientId ? true : false;\n\n        const checkScopes = ConfigHelper.getScopesFromResourceEndpoint(protectedRoute, this.appSettings)\n            .every(scp => verifiedToken.scp.includes(scp));\n\n        return checkAudience && checkIssuer && checkTimestamp && checkScopes;\n    };\n\n    static decodeAuthToken(authToken: string): AuthToken {\n\n        try {\n            return jwt.decode(authToken, { complete: true });\n        } catch (error) {\n            throw new Error(ErrorMessages.TOKEN_NOT_DECODED);\n        }\n    }\n}\n","export const packageName = \"@azure-samples/microsoft-identity-express\";\nexport const packageVersion = \"beta\";","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"@azure/msal-common\";\n\nimport {\n    ConfidentialClientApplication,\n    Configuration,\n    CryptoProvider,\n} from \"@azure/msal-node\";\n\nimport { TokenValidator } from \"../crypto/TokenValidator\";\nimport { AppSettings } from \"../config/AppSettings\";\n\nimport {\n    packageName,\n    packageVersion\n} from \"../packageMetadata\";\n\nexport abstract class BaseAuthClient {\n\n    appSettings: AppSettings;\n    protected msalConfig: Configuration;\n    protected msalClient: ConfidentialClientApplication;\n    protected tokenValidator: TokenValidator;\n    protected cryptoProvider: CryptoProvider;\n    protected logger: Logger;\n\n    protected constructor(appSettings: AppSettings, msalConfig: Configuration) {\n        this.appSettings = appSettings;\n        this.msalConfig = msalConfig;\n        this.tokenValidator = new TokenValidator(this.appSettings, this.msalConfig, this.logger);\n        this.cryptoProvider = new CryptoProvider();\n        this.logger = new Logger(this.msalConfig.system.loggerOptions, packageName, packageVersion);\n        this.msalClient = new ConfidentialClientApplication(this.msalConfig);\n    }\n\n    getMsalClient(): ConfidentialClientApplication {\n        return this.msalClient;\n    }\n\n    getMsalConfig(): Configuration {\n        return this.msalConfig;\n    }\n\n    getLogger(): Logger {\n        return this.logger;\n    }\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport axios, { AxiosResponse, AxiosRequestConfig } from \"axios\";\nimport { StringUtils } from \"@azure/msal-common\";\n\nimport {\n    AccessControlConstants,\n    ErrorMessages\n} from \"../utils/Constants\";\n\nexport class FetchManager {\n\n    /**\n     * Calls a resource endpoint\n     * @param {string} endpoint\n     * @returns {Promise}\n     */\n    static callApiEndpoint = async (endpoint: string): Promise<AxiosResponse> => {\n        try {\n            const response: AxiosResponse = await axios.get(endpoint);\n            return response.data;\n        } catch (error) {\n            return error;\n        }\n    }\n\n    /**\n     * Calls a resource endpoint with a raw access token\n     * using the authorization bearer token scheme\n     * @param {string} endpoint \n     * @param {string} accessToken \n     * @returns {Promise}\n     */\n    static callApiEndpointWithToken = async (endpoint: string, accessToken: string): Promise<AxiosResponse> => {\n\n        if (StringUtils.isEmpty(accessToken)) {\n            throw new Error(ErrorMessages.TOKEN_NOT_FOUND)\n        }\n\n        const options: AxiosRequestConfig = {\n            headers: {\n                Authorization: `Bearer ${accessToken}`\n            }\n        };\n\n        try {\n            const response: AxiosResponse = await axios.get(endpoint, options);\n            return response.data;\n        } catch (error) {\n            return error;\n        }\n    }\n\n    /**\n     * Handles queries against Microsoft Graph that return multiple pages of data  \n     * @param {string} accessToken: access token required by endpoint \n     * @param {string} nextPage: next page link\n     * @param {Array} data: stores data from each page\n     * @returns {Promise}\n     */\n    static handlePagination = async (accessToken: string, nextPage: string, data: string[] = []): Promise<string[]> => {\n\n        try {\n            const graphResponse = await FetchManager.callApiEndpointWithToken(nextPage, accessToken);\n            graphResponse[\"value\"].map((v) => data.push(v.id));\n\n            if (graphResponse[AccessControlConstants.PAGINATION_LINK]) {\n                return await FetchManager.handlePagination(accessToken, graphResponse[AccessControlConstants.PAGINATION_LINK], data)\n            } else {\n                return data;\n            }\n        } catch (error) {\n            return error;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Request } from \"express\";\nimport { IUri, UrlString } from \"@azure/msal-common\";\n\nexport class UrlUtils {\n    /**\n     * Gets the absolute URL from a given request and path string\n     * @param {Request} req: express request object \n     * @param {string} url: a given URL\n     * @returns {string}\n     */\n    static ensureAbsoluteUrl = (req: Request, url: string): string => {\n        const urlComponents: IUri = new UrlString(url).getUrlComponents();\n\n        if (!urlComponents.Protocol) {\n            if (!urlComponents.HostNameAndPort && !url.startsWith(\"www\")) {\n                if (!url.startsWith(\"/\")) {\n                    return req.protocol + \"://\" + req.get(\"host\") + \"/\" + url;\n                }\n                return req.protocol + \"://\" + req.get(\"host\") + url;\n            }\n            return req.protocol + \"://\" + url;\n        } else {\n            return url;\n        }\n    };\n\n    /**\n     * Gets the path segment from a given URL\n     * @param {string} url: a given URL\n     * @returns {string}\n     */\n    static getPathFromUrl = (url: string): string => {\n        const urlComponents: IUri = new UrlString(url).getUrlComponents();\n        return `/${urlComponents.PathSegments.join(\"/\")}`;\n    };\n}\n","import * as crypto from \"crypto\";\n\nexport class CryptoUtils {\n\n    algorithm: string;\n\n    constructor(algorithm: string = \"aes-192-cbc\") {\n        this.algorithm = algorithm;\n    }\n\n    generateSalt(): string {\n        return crypto.randomBytes(20).toString('hex');\n    }\n\n    createKey(password, salt): Buffer {\n        return crypto.scryptSync(password, salt, 24);\n    }\n\n    encryptData(stringifiedData, key): string {\n        const iv = crypto.randomBytes(16);\n        const cipher = crypto.createCipheriv(this.algorithm, key, iv);\n        const encryptedData = cipher.update(stringifiedData, 'utf8', 'hex');\n\n        return [iv.toString(\"hex\"), encryptedData + cipher.final('hex')].join(\".\");\n    }\n\n    decryptData(encryptedData, key): string {\n        const [iv, encrypted] = encryptedData.split(\".\");\n        const decipher = crypto.createDecipheriv(this.algorithm, key, Buffer.from(iv, \"hex\"));\n        return decipher.update(encrypted, 'hex', 'utf8') + decipher.final('utf8');\n    }\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport express, {\n    RequestHandler,\n    Request,\n    Response,\n    NextFunction,\n    Router\n} from \"express\";\n\nimport {\n    OIDC_DEFAULT_SCOPES,\n    InteractionRequiredAuthError,\n    StringUtils,\n} from \"@azure/msal-common\";\n\nimport {\n    Configuration,\n    SilentFlowRequest,\n    AuthenticationResult\n} from \"@azure/msal-node\";\n\nimport { BaseAuthClient } from \"../BaseAuthClient\";\nimport { ConfigHelper } from \"../../config/ConfigHelper\";\nimport { IdTokenClaims } from \"../../crypto/AuthToken\";\nimport { FetchManager } from \"../../network/FetchManager\";\nimport { UrlUtils } from \"../../utils/UrlUtils\";\nimport { CryptoUtils } from \"../../utils/CryptoUtils\"\n\nimport {\n    Resource,\n    AppSettings,\n    AccessRule,\n} from \"../../config/AppSettings\";\n\nimport { AuthCodeParams } from \"../../utils/Types\";\n\nimport {\n    InitializationOptions,\n    TokenRequestOptions,\n    GuardOptions,\n    SignInOptions,\n    SignOutOptions,\n    HandleRedirectOptions\n} from \"../MiddlewareOptions\";\n\nimport {\n    AppStages,\n    ErrorMessages,\n    AccessControlConstants,\n    InfoMessages\n} from \"../../utils/Constants\";\n\n\n/**\n * A simple wrapper around MSAL Node ConfidentialClientApplication object.\n * It offers a collection of middleware and utility methods that automate\n * basic authentication and authorization tasks in Express MVC web apps\n */\nexport class MsalWebAppAuthClient extends BaseAuthClient {\n    \n    private cryptoUtils: CryptoUtils;\n\n    /**\n     * @param {AppSettings} appSettings\n     * @param {Configuration} msalConfig\n     * @constructor\n     */\n    constructor(appSettings: AppSettings, msalConfig: Configuration) {\n        super(appSettings, msalConfig);\n        this.cryptoUtils = new CryptoUtils();\n    }\n\n    /**\n     * Initialize AuthProvider and set default routes and handlers\n     * @param {InitializationOptions} options\n     * @returns {Router}\n     */\n    initialize(options?: InitializationOptions): Router {\n\n        const appRouter = express.Router();\n\n        // handle redirect\n        appRouter.get(UrlUtils.getPathFromUrl(this.appSettings.authRoutes.redirect), this.handleRedirect());\n        appRouter.post(UrlUtils.getPathFromUrl(this.appSettings.authRoutes.redirect), this.handleRedirect());\n\n        appRouter.use((req: Request, res: Response, next: NextFunction) => {\n\n            if (!req.session) {\n                // TODO: handle gracefully\n                throw new Error(ErrorMessages.SESSION_NOT_FOUND);\n            }\n\n            // add session nonce for crsf\n            req.session.nonce = this.cryptoProvider.createNewGuid();\n            next();\n        });\n\n        if (this.appSettings.authRoutes.frontChannelLogout) {\n            /**\n             * Expose front-channel logout route. For more information, visit: \n             * https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc#single-sign-out\n             */\n            appRouter.get(this.appSettings.authRoutes.frontChannelLogout, (req: Request, res: Response, next: NextFunction) => {\n                req.session.destroy(() => {\n                    res.sendStatus(200);\n                });\n            });\n        }\n\n        return appRouter;\n    }\n\n    /**\n     * Initiates sign in flow\n     * @param {SignInOptions} options: options to modify login request\n     * @returns {RequestHandler}\n     */\n    signIn(options?: SignInOptions): RequestHandler {\n        return (req: Request, res: Response, next: NextFunction): Promise<void> => {\n\n            const key = this.cryptoUtils.createKey(req.session.nonce, this.cryptoUtils.generateSalt());\n            req.session.key = key.toString(\"hex\");\n\n            const state = this.cryptoProvider.base64Encode(\n                this.cryptoUtils.encryptData(JSON.stringify({\n                    stage: AppStages.SIGN_IN,\n                    path: options.postLoginRedirect,\n                    nonce: req.session.nonce,\n                }), key)\n            );\n\n            const params: AuthCodeParams = {\n                authority: this.msalConfig.auth.authority,\n                scopes: OIDC_DEFAULT_SCOPES,\n                state: state,\n                redirect: UrlUtils.ensureAbsoluteUrl(req, this.appSettings.authRoutes.redirect)\n            };\n\n            // get url to sign user in\n            return this.getAuthCode(req, res, next, params);\n\n        }\n    };\n\n    /**\n     * Initiate sign out and destroy the session\n     * @param options: options to modify logout request \n     * @returns {RequestHandler}\n     */\n    signOut(options?: SignOutOptions): RequestHandler {\n        return (req: Request, res: Response, next: NextFunction): void => {\n\n            const postLogoutRedirectUri = UrlUtils.ensureAbsoluteUrl(req, options.postLogoutRedirect);\n\n            /**\n             * Construct a logout URI and redirect the user to end the\n             * session with Azure AD/B2C. For more information, visit:\n             * (AAD) https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc#send-a-sign-out-request\n             * (B2C) https://docs.microsoft.com/azure/active-directory-b2c/openid-connect#send-a-sign-out-request\n             */\n            const logoutUri = `${this.msalConfig.auth.authority}/oauth2/v2.0/logout?post_logout_redirect_uri=${postLogoutRedirectUri}`;\n\n            req.session.destroy(() => {\n                res.redirect(logoutUri);\n            });\n        }\n    };\n\n    /**\n     * Middleware that handles redirect depending on request state\n     * There are basically 2 stages: sign-in and acquire token\n     * @param {HandleRedirectOptions} options: options to modify this middleware\n     * @returns {RequestHandler}\n     */\n    private handleRedirect(options?: HandleRedirectOptions): RequestHandler {\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n            // TODO: handle form_post method\n\n            if (req.query.state) {\n                const state = JSON.parse(this.cryptoUtils.decryptData(this.cryptoProvider.base64Decode(req.query.state as string), Buffer.from(req.session.key, \"hex\")));\n\n                // check if nonce matches\n                if (state.nonce === req.session.nonce) {\n                    switch (state.stage) {\n                        case AppStages.SIGN_IN: {\n                            // token request should have auth code\n                            req.session.tokenRequest.code = req.query.code as string;\n\n                            try {\n                                // exchange auth code for tokens\n                                const tokenResponse: AuthenticationResult = await this.msalClient.acquireTokenByCode(req.session.tokenRequest);\n\n                                try {\n                                    const isIdTokenValid = await this.tokenValidator.validateIdToken(tokenResponse.idToken);\n\n                                    if (isIdTokenValid) {\n\n                                        // assign session variables\n                                        req.session.isAuthenticated = true;\n                                        req.session.account = tokenResponse.account;\n\n                                        res.redirect(state.path);\n                                    } else {\n                                        this.logger.error(ErrorMessages.INVALID_TOKEN);\n                                        res.redirect(this.appSettings.authRoutes.unauthorized);\n                                    }\n                                } catch (error) {\n                                    this.logger.error(ErrorMessages.CANNOT_VALIDATE_TOKEN);\n                                    next(error)\n                                }\n                            } catch (error) {\n                                this.logger.error(ErrorMessages.TOKEN_ACQUISITION_FAILED);\n                                next(error)\n                            }\n                            break;\n                        }\n\n                        case AppStages.ACQUIRE_TOKEN: {\n                            // get the name of the resource associated with scope\n                            const resourceName = ConfigHelper.getResourceNameFromScopes(req.session.tokenRequest.scopes, this.appSettings);\n\n                            req.session.tokenRequest.code = req.query.code as string;\n\n                            try {\n                                const tokenResponse: AuthenticationResult = await this.msalClient.acquireTokenByCode(req.session.tokenRequest);\n                                req.session.protectedResources[resourceName].accessToken = tokenResponse.accessToken;\n                                res.redirect(state.path);\n                            } catch (error) {\n                                this.logger.error(ErrorMessages.TOKEN_ACQUISITION_FAILED);\n                                next(error);\n                            }\n                            break;\n                        }\n\n                        default:\n                            this.logger.error(ErrorMessages.CANNOT_DETERMINE_APP_STAGE);\n                            res.redirect(this.appSettings.authRoutes.error);\n                            break;\n                    }\n                } else {\n                    this.logger.error(ErrorMessages.NONCE_MISMATCH);\n                    res.redirect(this.appSettings.authRoutes.unauthorized);\n                }\n            } else {\n                this.logger.error(ErrorMessages.STATE_NOT_FOUND);\n                res.redirect(this.appSettings.authRoutes.unauthorized);\n            }\n        }\n    };\n\n    /**\n     * Middleware that gets tokens via acquireToken*\n     * @param {TokenRequestOptions} options: options to modify this middleware\n     * @returns {RequestHandler}\n     */\n    getToken(options: TokenRequestOptions): RequestHandler {\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n\n            // get scopes for token request\n            const scopes = options.resource.scopes;\n            const resourceName = ConfigHelper.getResourceNameFromScopes(scopes, this.appSettings)\n\n            if (!req.session.protectedResources) {\n                req.session.protectedResources = {}\n            }\n\n            req.session.protectedResources = {\n                [resourceName]: {\n                    ...this.appSettings.protectedResources[resourceName],\n                    accessToken: null,\n                } as Resource\n            };\n\n            try {\n                const silentRequest: SilentFlowRequest = {\n                    account: req.session.account,\n                    scopes: scopes,\n                };\n\n                // acquire token silently to be used in resource call\n                const tokenResponse: AuthenticationResult = await this.msalClient.acquireTokenSilent(silentRequest);\n\n                // In B2C scenarios, sometimes an access token is returned empty.\n                // In that case, we will acquire token interactively instead.\n                if (StringUtils.isEmpty(tokenResponse.accessToken)) {\n                    this.logger.error(ErrorMessages.TOKEN_NOT_FOUND);\n                    throw new InteractionRequiredAuthError(ErrorMessages.INTERACTION_REQUIRED);\n                }\n\n                req.session.protectedResources[resourceName].accessToken = tokenResponse.accessToken;\n                next();\n            } catch (error) {\n                // in case there are no cached tokens, initiate an interactive call\n                if (error instanceof InteractionRequiredAuthError) {\n                    \n                    const key = this.cryptoUtils.createKey(req.session.nonce, this.cryptoUtils.generateSalt());\n                    req.session.key = key.toString(\"hex\");\n\n                    const state = this.cryptoProvider.base64Encode(\n                        this.cryptoUtils.encryptData(JSON.stringify({\n                            stage: AppStages.ACQUIRE_TOKEN,\n                            path: req.originalUrl,\n                            nonce: req.session.nonce,\n                        }), key)\n                    );\n\n                    const params: AuthCodeParams = {\n                        authority: this.msalConfig.auth.authority,\n                        scopes: scopes,\n                        state: state,\n                        redirect: UrlUtils.ensureAbsoluteUrl(req, this.appSettings.authRoutes.redirect),\n                        account: req.session.account,\n                    };\n\n                    // initiate the first leg of auth code grant to get token\n                    return this.getAuthCode(req, res, next, params);\n                } else {\n                    next(error);\n                }\n            }\n        }\n    };\n\n    /**\n     * Check if authenticated in session\n     * @param {GuardOptions} options: options to modify this middleware\n     * @returns {RequestHandler}\n     */\n    isAuthenticated(options?: GuardOptions): RequestHandler {\n        return (req: Request, res: Response, next: NextFunction): void => {\n            if (req.session) {\n                if (!req.session.isAuthenticated) {\n                    this.logger.error(ErrorMessages.NOT_PERMITTED);\n                    return res.redirect(this.appSettings.authRoutes.unauthorized);\n                }\n\n                next();\n            } else {\n                this.logger.error(ErrorMessages.SESSION_NOT_FOUND);\n                res.redirect(this.appSettings.authRoutes.unauthorized);\n            }\n        }\n    };\n\n    /**\n     * Checks if the user has access for this route, defined in access matrix\n     * @param {GuardOptions} options: options to modify this middleware\n     * @returns {RequestHandler}\n     */\n    hasAccess(options?: GuardOptions): RequestHandler {\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n            if (req.session && this.appSettings.accessMatrix) {\n\n                const checkFor = options.accessRule.hasOwnProperty(AccessControlConstants.GROUPS) ? AccessControlConstants.GROUPS : AccessControlConstants.ROLES;\n\n                switch (checkFor) {\n                    case AccessControlConstants.GROUPS:\n\n                        if (req.session.account.idTokenClaims[AccessControlConstants.GROUPS] === undefined) {\n                            if (req.session.account.idTokenClaims[AccessControlConstants.CLAIM_NAMES]\n                                || req.session.account.idTokenClaims[AccessControlConstants.CLAIM_SOURCES]) {\n                                this.logger.warning(InfoMessages.OVERAGE_OCCURRED);\n                                return await this.handleOverage(req, res, next, options.accessRule);\n                            } else {\n                                this.logger.error(ErrorMessages.USER_HAS_NO_GROUP);\n                                return res.redirect(this.appSettings.authRoutes.unauthorized);\n                            }\n                        } else {\n                            const groups = req.session.account.idTokenClaims[AccessControlConstants.GROUPS];\n\n                            if (!this.checkAccessRule(req.method, options.accessRule, groups, AccessControlConstants.GROUPS)) {\n                                return res.redirect(this.appSettings.authRoutes.unauthorized);\n                            }\n                        }\n\n                        next();\n                        break;\n\n                    case AccessControlConstants.ROLES:\n                        if (req.session.account.idTokenClaims[AccessControlConstants.ROLES] === undefined) {\n                            this.logger.error(ErrorMessages.USER_HAS_NO_ROLE);\n                            return res.redirect(this.appSettings.authRoutes.unauthorized);\n                        } else {\n                            const roles = req.session.account.idTokenClaims[AccessControlConstants.ROLES];\n\n                            if (!this.checkAccessRule(req.method, options.accessRule, roles, AccessControlConstants.ROLES)) {\n                                return res.redirect(this.appSettings.authRoutes.unauthorized);\n                            }\n                        }\n\n                        next();\n                        break;\n\n                    default:\n                        break;\n                }\n            } else {\n                res.redirect(this.appSettings.authRoutes.unauthorized);\n            }\n        }\n    }\n\n    // ============== UTILS ===============\n\n    /**\n     * This method is used to generate an auth code url request\n     * @param {Request} req: express request object\n     * @param {Response} res: express response object\n     * @param {NextFunction} next: express next function\n     * @param {AuthCodeParams} params: modifies auth code url request\n     * @returns {Promise}\n     */\n    private async getAuthCode(req: Request, res: Response, next: NextFunction, params: AuthCodeParams): Promise<void> {\n\n        // prepare the request\n        req.session.authCodeRequest = {\n            authority: params.authority,\n            scopes: params.scopes,\n            state: params.state,\n            redirectUri: params.redirect,\n            prompt: params.prompt,\n            account: params.account,\n        }\n\n        req.session.tokenRequest = {\n            authority: params.authority,\n            scopes: params.scopes,\n            redirectUri: params.redirect,\n            code: undefined,\n        }\n\n        // request an authorization code to exchange for tokens\n        try {\n            const response = await this.msalClient.getAuthCodeUrl(req.session.authCodeRequest);\n            res.redirect(response);\n        } catch (error) {\n            this.logger.error(ErrorMessages.AUTH_CODE_NOT_OBTAINED);\n            next(error);\n        }\n    };\n\n    /**\n     * Handles group overage claims by querying MS Graph /memberOf endpoint\n     * @param {Request} req: express request object\n     * @param {Response} res: express response object\n     * @param {NextFunction} next: express next function\n     * @param {AccessRule} rule: a given access rule\n     * @returns {Promise}\n     */\n    private async handleOverage(req: Request, res: Response, next: NextFunction, rule: AccessRule): Promise<void> {\n        const { _claim_names, _claim_sources, ...newIdTokenClaims } = <IdTokenClaims>req.session.account.idTokenClaims;\n\n        const silentRequest: SilentFlowRequest = {\n            account: req.session.account,\n            scopes: AccessControlConstants.GRAPH_MEMBER_SCOPES.split(\" \"),\n        };\n\n        try {\n            // acquire token silently to be used in resource call\n            const tokenResponse = await this.msalClient.acquireTokenSilent(silentRequest);\n            try {\n                const graphResponse = await FetchManager.callApiEndpointWithToken(AccessControlConstants.GRAPH_MEMBERS_ENDPOINT, tokenResponse.accessToken);\n\n                /**\n                 * Some queries against Microsoft Graph return multiple pages of data either due to server-side paging \n                 * or due to the use of the $top query parameter to specifically limit the page size in a request. \n                 * When a result set spans multiple pages, Microsoft Graph returns an @odata.nextLink property in \n                 * the response that contains a URL to the next page of results. Learn more at https://docs.microsoft.com/graph/paging\n                 */\n                if (graphResponse[AccessControlConstants.PAGINATION_LINK]) {\n                    try {\n                        const userGroups = await FetchManager.handlePagination(tokenResponse.accessToken, graphResponse[AccessControlConstants.PAGINATION_LINK]);\n\n                        req.session.account.idTokenClaims = {\n                            ...newIdTokenClaims,\n                            groups: userGroups\n                        }\n\n                        if (!this.checkAccessRule(req.method, rule, req.session.account.idTokenClaims[AccessControlConstants.GROUPS], AccessControlConstants.GROUPS)) {\n                            return res.redirect(this.appSettings.authRoutes.unauthorized);\n                        } else {\n                            return next();\n                        }\n                    } catch (error) {\n                        next(error);\n                    }\n                } else {\n                    req.session.account.idTokenClaims = {\n                        ...newIdTokenClaims,\n                        groups: graphResponse[\"value\"].map((v) => v.id)\n                    }\n\n                    if (!this.checkAccessRule(req.method, rule, req.session.account.idTokenClaims[AccessControlConstants.GROUPS], AccessControlConstants.GROUPS)) {\n                        return res.redirect(this.appSettings.authRoutes.unauthorized);\n                    } else {\n                        return next();\n                    }\n                }\n            } catch (error) {\n                next(error);\n            }\n        } catch (error) {\n            // TODO: handle silent token acquisition error\n            next(error);\n        }\n    };\n\n    /**\n     * Checks if the request passes a given access rule\n     * @param {string} method: HTTP method for this route\n     * @param {AccessRule} rule: access rule for this route\n     * @param {Array} creds: user's credentials i.e. roles or groups\n     * @param {string} credType: roles or groups\n     * @returns {boolean}\n     */\n    private checkAccessRule(method: string, rule: AccessRule, creds: string[], credType: string): boolean {\n        if (rule.methods.includes(method)) {\n            switch (credType) {\n                case AccessControlConstants.GROUPS:\n                    if (rule.groups.filter(elem => creds.includes(elem)).length < 1) {\n                        this.logger.error(ErrorMessages.USER_NOT_IN_GROUP);\n                        return false;\n                    }\n                    break;\n\n                case AccessControlConstants.ROLES:\n                    if (rule.roles.filter(elem => creds.includes(elem)).length < 1) {\n                        this.logger.error(ErrorMessages.USER_NOT_IN_ROLE);\n                        return false;\n                    }\n                    break;\n\n                default:\n                    break;\n            }\n        } else {\n            this.logger.error(ErrorMessages.METHOD_NOT_ALLOWED);\n            return false;\n        }\n\n        return true;\n    }\n}\n","\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport express, {\n    Router,\n    RequestHandler,\n    Request,\n    Response,\n    NextFunction\n} from \"express\";\n\nimport { AccountInfo } from \"@azure/msal-common\";\nimport { BaseAuthClient } from \"../BaseAuthClient\";\nimport { Configuration } from \"@azure/msal-node\";\n\nimport { TokenValidator } from \"../../crypto/TokenValidator\";\nimport { AccessTokenClaims, IdTokenClaims } from \"../../crypto/AuthToken\";\nimport { AppSettings, Resource } from \"../../config/AppSettings\";\nimport { ConfigHelper } from \"../../config/ConfigHelper\";\nimport { UrlUtils } from \"../../utils/UrlUtils\";\n\nimport {\n    GuardOptions,\n    HandleRedirectOptions,\n    InitializationOptions,\n    SignInOptions,\n    SignOutOptions,\n    TokenRequestOptions\n} from \"../MiddlewareOptions\";\n\nimport {\n    AppServiceAuthenticationHeaders,\n    AppServiceEnvironmentVariables,\n    AppServiceAuthenticationEndpoints,\n    AppServiceAuthenticationQueryParameters,\n    ErrorMessages\n} from \"../../utils/Constants\";\n\nexport class AppServiceWebAppAuthClient extends BaseAuthClient {\n\n    /**\n     * @param {AppSettings} appSettings\n     * @param {Configuration} msalConfig\n     * @constructor\n     */\n    constructor(appSettings: AppSettings, msalConfig: Configuration) {\n        super(appSettings, msalConfig);\n    }\n\n    /**\n     * Initialize AuthProvider and set default routes and handlers\n     * @param {InitializationOptions} options\n     * @returns {Router}\n     */\n    initialize(options?: InitializationOptions): Router {\n\n        const appRouter = express.Router();\n\n        // handle redirect\n        appRouter.get(UrlUtils.getPathFromUrl(this.appSettings.authRoutes.redirect), this.handleRedirect());\n        appRouter.post(UrlUtils.getPathFromUrl(this.appSettings.authRoutes.redirect), this.handleRedirect());\n        \n        appRouter.use((req: Request, res: Response, next: NextFunction): void => {\n\n            \n            if (!req.session.isAuthenticated) {\n                // check headers for id token\n                const rawIdToken = req.headers[AppServiceAuthenticationHeaders.APP_SERVICE_ID_TOKEN_HEADER.toLowerCase()] as string;\n\n                if (rawIdToken) {\n\n                    // TODO: validate the id token\n\n                    // parse the id token\n                    const idTokenClaims: IdTokenClaims = TokenValidator.decodeAuthToken(rawIdToken).payload;\n\n                    req.session.isAuthenticated = true;\n\n                    req.session.account = {\n                        tenantId: idTokenClaims.tid,\n                        homeAccountId: idTokenClaims.oid + \".\" + idTokenClaims.tid,\n                        localAccountId: idTokenClaims.oid,\n                        environment: idTokenClaims.iss.split(\"://\")[1].split(\"/\")[0],\n                        username: idTokenClaims.preferred_username,\n                        name: idTokenClaims.name,\n                        idTokenClaims: idTokenClaims\n                    } as AccountInfo;\n                }\n            }\n\n            next();\n        });\n\n        return appRouter;\n    }\n\n    /**\n     * Initiates sign in flow\n     * @param {SignInOptions} options: options to modify login request\n     * @returns {RequestHandler}\n     */\n    signIn(options?: SignInOptions): RequestHandler {\n        return (req: Request, res: Response, next: NextFunction): void => {\n            let loginUri;\n            const postLoginRedirectUri = UrlUtils.ensureAbsoluteUrl(req, options.postLoginRedirect);\n            loginUri = \"https://\" + process.env[AppServiceEnvironmentVariables.WEBSITE_HOSTNAME] + AppServiceAuthenticationEndpoints.AAD_SIGN_IN_ENDPOINT + AppServiceAuthenticationQueryParameters.POST_LOGIN_REDIRECT_QUERY_PARAM + postLoginRedirectUri;\n            res.redirect(loginUri);\n        }\n    }\n\n\n    /**\n     * Initiate sign out and destroy the session\n     * @param options: options to modify logout request \n     * @returns {RequestHandler}\n     */\n    signOut(options?: SignOutOptions): RequestHandler {\n        return (req: Request, res: Response, next: NextFunction): void => {\n            const postLogoutRedirectUri = UrlUtils.ensureAbsoluteUrl(req, options.postLogoutRedirect);\n            const logoutUri = \"https://\" + process.env[AppServiceEnvironmentVariables.WEBSITE_HOSTNAME] + AppServiceAuthenticationEndpoints.AAD_SIGN_OUT_ENDPOINT + AppServiceAuthenticationQueryParameters.POST_LOGOUT_REDIRECT_QUERY_PARAM + postLogoutRedirectUri;\n\n            req.session.destroy(() => {\n                res.redirect(logoutUri);\n            });\n        }\n    }\n\n    /**\n     * Middleware that handles redirect depending on request state\n     * There are basically 2 stages: sign-in and acquire token\n     * @param {HandleRedirectOptions} options: options to modify this middleware\n     * @returns {RequestHandler}\n     */\n    private handleRedirect(options?: HandleRedirectOptions): RequestHandler {\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n            next();\n        }\n    }\n\n    /**\n     * Middleware that gets tokens\n     * @param {TokenRequestOptions} options: options to modify this middleware\n     * @returns {RequestHandler}\n     */\n    getToken(options: TokenRequestOptions): RequestHandler {\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n\n            // get scopes for token request\n            const resourceName = ConfigHelper.getResourceNameFromScopes(options.resource.scopes, this.appSettings)\n\n            if (!req.session.protectedResources) {\n                req.session.protectedResources = {}\n            }\n\n            req.session.protectedResources = {\n                [resourceName]: {\n                    ...this.appSettings.protectedResources[resourceName],\n                    accessToken: null,\n                } as Resource\n            };\n\n            const rawAccessToken = req.headers[AppServiceAuthenticationHeaders.APP_SERVICE_ACCESS_TOKEN_HEADER.toLowerCase()] as string;\n\n            if (rawAccessToken) {\n\n                const accessTokenClaims: AccessTokenClaims = TokenValidator.decodeAuthToken(rawAccessToken).payload;\n\n                // get the name of the resource associated with scope\n                const scopes = accessTokenClaims.scp.split(\" \");\n                const effectiveScopes = ConfigHelper.getEffectiveScopes(scopes);\n\n                if (options.resource.scopes.every(elem => effectiveScopes.includes(elem))) {\n                    req.session.protectedResources[resourceName].accessToken = rawAccessToken;\n                    return next();\n                } else {\n                    return next(new Error(\"No tokens found for given scopes\"));\n                }\n            }\n        }\n    }\n\n    /**\n     * Check if authenticated in session\n     * @param {GuardOptions} options: options to modify this middleware\n     * @returns {RequestHandler}\n     */\n    isAuthenticated(options?: GuardOptions): RequestHandler {\n        return (req: Request, res: Response, next: NextFunction): void => {\n            if (req.session) {\n                if (!req.session.isAuthenticated) {\n                    this.logger.error(ErrorMessages.NOT_PERMITTED);\n                    return res.redirect(this.appSettings.authRoutes.unauthorized);\n                }\n\n                next();\n            } else {\n                this.logger.error(ErrorMessages.SESSION_NOT_FOUND);\n                res.redirect(this.appSettings.authRoutes.unauthorized);\n            }\n        }\n    };\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { DefaultAzureCredential } from \"@azure/identity\";\nimport { CertificateClient, KeyVaultCertificate } from \"@azure/keyvault-certificates\";\nimport { KeyVaultSecret, SecretClient } from \"@azure/keyvault-secrets\";\n\nimport { KeyVaultCredential, ClientCertificate } from \"../config/AppSettings\";\nimport { KeyVaultCredentialTypes } from \"../utils/Constants\";\n\nexport type KeyVaultCredentialResponse = {\n    type: KeyVaultCredentialTypes.SECRET | KeyVaultCredentialTypes.CERTIFICATE,\n    value: string & ClientCertificate\n}\n\nexport class KeyVaultManager {\n\n    /**\n     * Fetches credentials from Key Vault and updates appSettings\n     * @param {AppSettings} appSettings \n     * @returns {Promise}\n     */\n    async getCredentialFromKeyVault(keyVaultCredential: KeyVaultCredential): Promise<KeyVaultCredentialResponse> {\n\n        const credential = new DefaultAzureCredential();\n\n        switch (keyVaultCredential.credentialType) {\n            case KeyVaultCredentialTypes.SECRET: {\n                try {\n                    const secretResponse = await this.getSecretCredential(keyVaultCredential, credential);\n\n                    return {\n                        type: KeyVaultCredentialTypes.SECRET,\n                        value: secretResponse.value,\n                    } as KeyVaultCredentialResponse;\n\n                } catch (error) {\n                    console.log(error);\n                }\n                break;\n            }\n\n            case KeyVaultCredentialTypes.CERTIFICATE: {\n                try {\n                    const certificateResponse = await this.getCertificateCredential(keyVaultCredential, credential);\n                    const secretResponse = await this.getSecretCredential(keyVaultCredential, credential);\n\n                    return {\n                        type: KeyVaultCredentialTypes.CERTIFICATE,\n                        value: {\n                            thumbprint: certificateResponse.properties.x509Thumbprint.toString(),\n                            privateKey: secretResponse.value.split('-----BEGIN CERTIFICATE-----\\n')[0]\n                        }\n                    } as KeyVaultCredentialResponse;\n                } catch (error) {\n                    console.log(error);\n                }\n                break;\n            }\n\n            default:\n                break;\n        }\n    };\n\n    /**\n     * Gets a certificate credential from Key Vault\n     * @param {AppSettings} config \n     * @param {DefaultAzureCredential} credential \n     * @returns {Promise}\n     */\n    async getCertificateCredential(keyVaultCredential: KeyVaultCredential, credential: DefaultAzureCredential): Promise<KeyVaultCertificate> {\n\n        // Initialize secretClient with credentials\n        const secretClient = new CertificateClient(keyVaultCredential.keyVaultUrl, credential);\n\n        try {\n            const keyVaultCertificate = await secretClient.getCertificate(keyVaultCredential.credentialName);\n            return keyVaultCertificate;\n        } catch (error) {\n            console.log(error);\n            return error;\n        }\n    }\n\n    /**\n     * Gets a secret credential from Key Vault\n     * @param {AppSettings} config \n     * @param {DefaultAzureCredential} credential \n     * @returns {Promise}\n     */\n    async getSecretCredential(keyVaultCredential: KeyVaultCredential, credential: DefaultAzureCredential): Promise<KeyVaultSecret> {\n\n        // Initialize secretClient with credentials\n        const secretClient = new SecretClient(keyVaultCredential.keyVaultUrl, credential);\n\n        try {\n            const keyVaultSecret = await secretClient.getSecret(keyVaultCredential.credentialName);\n            return keyVaultSecret;\n        } catch (error) {\n            console.log(error);\n            return error;\n        }\n    }\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICachePlugin } from \"@azure/msal-node\";\nimport { IDistributedPersistence } from \"./IDistributedPersistence\";\n\nexport class DistributedCachePlugin implements ICachePlugin {\n\n    private static instance: DistributedCachePlugin;\n\n    private persistenceManager: IDistributedPersistence;\n    private persistenceKey: string;\n\n    private constructor(persistenceManager: IDistributedPersistence, persistenceKey?: string) {\n        this.persistenceManager = persistenceManager;\n        this.persistenceKey = persistenceKey;\n    }\n\n    static getInstance(persistenceManager: IDistributedPersistence, persistenceKey?: string): DistributedCachePlugin {\n        if (!DistributedCachePlugin.instance) {\n            DistributedCachePlugin.instance = new DistributedCachePlugin(persistenceManager, persistenceKey);\n        }\n\n        return DistributedCachePlugin.instance;\n    }\n\n    async beforeCacheAccess(cacheContext): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            const sessionData = await this.persistenceManager.get(this.persistenceKey);\n            if (sessionData) {\n                const cacheData = await this.persistenceManager.get(JSON.parse(sessionData).account.homeAccountId);\n                cacheContext.tokenCache.deserialize(cacheData);\n            }\n            resolve();\n        });\n    }\n\n    async afterCacheAccess(cacheContext): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (cacheContext.cacheHasChanged) {\n                const kvStore = cacheContext.tokenCache.getKVStore();\n                const homeAccountId = Object.values(kvStore)[1][\"homeAccountId\"];\n                await this.persistenceManager.set(homeAccountId, cacheContext.tokenCache.serialize());\n            }\n            resolve();\n        });\n    }\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    UrlString,\n    Constants,\n} from \"@azure/msal-common\";\n\nimport {\n    ICachePlugin,\n    Configuration\n} from \"@azure/msal-node\";\n\nimport { AppSettings } from \"./AppSettings\";\n\nimport {\n    DEFAULT_LOGGER_OPTIONS\n} from \"../utils/Constants\"\n\nimport { IDistributedPersistence } from \"../cache/IDistributedPersistence\";\nimport { DistributedCachePlugin } from \"../cache/DistributedCachePlugin\";\n\nexport class MsalConfiguration {\n\n    /**\n     * Maps the custom configuration object to configuration\n     * object expected by MSAL Node ConfidentialClientApplication class\n     * @param {AppSettings} appSettings: configuration object\n     * @param {ICachePlugin} cachePlugin: custom cache plugin\n     * @param {IDistributedPersistence} distributedPersistence: distributed persistence client\n     * @returns {Configuration}\n     */\n    static getMsalConfiguration(appSettings: AppSettings, persistenceManager?: IDistributedPersistence): Configuration {\n        return {\n            auth: {\n                clientId: appSettings.appCredentials.clientId,\n                authority: appSettings.b2cPolicies ?\n                    Object.entries(appSettings.b2cPolicies)[0][1][\"authority\"] // the first policy/user-flow is the default authority\n                    :\n                    appSettings.appCredentials.instance ? `https://${appSettings.appCredentials.instance}/${appSettings.appCredentials.tenantId}` \n                    :\n                    `https://${Constants.DEFAULT_AUTHORITY_HOST}/${appSettings.appCredentials.tenantId}`,\n                ...(appSettings.appCredentials.hasOwnProperty(\"clientSecret\")) && { clientSecret: appSettings.appCredentials.clientSecret },\n                ...(appSettings.appCredentials.hasOwnProperty(\"clientCertificate\")) && { clientCertificate: appSettings.appCredentials.clientCertificate },\n                knownAuthorities: appSettings.b2cPolicies ?\n                    [UrlString.getDomainFromUrl(Object.entries(appSettings.b2cPolicies)[0][1][\"authority\"])] // in B2C scenarios\n                    :\n                    [],\n            },\n            cache: {\n                cachePlugin: persistenceManager ? DistributedCachePlugin.getInstance(persistenceManager) : null\n            },\n            system: {\n                loggerOptions: appSettings.loggerOptions ? appSettings.loggerOptions : DEFAULT_LOGGER_OPTIONS,\n            },\n        };\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AppServiceEnvironmentVariables,\n} from \"./Constants\";\n\nexport class EnvironmentUtils {\n    static isProduction(): boolean {\n        return process.env.NODE_ENV === 'production';\n    }\n\n    static isDevelopment(): boolean {\n        return process.env.NODE_ENV === 'development';\n    }\n\n    static isAppServiceAuthEnabled(): boolean {\n        return process.env[AppServiceEnvironmentVariables.WEBSITE_AUTH_ENABLED] === \"True\";\n    }\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Configuration } from \"@azure/msal-node\";\n\nimport { BaseAuthClientBuilder } from \"../BaseAuthClientBuilder\";\nimport { MsalWebAppAuthClient } from \"./MsalWebAppAuthClient\";\nimport { AppServiceWebAppAuthClient } from \"./AppServiceWebAppAuthClient\";\nimport { KeyVaultManager } from \"../../network/KeyVaultManager\";\nimport { MsalConfiguration } from \"../../config/MsalConfiguration\";\nimport { AppSettings } from \"../../config/AppSettings\";\nimport { EnvironmentUtils } from \"../../utils/EnvironmentUtils\";\n\nexport class WebAppAuthClientBuilder extends BaseAuthClientBuilder {\n\n    appSettings: AppSettings;\n    private msalConfig: Configuration;\n\n    constructor(appSettings: AppSettings) {\n        super(appSettings)\n    };\n\n    build(): MsalWebAppAuthClient | AppServiceWebAppAuthClient {\n        // TODO: throw error if key vault credential is being built\n        \n        this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings, this.persistenceManager);\n        \n        if (EnvironmentUtils.isAppServiceAuthEnabled()) {\n            return new AppServiceWebAppAuthClient(this.appSettings, this.msalConfig);\n        } else {\n            return new MsalWebAppAuthClient(this.appSettings, this.msalConfig);\n        }\n    }\n\n    async buildAsync(): Promise<MsalWebAppAuthClient | AppServiceWebAppAuthClient> {\n        try {\n            if (this.keyVaultCredential) {\n                const keyVaultManager = new KeyVaultManager();\n                const credential = await keyVaultManager.getCredentialFromKeyVault(this.keyVaultCredential);\n                this.appSettings.appCredentials[credential.type] = credential.value;\n            }\n\n            if (this.persistenceManager) {\n                this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings, this.persistenceManager);\n            } else {\n                this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings);\n            }\n\n            if (EnvironmentUtils.isAppServiceAuthEnabled()) {\n                return new AppServiceWebAppAuthClient(this.appSettings, this.msalConfig);\n            } else {\n                return new MsalWebAppAuthClient(this.appSettings, this.msalConfig);\n            }\n        } catch (error) {\n            throw new Error(error);\n        }\n    }\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport express, {\n    RequestHandler,\n    Request,\n    Response,\n    NextFunction,\n    Router\n} from \"express\";\n\nimport {\n    AuthenticationResult,\n} from \"@azure/msal-common\";\n\nimport {\n    Configuration,\n    OnBehalfOfRequest,\n} from \"@azure/msal-node\";\n\nimport { BaseAuthClient } from \"../BaseAuthClient\";\n\nimport {\n    AppSettings,\n} from \"../../config/AppSettings\";\n\nimport {\n    InitializationOptions,\n    TokenRequestOptions,\n    GuardOptions,\n} from \"../MiddlewareOptions\";\n\nimport {\n    ErrorMessages,\n} from \"../../utils/Constants\";\n\n/**\n * A simple wrapper around MSAL Node ConfidentialClientApplication object.\n * It offers a collection of middleware and utility methods that automate\n * basic authentication and authorization tasks in RESTful APIs.\n */\nexport class MsalWebApiAuthClient extends BaseAuthClient {\n\n    /**\n     * @param {AppSettings} appSettings\n     * @param {Configuration} msalConfig\n     * @constructor\n     */\n    constructor(appSettings: AppSettings, msalConfig: Configuration) {\n        super(appSettings, msalConfig);\n    }\n\n    /**\n     * Initialize AuthProvider and set default routes and handlers\n     * @param {InitializationOptions} options\n     * @returns {Router}\n     */\n    initialize(options?: InitializationOptions): Router {\n        const appRouter = express.Router();\n\n        appRouter.use((req: Request, res: Response, next: NextFunction) => {\n            // TODO: add defaults\n            next();\n        });\n\n        return appRouter;\n    }\n\n    /**\n     * Middleware that gets tokens via OBO flow. Used in web API scenarios\n     * @param {TokenRequestOptions} options: options to modify this middleware\n     * @returns {RequestHandler}\n     */\n    getTokenOnBehalf(options: TokenRequestOptions): RequestHandler {\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n            const authHeader: string = req.headers.authorization;\n\n            // get scopes for token request\n            const scopes: string[] = options.resource.scopes;\n\n            // get the raw access token from authZ header\n            const rawAccessToken: string = authHeader.split(\" \")[1];\n            req.oboAssertion = rawAccessToken;\n\n            const oboRequest: OnBehalfOfRequest = {\n                oboAssertion: rawAccessToken,\n                scopes: scopes,\n            }\n\n            try {\n                // TODO: check cache first\n                const tokenResponse: AuthenticationResult = await this.msalClient.acquireTokenOnBehalfOf(oboRequest);\n                req.oboToken = tokenResponse.accessToken;\n                next();\n            } catch (error) {\n                next(error);\n            }\n        }\n    }\n\n    /**\n     * Receives access token in req authorization header\n     * and validates it using the jwt.verify\n     * @param {GuardOptions} options: options to modify this middleware\n     * @returns {RequestHandler}\n     */\n    isAuthorized(options?: GuardOptions): RequestHandler {\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n            const rawAccessToken: string = req.headers.authorization.split(\" \")[1];\n\n            if (req.headers.authorization) {\n                if (!(await this.tokenValidator.validateAccessToken(rawAccessToken, `${req.baseUrl}${req.path}`))) {\n                    this.logger.error(ErrorMessages.INVALID_TOKEN);\n                    return res.redirect(this.appSettings.authRoutes.unauthorized);\n                }\n\n                next();\n            } else {\n                this.logger.error(ErrorMessages.TOKEN_NOT_FOUND);\n                res.redirect(this.appSettings.authRoutes.unauthorized);\n            }\n        }\n    };\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Configuration } from \"@azure/msal-node\";\n\nimport { BaseAuthClientBuilder } from \"../BaseAuthClientBuilder\";\nimport { MsalWebApiAuthClient } from \"./MsalWebApiAuthClient\";\nimport { KeyVaultManager } from \"../../network/KeyVaultManager\";\nimport { MsalConfiguration } from \"../../config/MsalConfiguration\";\nimport { AppSettings } from \"../../config/AppSettings\";\n\nexport class WebApiAuthClientBuilder extends BaseAuthClientBuilder {\n\n    appSettings: AppSettings;\n    private msalConfig: Configuration;\n\n    constructor(appSettings: AppSettings) {\n        super(appSettings)\n    };\n\n    /**\n     * Synchronously builds the MSAL middleware with the provided configuration.\n     * @returns {MsalWebApiAuthClient}\n     */\n    build(): MsalWebApiAuthClient {\n        // TODO: throw error if key vault credential is being built\n        this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings, this.persistenceManager);\n        return new MsalWebApiAuthClient(this.appSettings, this.msalConfig);\n    }\n\n    /**\n     * Asynchronously builds the MSAL middleware with the provided configuration.\n     * @returns {Promise}\n     */\n    async buildAsync(): Promise<MsalWebApiAuthClient> {\n        try {\n            if (this.keyVaultCredential) {\n                const keyVaultManager = new KeyVaultManager();\n                const credential = await keyVaultManager.getCredentialFromKeyVault(this.keyVaultCredential);\n                this.appSettings.appCredentials[credential.type] = credential.value;\n            }\n\n            if (this.persistenceManager) {\n                this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings, this.persistenceManager);\n            } else {\n                this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings);\n            }\n\n            return new MsalWebApiAuthClient(this.appSettings, this.msalConfig);\n        } catch (error) {\n            throw new Error(error);\n        }\n    }\n}"],"names":["undefined","AppStages","AADAuthorityConstants","COMMON","ORGANIZATIONS","CONSUMERS","KeyVaultCredentialTypes","OIDC_SCOPES","OIDC_DEFAULT_SCOPES","AppServiceAuthenticationHeaders","APP_SERVICE_AUTHENTICATION_HEADER","APP_SERVICE_ACCESS_TOKEN_HEADER","APP_SERVICE_ID_TOKEN_HEADER","APP_SERVICE_REFRESH_TOKEN_HEADER","APP_SERVICE_ACCESS_TOKEN_EXPIRES_HEADER","APP_SERVICE_USER_OID_HEADER","APP_SERVICE_USER_UPN_HEADER","APP_SERVICE_IDP_X_HEADER","AppServiceAuthenticationEndpoints","ID_TOKEN_ENDPOINT","POST_LOGOUT_DEFAULT_ENDPOINT","POST_LOGIN_DEFAULT_ENDPOINT","AAD_SIGN_IN_ENDPOINT","AAD_SIGN_OUT_ENDPOINT","TOKEN_REFRESH_ENDPOINT","AAD_REDIRECT_ENDPOINT","AppServiceAuthenticationQueryParameters","POST_LOGIN_REDIRECT_QUERY_PARAM","POST_LOGOUT_REDIRECT_QUERY_PARAM","AppServiceEnvironmentVariables","WEBSITE_AUTH_ENABLED","WEBSITE_AUTH_ALLOWED_AUDIENCES","WEBSITE_AUTH_DEFAULT_PROVIDER","WEBSITE_AUTH_TOKEN_STORE","WEBSITE_AUTH_LOGIN_PARAMS","WEBSITE_AUTH_PRESERVE_URL_FRAGMENT","WEBSITE_AUTH_OPENID_ISSUER","WEBSITE_AUTH_CLIENT_ID","WEBSITE_HOSTNAME","WEBSITE_SITE_NAME","WEBSITE_AUTH_REQUIRE_HTTPS","WEBSITE_AUTH_UNAUTHENTICATED_ACTION","WEBSITE_AUTH_API_PREFIX","MICROSOFT_PROVIDER_AUTHENTICATION_SECRET","AccessControlConstants","GROUPS","ROLES","CLAIM_NAMES","CLAIM_SOURCES","PAGINATION_LINK","GRAPH_MEMBERS_ENDPOINT","GRAPH_MEMBER_SCOPES","InfoMessages","APP_SERVICE_AUTH_DETECTED","REQUEST_FOR_RESOURCE","OVERAGE_OCCURRED","ErrorMessages","NOT_PERMITTED","INVALID_TOKEN","CANNOT_DETERMINE_APP_STAGE","CANNOT_VALIDATE_TOKEN","NONCE_MISMATCH","INTERACTION_REQUIRED","TOKEN_ACQUISITION_FAILED","AUTH_CODE_NOT_OBTAINED","TOKEN_NOT_FOUND","TOKEN_NOT_DECODED","TOKEN_NOT_VERIFIED","KEYS_NOT_OBTAINED","STATE_NOT_FOUND","USER_HAS_NO_ROLE","USER_NOT_IN_ROLE","USER_HAS_NO_GROUP","USER_NOT_IN_GROUP","METHOD_NOT_ALLOWED","RULE_NOT_FOUND","SESSION_NOT_FOUND","KEY_VAULT_CONFIG_NOT_FOUND","ConfigurationErrorMessages","NO_CLIENT_ID","INVALID_CLIENT_ID","NO_TENANT_INFO","INVALID_TENANT_INFO","NO_CLIENT_CREDENTIAL","NO_REDIRECT_URI","NO_ERROR_ROUTE","NO_UNAUTHORIZED_ROUTE","DEFAULT_LOGGER_OPTIONS","loggerCallback","logLevel","message","containsPii","console","info","piiLoggingEnabled","LogLevel","Info","ConfigHelper","validateAppSettings","appSettings","StringUtils","isEmpty","appCredentials","clientId","Error","isGuid","tenantId","Object","values","includes","authRoutes","redirect","error","unauthorized","guid","regexGuid","test","getResourceNameFromScopes","scopes","index","protectedResources","ownedResources","findIndex","resource","JSON","stringify","resourceName","keys","getScopesFromResourceEndpoint","resourceEndpoint","find","endpoint","getEffectiveScopes","scopesList","effectiveScopesList","filter","scope","BaseAuthClientBuilder","withKeyVaultCredentials","keyVaultCredential","withCustomCachePlugin","cachePlugin","customCachePlugin","withDistributedTokenCache","persistenceManager","TokenValidator","msalConfig","logger","validateIdToken","idToken","verifyTokenSignature","verifiedToken","validateIdTokenClaims","validateAccessToken","accessToken","protectedRoute","validateAccessTokenClaims","authToken","decodedToken","decodeAuthToken","getSigningKeys","header","payload","tid","jwt","verify","b2cPolicies","jwksUri","auth","authority","Constants","DEFAULT_AUTHORITY_HOST","client","jwksClient","getSigningKeyAsync","kid","getPublicKey","idTokenClaims","now","Math","round","Date","getTime","checkIssuer","iss","checkAudience","aud","checkTimestamp","iat","exp","checkScopes","every","scp","decode","complete","packageName","packageVersion","BaseAuthClient","tokenValidator","cryptoProvider","CryptoProvider","Logger","system","loggerOptions","msalClient","ConfidentialClientApplication","getMsalClient","getMsalConfig","getLogger","FetchManager","axios","get","response","data","options","headers","Authorization","nextPage","callApiEndpointWithToken","graphResponse","map","v","push","id","handlePagination","UrlUtils","req","url","urlComponents","UrlString","getUrlComponents","Protocol","HostNameAndPort","startsWith","protocol","PathSegments","join","CryptoUtils","algorithm","generateSalt","crypto","toString","createKey","password","salt","encryptData","stringifiedData","key","iv","cipher","encryptedData","update","decryptData","split","encrypted","decipher","Buffer","from","MsalWebAppAuthClient","cryptoUtils","initialize","appRouter","express","Router","getPathFromUrl","handleRedirect","post","use","res","next","session","nonce","createNewGuid","frontChannelLogout","destroy","sendStatus","signIn","state","base64Encode","stage","SIGN_IN","path","postLoginRedirect","params","ensureAbsoluteUrl","getAuthCode","signOut","postLogoutRedirectUri","postLogoutRedirect","logoutUri","query","parse","base64Decode","ACQUIRE_TOKEN","tokenRequest","code","acquireTokenByCode","tokenResponse","isIdTokenValid","isAuthenticated","account","getToken","silentRequest","acquireTokenSilent","InteractionRequiredAuthError","originalUrl","hasAccess","accessMatrix","checkFor","accessRule","hasOwnProperty","warning","handleOverage","groups","checkAccessRule","method","roles","authCodeRequest","redirectUri","prompt","getAuthCodeUrl","rule","_claim_names","newIdTokenClaims","userGroups","creds","credType","methods","elem","length","AppServiceWebAppAuthClient","rawIdToken","toLowerCase","homeAccountId","oid","localAccountId","environment","username","preferred_username","name","loginUri","postLoginRedirectUri","process","env","rawAccessToken","accessTokenClaims","effectiveScopes","KeyVaultManager","getCredentialFromKeyVault","credential","DefaultAzureCredential","credentialType","SECRET","CERTIFICATE","getSecretCredential","secretResponse","type","value","log","getCertificateCredential","certificateResponse","thumbprint","properties","x509Thumbprint","privateKey","secretClient","CertificateClient","keyVaultUrl","getCertificate","credentialName","keyVaultCertificate","SecretClient","getSecret","keyVaultSecret","DistributedCachePlugin","persistenceKey","getInstance","instance","beforeCacheAccess","cacheContext","Promise","resolve","reject","sessionData","cacheData","tokenCache","deserialize","afterCacheAccess","cacheHasChanged","kvStore","getKVStore","set","serialize","MsalConfiguration","getMsalConfiguration","entries","clientSecret","clientCertificate","knownAuthorities","getDomainFromUrl","cache","EnvironmentUtils","isProduction","isDevelopment","isAppServiceAuthEnabled","WebAppAuthClientBuilder","build","buildAsync","keyVaultManager","MsalWebApiAuthClient","getTokenOnBehalf","authHeader","authorization","oboAssertion","oboRequest","acquireTokenOnBehalfOf","oboToken","isAuthorized","baseUrl","WebApiAuthClientBuilder"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,IAAI,UAAU,OAAO,EAAE;AAElC;AACA,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC;AAC5B,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC,cAAc,CAAC;AACjC,EAAE,IAAIA,WAAS,CAAC;AAChB,EAAE,IAAI,OAAO,GAAG,OAAO,MAAM,KAAK,UAAU,GAAG,MAAM,GAAG,EAAE,CAAC;AAC3D,EAAE,IAAI,cAAc,GAAG,OAAO,CAAC,QAAQ,IAAI,YAAY,CAAC;AACxD,EAAE,IAAI,mBAAmB,GAAG,OAAO,CAAC,aAAa,IAAI,iBAAiB,CAAC;AACvE,EAAE,IAAI,iBAAiB,GAAG,OAAO,CAAC,WAAW,IAAI,eAAe,CAAC;AACjE;AACA,EAAE,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACnC,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;AACpC,MAAM,KAAK,EAAE,KAAK;AAClB,MAAM,UAAU,EAAE,IAAI;AACtB,MAAM,YAAY,EAAE,IAAI;AACxB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;AACpB,GAAG;AACH,EAAE,IAAI;AACN;AACA,IAAI,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACnB,GAAG,CAAC,OAAO,GAAG,EAAE;AAChB,IAAI,MAAM,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACvC,MAAM,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC9B,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,SAAS,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE;AACrD;AACA,IAAI,IAAI,cAAc,GAAG,OAAO,IAAI,OAAO,CAAC,SAAS,YAAY,SAAS,GAAG,OAAO,GAAG,SAAS,CAAC;AACjG,IAAI,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AAC5D,IAAI,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;AACjD;AACA;AACA;AACA,IAAI,SAAS,CAAC,OAAO,GAAG,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACjE;AACA,IAAI,OAAO,SAAS,CAAC;AACrB,GAAG;AACH,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,QAAQ,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;AAClC,IAAI,IAAI;AACR,MAAM,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC;AACxD,KAAK,CAAC,OAAO,GAAG,EAAE;AAClB,MAAM,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AACzC,KAAK;AACL,GAAG;AACH;AACA,EAAE,IAAI,sBAAsB,GAAG,gBAAgB,CAAC;AAChD,EAAE,IAAI,sBAAsB,GAAG,gBAAgB,CAAC;AAChD,EAAE,IAAI,iBAAiB,GAAG,WAAW,CAAC;AACtC,EAAE,IAAI,iBAAiB,GAAG,WAAW,CAAC;AACtC;AACA;AACA;AACA,EAAE,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,SAAS,GAAG,EAAE;AACzB,EAAE,SAAS,iBAAiB,GAAG,EAAE;AACjC,EAAE,SAAS,0BAA0B,GAAG,EAAE;AAC1C;AACA;AACA;AACA,EAAE,IAAI,iBAAiB,GAAG,EAAE,CAAC;AAC7B,EAAE,MAAM,CAAC,iBAAiB,EAAE,cAAc,EAAE,YAAY;AACxD,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC,CAAC;AACL;AACA,EAAE,IAAI,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC;AACvC,EAAE,IAAI,uBAAuB,GAAG,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3E,EAAE,IAAI,uBAAuB;AAC7B,MAAM,uBAAuB,KAAK,EAAE;AACpC,MAAM,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,cAAc,CAAC,EAAE;AAC5D;AACA;AACA,IAAI,iBAAiB,GAAG,uBAAuB,CAAC;AAChD,GAAG;AACH;AACA,EAAE,IAAI,EAAE,GAAG,0BAA0B,CAAC,SAAS;AAC/C,IAAI,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;AAC3D,EAAE,iBAAiB,CAAC,SAAS,GAAG,0BAA0B,CAAC;AAC3D,EAAE,MAAM,CAAC,EAAE,EAAE,aAAa,EAAE,0BAA0B,CAAC,CAAC;AACxD,EAAE,MAAM,CAAC,0BAA0B,EAAE,aAAa,EAAE,iBAAiB,CAAC,CAAC;AACvE,EAAE,iBAAiB,CAAC,WAAW,GAAG,MAAM;AACxC,IAAI,0BAA0B;AAC9B,IAAI,iBAAiB;AACrB,IAAI,mBAAmB;AACvB,GAAG,CAAC;AACJ;AACA;AACA;AACA,EAAE,SAAS,qBAAqB,CAAC,SAAS,EAAE;AAC5C,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,SAAS,MAAM,EAAE;AACzD,MAAM,MAAM,CAAC,SAAS,EAAE,MAAM,EAAE,SAAS,GAAG,EAAE;AAC9C,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACzC,OAAO,CAAC,CAAC;AACT,KAAK,CAAC,CAAC;AACP,GAAG;AACH;AACA,EAAE,OAAO,CAAC,mBAAmB,GAAG,SAAS,MAAM,EAAE;AACjD,IAAI,IAAI,IAAI,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,WAAW,CAAC;AAClE,IAAI,OAAO,IAAI;AACf,QAAQ,IAAI,KAAK,iBAAiB;AAClC;AACA;AACA,QAAQ,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,MAAM,mBAAmB;AAC/D,QAAQ,KAAK,CAAC;AACd,GAAG,CAAC;AACJ;AACA,EAAE,OAAO,CAAC,IAAI,GAAG,SAAS,MAAM,EAAE;AAClC,IAAI,IAAI,MAAM,CAAC,cAAc,EAAE;AAC/B,MAAM,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,0BAA0B,CAAC,CAAC;AAChE,KAAK,MAAM;AACX,MAAM,MAAM,CAAC,SAAS,GAAG,0BAA0B,CAAC;AACpD,MAAM,MAAM,CAAC,MAAM,EAAE,iBAAiB,EAAE,mBAAmB,CAAC,CAAC;AAC7D,KAAK;AACL,IAAI,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AACzC,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,CAAC,KAAK,GAAG,SAAS,GAAG,EAAE;AAChC,IAAI,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;AAC5B,GAAG,CAAC;AACJ;AACA,EAAE,SAAS,aAAa,CAAC,SAAS,EAAE,WAAW,EAAE;AACjD,IAAI,SAAS,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE;AAClD,MAAM,IAAI,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;AAC/D,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACnC,QAAQ,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3B,OAAO,MAAM;AACb,QAAQ,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;AAChC,QAAQ,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AACjC,QAAQ,IAAI,KAAK;AACjB,YAAY,OAAO,KAAK,KAAK,QAAQ;AACrC,YAAY,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;AAC3C,UAAU,OAAO,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,EAAE;AACzE,YAAY,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACnD,WAAW,EAAE,SAAS,GAAG,EAAE;AAC3B,YAAY,MAAM,CAAC,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAClD,WAAW,CAAC,CAAC;AACb,SAAS;AACT;AACA,QAAQ,OAAO,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,SAAS,EAAE;AACnE;AACA;AACA;AACA,UAAU,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC;AACnC,UAAU,OAAO,CAAC,MAAM,CAAC,CAAC;AAC1B,SAAS,EAAE,SAAS,KAAK,EAAE;AAC3B;AACA;AACA,UAAU,OAAO,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACzD,SAAS,CAAC,CAAC;AACX,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,eAAe,CAAC;AACxB;AACA,IAAI,SAAS,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE;AAClC,MAAM,SAAS,0BAA0B,GAAG;AAC5C,QAAQ,OAAO,IAAI,WAAW,CAAC,SAAS,OAAO,EAAE,MAAM,EAAE;AACzD,UAAU,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAC/C,SAAS,CAAC,CAAC;AACX,OAAO;AACP;AACA,MAAM,OAAO,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,eAAe,GAAG,eAAe,CAAC,IAAI;AAC9C,UAAU,0BAA0B;AACpC;AACA;AACA,UAAU,0BAA0B;AACpC,SAAS,GAAG,0BAA0B,EAAE,CAAC;AACzC,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,GAAG;AACH;AACA,EAAE,qBAAqB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACjD,EAAE,MAAM,CAAC,aAAa,CAAC,SAAS,EAAE,mBAAmB,EAAE,YAAY;AACnE,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC,CAAC;AACL,EAAE,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC;AACxC;AACA;AACA;AACA;AACA,EAAE,OAAO,CAAC,KAAK,GAAG,SAAS,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE;AAC7E,IAAI,IAAI,WAAW,KAAK,KAAK,CAAC,EAAE,WAAW,GAAG,OAAO,CAAC;AACtD;AACA,IAAI,IAAI,IAAI,GAAG,IAAI,aAAa;AAChC,MAAM,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,CAAC;AAC/C,MAAM,WAAW;AACjB,KAAK,CAAC;AACN;AACA,IAAI,OAAO,OAAO,CAAC,mBAAmB,CAAC,OAAO,CAAC;AAC/C,QAAQ,IAAI;AACZ,QAAQ,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,MAAM,EAAE;AAC1C,UAAU,OAAO,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;AAC1D,SAAS,CAAC,CAAC;AACX,GAAG,CAAC;AACJ;AACA,EAAE,SAAS,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;AACpD,IAAI,IAAI,KAAK,GAAG,sBAAsB,CAAC;AACvC;AACA,IAAI,OAAO,SAAS,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE;AACxC,MAAM,IAAI,KAAK,KAAK,iBAAiB,EAAE;AACvC,QAAQ,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;AACxD,OAAO;AACP;AACA,MAAM,IAAI,KAAK,KAAK,iBAAiB,EAAE;AACvC,QAAQ,IAAI,MAAM,KAAK,OAAO,EAAE;AAChC,UAAU,MAAM,GAAG,CAAC;AACpB,SAAS;AACT;AACA;AACA;AACA,QAAQ,OAAO,UAAU,EAAE,CAAC;AAC5B,OAAO;AACP;AACA,MAAM,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAC9B,MAAM,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AACxB;AACA,MAAM,OAAO,IAAI,EAAE;AACnB,QAAQ,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACxC,QAAQ,IAAI,QAAQ,EAAE;AACtB,UAAU,IAAI,cAAc,GAAG,mBAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACtE,UAAU,IAAI,cAAc,EAAE;AAC9B,YAAY,IAAI,cAAc,KAAK,gBAAgB,EAAE,SAAS;AAC9D,YAAY,OAAO,cAAc,CAAC;AAClC,WAAW;AACX,SAAS;AACT;AACA,QAAQ,IAAI,OAAO,CAAC,MAAM,KAAK,MAAM,EAAE;AACvC;AACA;AACA,UAAU,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC;AACrD;AACA,SAAS,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,EAAE;AAC/C,UAAU,IAAI,KAAK,KAAK,sBAAsB,EAAE;AAChD,YAAY,KAAK,GAAG,iBAAiB,CAAC;AACtC,YAAY,MAAM,OAAO,CAAC,GAAG,CAAC;AAC9B,WAAW;AACX;AACA,UAAU,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACjD;AACA,SAAS,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,QAAQ,EAAE;AAChD,UAAU,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;AAChD,SAAS;AACT;AACA,QAAQ,KAAK,GAAG,iBAAiB,CAAC;AAClC;AACA,QAAQ,IAAI,MAAM,GAAG,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACtD,QAAQ,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AACtC;AACA;AACA,UAAU,KAAK,GAAG,OAAO,CAAC,IAAI;AAC9B,cAAc,iBAAiB;AAC/B,cAAc,sBAAsB,CAAC;AACrC;AACA,UAAU,IAAI,MAAM,CAAC,GAAG,KAAK,gBAAgB,EAAE;AAC/C,YAAY,SAAS;AACrB,WAAW;AACX;AACA,UAAU,OAAO;AACjB,YAAY,KAAK,EAAE,MAAM,CAAC,GAAG;AAC7B,YAAY,IAAI,EAAE,OAAO,CAAC,IAAI;AAC9B,WAAW,CAAC;AACZ;AACA,SAAS,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AAC5C,UAAU,KAAK,GAAG,iBAAiB,CAAC;AACpC;AACA;AACA,UAAU,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AACnC,UAAU,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AACnC,SAAS;AACT,OAAO;AACP,KAAK,CAAC;AACN,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,mBAAmB,CAAC,QAAQ,EAAE,OAAO,EAAE;AAClD,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACnD,IAAI,IAAI,MAAM,KAAKA,WAAS,EAAE;AAC9B;AACA;AACA,MAAM,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC9B;AACA,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,EAAE;AACtC;AACA,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AACzC;AACA;AACA,UAAU,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;AACpC,UAAU,OAAO,CAAC,GAAG,GAAGA,WAAS,CAAC;AAClC,UAAU,mBAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACjD;AACA,UAAU,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,EAAE;AAC1C;AACA;AACA,YAAY,OAAO,gBAAgB,CAAC;AACpC,WAAW;AACX,SAAS;AACT;AACA,QAAQ,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AACjC,QAAQ,OAAO,CAAC,GAAG,GAAG,IAAI,SAAS;AACnC,UAAU,gDAAgD,CAAC,CAAC;AAC5D,OAAO;AACP;AACA,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;AAClE;AACA,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACjC,MAAM,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AAC/B,MAAM,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AAC/B,MAAM,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC9B,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;AAC1B;AACA,IAAI,IAAI,EAAE,IAAI,EAAE;AAChB,MAAM,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AAC/B,MAAM,OAAO,CAAC,GAAG,GAAG,IAAI,SAAS,CAAC,kCAAkC,CAAC,CAAC;AACtE,MAAM,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC9B,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;AACnB;AACA;AACA,MAAM,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;AAChD;AACA;AACA,MAAM,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,QAAQ,EAAE;AACvC,QAAQ,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAChC,QAAQ,OAAO,CAAC,GAAG,GAAGA,WAAS,CAAC;AAChC,OAAO;AACP;AACA,KAAK,MAAM;AACX;AACA,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK;AACL;AACA;AACA;AACA,IAAI,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC5B,IAAI,OAAO,gBAAgB,CAAC;AAC5B,GAAG;AACH;AACA;AACA;AACA,EAAE,qBAAqB,CAAC,EAAE,CAAC,CAAC;AAC5B;AACA,EAAE,MAAM,CAAC,EAAE,EAAE,iBAAiB,EAAE,WAAW,CAAC,CAAC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,MAAM,CAAC,EAAE,EAAE,cAAc,EAAE,WAAW;AACxC,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC,CAAC;AACL;AACA,EAAE,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE,WAAW;AACpC,IAAI,OAAO,oBAAoB,CAAC;AAChC,GAAG,CAAC,CAAC;AACL;AACA,EAAE,SAAS,YAAY,CAAC,IAAI,EAAE;AAC9B,IAAI,IAAI,KAAK,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;AACpC;AACA,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;AACnB,MAAM,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,KAAK;AACL;AACA,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;AACnB,MAAM,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACjC,MAAM,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,KAAK;AACL;AACA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChC,GAAG;AACH;AACA,EAAE,SAAS,aAAa,CAAC,KAAK,EAAE;AAChC,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,IAAI,EAAE,CAAC;AACxC,IAAI,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;AAC3B,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC;AACtB,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC;AAC9B,GAAG;AACH;AACA,EAAE,SAAS,OAAO,CAAC,WAAW,EAAE;AAChC;AACA;AACA;AACA,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;AAC3C,IAAI,WAAW,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACrB,GAAG;AACH;AACA,EAAE,OAAO,CAAC,IAAI,GAAG,SAAS,MAAM,EAAE;AAClC,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;AAClB,IAAI,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;AAC5B,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrB,KAAK;AACL,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;AACnB;AACA;AACA;AACA,IAAI,OAAO,SAAS,IAAI,GAAG;AAC3B,MAAM,OAAO,IAAI,CAAC,MAAM,EAAE;AAC1B,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAC7B,QAAQ,IAAI,GAAG,IAAI,MAAM,EAAE;AAC3B,UAAU,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;AAC3B,UAAU,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC5B,UAAU,OAAO,IAAI,CAAC;AACtB,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACvB,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK,CAAC;AACN,GAAG,CAAC;AACJ;AACA,EAAE,SAAS,MAAM,CAAC,QAAQ,EAAE;AAC5B,IAAI,IAAI,QAAQ,EAAE;AAClB,MAAM,IAAI,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC;AACpD,MAAM,IAAI,cAAc,EAAE;AAC1B,QAAQ,OAAO,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7C,OAAO;AACP;AACA,MAAM,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE;AAC/C,QAAQ,OAAO,QAAQ,CAAC;AACxB,OAAO;AACP;AACA,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACnC,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,SAAS,IAAI,GAAG;AAC3C,UAAU,OAAO,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE;AACxC,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE;AAC1C,cAAc,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AACvC,cAAc,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAChC,cAAc,OAAO,IAAI,CAAC;AAC1B,aAAa;AACb,WAAW;AACX;AACA,UAAU,IAAI,CAAC,KAAK,GAAGA,WAAS,CAAC;AACjC,UAAU,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAC3B;AACA,UAAU,OAAO,IAAI,CAAC;AACtB,SAAS,CAAC;AACV;AACA,QAAQ,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAChC,OAAO;AACP,KAAK;AACL;AACA;AACA,IAAI,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;AAChC,GAAG;AACH,EAAE,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAC1B;AACA,EAAE,SAAS,UAAU,GAAG;AACxB,IAAI,OAAO,EAAE,KAAK,EAAEA,WAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;AAC5C,GAAG;AACH;AACA,EAAE,OAAO,CAAC,SAAS,GAAG;AACtB,IAAI,WAAW,EAAE,OAAO;AACxB;AACA,IAAI,KAAK,EAAE,SAAS,aAAa,EAAE;AACnC,MAAM,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACpB,MAAM,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACpB;AACA;AACA,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAGA,WAAS,CAAC;AACzC,MAAM,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AACxB,MAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC3B;AACA,MAAM,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC3B,MAAM,IAAI,CAAC,GAAG,GAAGA,WAAS,CAAC;AAC3B;AACA,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC7C;AACA,MAAM,IAAI,CAAC,aAAa,EAAE;AAC1B,QAAQ,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;AAC/B;AACA,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;AACpC,cAAc,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;AACrC,cAAc,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;AACtC,YAAY,IAAI,CAAC,IAAI,CAAC,GAAGA,WAAS,CAAC;AACnC,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,EAAE,WAAW;AACrB,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACvB;AACA,MAAM,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACzC,MAAM,IAAI,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;AAC5C,MAAM,IAAI,UAAU,CAAC,IAAI,KAAK,OAAO,EAAE;AACvC,QAAQ,MAAM,UAAU,CAAC,GAAG,CAAC;AAC7B,OAAO;AACP;AACA,MAAM,OAAO,IAAI,CAAC,IAAI,CAAC;AACvB,KAAK;AACL;AACA,IAAI,iBAAiB,EAAE,SAAS,SAAS,EAAE;AAC3C,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE;AACrB,QAAQ,MAAM,SAAS,CAAC;AACxB,OAAO;AACP;AACA,MAAM,IAAI,OAAO,GAAG,IAAI,CAAC;AACzB,MAAM,SAAS,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE;AACnC,QAAQ,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC;AAC9B,QAAQ,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC;AAC/B,QAAQ,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC;AAC3B;AACA,QAAQ,IAAI,MAAM,EAAE;AACpB;AACA;AACA,UAAU,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAClC,UAAU,OAAO,CAAC,GAAG,GAAGA,WAAS,CAAC;AAClC,SAAS;AACT;AACA,QAAQ,OAAO,CAAC,EAAE,MAAM,CAAC;AACzB,OAAO;AACP;AACA,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;AACtC;AACA,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,MAAM,EAAE;AACrC;AACA;AACA;AACA,UAAU,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;AAC/B,SAAS;AACT;AACA,QAAQ,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE;AACvC,UAAU,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;AACxD,UAAU,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;AAC5D;AACA,UAAU,IAAI,QAAQ,IAAI,UAAU,EAAE;AACtC,YAAY,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE;AAC5C,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAClD,aAAa,MAAM,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE;AACrD,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAC9C,aAAa;AACb;AACA,WAAW,MAAM,IAAI,QAAQ,EAAE;AAC/B,YAAY,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE;AAC5C,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAClD,aAAa;AACb;AACA,WAAW,MAAM,IAAI,UAAU,EAAE;AACjC,YAAY,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE;AAC9C,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAC9C,aAAa;AACb;AACA,WAAW,MAAM;AACjB,YAAY,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;AACtE,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,MAAM,EAAE,SAAS,IAAI,EAAE,GAAG,EAAE;AAChC,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI;AACrC,YAAY,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC;AAC5C,YAAY,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE;AAC1C,UAAU,IAAI,YAAY,GAAG,KAAK,CAAC;AACnC,UAAU,MAAM;AAChB,SAAS;AACT,OAAO;AACP;AACA,MAAM,IAAI,YAAY;AACtB,WAAW,IAAI,KAAK,OAAO;AAC3B,WAAW,IAAI,KAAK,UAAU,CAAC;AAC/B,UAAU,YAAY,CAAC,MAAM,IAAI,GAAG;AACpC,UAAU,GAAG,IAAI,YAAY,CAAC,UAAU,EAAE;AAC1C;AACA;AACA,QAAQ,YAAY,GAAG,IAAI,CAAC;AAC5B,OAAO;AACP;AACA,MAAM,IAAI,MAAM,GAAG,YAAY,GAAG,YAAY,CAAC,UAAU,GAAG,EAAE,CAAC;AAC/D,MAAM,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,MAAM,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;AACvB;AACA,MAAM,IAAI,YAAY,EAAE;AACxB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC;AAC5C,QAAQ,OAAO,gBAAgB,CAAC;AAChC,OAAO;AACP;AACA,MAAM,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnC,KAAK;AACL;AACA,IAAI,QAAQ,EAAE,SAAS,MAAM,EAAE,QAAQ,EAAE;AACzC,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACnC,QAAQ,MAAM,MAAM,CAAC,GAAG,CAAC;AACzB,OAAO;AACP;AACA,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO;AACjC,UAAU,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;AACtC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;AAC/B,OAAO,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC3C,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AAC1C,QAAQ,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B,QAAQ,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC1B,OAAO,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,IAAI,QAAQ,EAAE;AACvD,QAAQ,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;AAC7B,OAAO;AACP;AACA,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,MAAM,EAAE,SAAS,UAAU,EAAE;AACjC,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,KAAK,CAAC,UAAU,KAAK,UAAU,EAAE;AAC7C,UAAU,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC1D,UAAU,aAAa,CAAC,KAAK,CAAC,CAAC;AAC/B,UAAU,OAAO,gBAAgB,CAAC;AAClC,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,OAAO,EAAE,SAAS,MAAM,EAAE;AAC9B,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,MAAM,EAAE;AACrC,UAAU,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;AACxC,UAAU,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACvC,YAAY,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;AACpC,YAAY,aAAa,CAAC,KAAK,CAAC,CAAC;AACjC,WAAW;AACX,UAAU,OAAO,MAAM,CAAC;AACxB,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,MAAM,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;AAC/C,KAAK;AACL;AACA,IAAI,aAAa,EAAE,SAAS,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE;AAC3D,MAAM,IAAI,CAAC,QAAQ,GAAG;AACtB,QAAQ,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC;AAClC,QAAQ,UAAU,EAAE,UAAU;AAC9B,QAAQ,OAAO,EAAE,OAAO;AACxB,OAAO,CAAC;AACR;AACA,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE;AAClC;AACA;AACA,QAAQ,IAAI,CAAC,GAAG,GAAGA,WAAS,CAAC;AAC7B,OAAO;AACP;AACA,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL,GAAG,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,OAAO,CAAC;AACjB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,GAA+B,MAAM,CAAC,OAAO,CAAK;AAClD,CAAC,CAAC,CAAC;AACH;AACA,IAAI;AACJ,EAAE,kBAAkB,GAAG,OAAO,CAAC;AAC/B,CAAC,CAAC,OAAO,oBAAoB,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;AACtC,IAAI,UAAU,CAAC,kBAAkB,GAAG,OAAO,CAAC;AAC5C,GAAG,MAAM;AACT,IAAI,QAAQ,CAAC,GAAG,EAAE,wBAAwB,CAAC,CAAC,OAAO,CAAC,CAAC;AACrD,GAAG;AACH;;;ACjvBA;;;;AAKA,AAMA;;;;;AAIA,AAAA,IAAYC,SAAZ;;AAAA,WAAYA;AACRA,EAAAA,oBAAA,YAAA;AACAA,EAAAA,qBAAA,aAAA;AACAA,EAAAA,0BAAA,kBAAA;AACH,CAJD,EAAYA,SAAS,KAATA,SAAS,KAAA,CAArB;AAMA;;;;AAGA,AAAO,IAAMC,qBAAqB,GAAG;AACjCC,EAAAA,MAAM,EAAE,QADyB;AAEjCC,EAAAA,aAAa,EAAE,eAFkB;AAGjCC,EAAAA,SAAS,EAAE;AAHsB,CAA9B;AAMP;;;;AAGA,AAAA,IAAYC,uBAAZ;;AAAA,WAAYA;AACRA,EAAAA,iCAAA,iBAAA;AACAA,EAAAA,sCAAA,sBAAA;AACH,CAHD,EAAYA,uBAAuB,KAAvBA,uBAAuB,KAAA,CAAnC;;AAKA,AAAO,IAAMC,WAAW,0BACjBC,8BADiB,GAEpB,OAFoB,EAAjB;AAKP;;;;AAGA,AAAO,IAAMC,+BAA+B,GAAG;AAC3CC,EAAAA,iCAAiC,EAAE,mCADQ;AAE3CC,EAAAA,+BAA+B,EAAE,6BAFU;AAG3CC,EAAAA,2BAA2B,EAAE,yBAHc;AAI3CC,EAAAA,gCAAgC,EAAE,8BAJS;AAK3CC,EAAAA,uCAAuC,EAAE,2BALE;AAM3CC,EAAAA,2BAA2B,EAAE,0BANc;AAO3CC,EAAAA,2BAA2B,EAAE,4BAPc;AAQ3CC,EAAAA,wBAAwB,EAAE;AARiB,CAAxC;AAWP;;;;AAGA,AAAO,IAAMC,iCAAiC,GAAG;AAC7CC,EAAAA,iBAAiB,EAAE,WAD0B;AAE7CC,EAAAA,4BAA4B,EAAE,oBAFe;AAG7CC,EAAAA,2BAA2B,EAAE,mBAHgB;AAI7CC,EAAAA,oBAAoB,EAAE,kBAJuB;AAK7CC,EAAAA,qBAAqB,EAAE,eALsB;AAM7CC,EAAAA,sBAAsB,EAAE,gBANqB;AAO7CC,EAAAA,qBAAqB,EAAE;AAPsB,CAA1C;AAUP;;;;AAGA,AAAO,IAAMC,uCAAuC,GAAG;AACnDC,EAAAA,+BAA+B,EAAE,2BADkB;AAEnDC,EAAAA,gCAAgC,EAAE;AAFiB,CAAhD;AAKP;;;;AAGA,AAAO,IAAMC,8BAA8B,GAAG;AAC1CC,EAAAA,oBAAoB,EAAE,sBADoB;AAE1CC,EAAAA,8BAA8B,EAAE,gCAFU;AAG1CC,EAAAA,6BAA6B,EAAE,+BAHW;AAI1CC,EAAAA,wBAAwB,EAAE,0BAJgB;AAK1CC,EAAAA,yBAAyB,EAAE,2BALe;AAM1CC,EAAAA,kCAAkC,EAAE,oCANM;AAO1CC,EAAAA,0BAA0B,EAAE,4BAPc;AAQ1CC,EAAAA,sBAAsB,EAAE,wBARkB;AAS1CC,EAAAA,gBAAgB,EAAE,kBATwB;AAU1CC,EAAAA,iBAAiB,EAAE,mBAVuB;AAW1CC,EAAAA,0BAA0B,EAAE,4BAXc;AAY1CC,EAAAA,mCAAmC,EAAE,qCAZK;AAa1CC,EAAAA,uBAAuB,EAAE,yBAbiB;AAc1CC,EAAAA,wCAAwC,EAAE;AAdA,CAAvC;AAiBP;;;;AAGA,AAAO,IAAMC,sBAAsB,GAAG;AAClCC,EAAAA,MAAM,EAAE,QAD0B;AAElCC,EAAAA,KAAK,EAAE,OAF2B;AAGlCC,EAAAA,WAAW,EAAE,aAHqB;AAIlCC,EAAAA,aAAa,EAAE,gBAJmB;AAKlCC,EAAAA,eAAe,EAAE,iBALiB;AAMlCC,EAAAA,sBAAsB,EAAE,8CANU;AAOlCC,EAAAA,mBAAmB,EAAE;AAPa,CAA/B;AAUP;;;;AAGA,AAAO,IAAMC,YAAY,GAAG;AACxBC,EAAAA,yBAAyB,EAAE,qCADH;AAExBC,EAAAA,oBAAoB,EAAE,yBAFE;AAGxBC,EAAAA,gBAAgB,EAAE;AAHM,CAArB;AAMP;;;;AAGA,AAAO,IAAMC,aAAa,GAAG;AACzBC,EAAAA,aAAa,EAAE,eADU;AAEzBC,EAAAA,aAAa,EAAE,eAFU;AAGzBC,EAAAA,0BAA0B,EAAE,oCAHH;AAIzBC,EAAAA,qBAAqB,EAAE,uBAJE;AAKzBC,EAAAA,cAAc,EAAE,sBALS;AAMzBC,EAAAA,oBAAoB,EAAE,sBANG;AAOzBC,EAAAA,wBAAwB,EAAE,0BAPD;AAQzBC,EAAAA,sBAAsB,EAAE,uCARC;AASzBC,EAAAA,eAAe,EAAE,gBATQ;AAUzBC,EAAAA,iBAAiB,EAAE,yBAVM;AAWzBC,EAAAA,kBAAkB,EAAE,0BAXK;AAYzBC,EAAAA,iBAAiB,EAAE,iCAZM;AAazBC,EAAAA,eAAe,EAAE,iBAbQ;AAczBC,EAAAA,gBAAgB,EAAE,8BAdO;AAezBC,EAAAA,gBAAgB,EAAE,8BAfO;AAgBzBC,EAAAA,iBAAiB,EAAE,+BAhBM;AAiBzBC,EAAAA,iBAAiB,EAAE,+BAjBM;AAkBzBC,EAAAA,kBAAkB,EAAE,mCAlBK;AAmBzBC,EAAAA,cAAc,EAAE,8BAnBS;AAoBzBC,EAAAA,iBAAiB,EAAE,mCApBM;AAqBzBC,EAAAA,0BAA0B,EAAE;AArBH,CAAtB;AAwBP;;;;AAGA,AAAO,IAAMC,0BAA0B,GAAG;AACtCC,EAAAA,YAAY,EAAE,uBADwB;AAEtCC,EAAAA,iBAAiB,EAAE,mBAFmB;AAGtCC,EAAAA,cAAc,EAAE,0BAHsB;AAItCC,EAAAA,mBAAmB,EAAE,sBAJiB;AAKtCC,EAAAA,oBAAoB,EAAE,gCALgB;AAMtCC,EAAAA,eAAe,EAAE,2BANqB;AAOtCC,EAAAA,cAAc,EAAE,0BAPsB;AAQtCC,EAAAA,qBAAqB,EAAE;AARe,CAAnC;AAWP,AAeO,IAAMC,sBAAsB,GAAkB;AACjDC,EAAAA,cAAc,EAAE,wBAACC,QAAD,EAAWC,OAAX,EAAoBC,WAApB;AACZ,QAAIA,WAAJ,EAAiB;AACb;AACH;;AACDC,IAAAA,OAAO,CAACC,IAAR,CAAaH,OAAb;AACH,GANgD;AAOjDI,EAAAA,iBAAiB,EAAE,KAP8B;AAQjDL,EAAAA,QAAQ,EAAEM,mBAAQ,CAACC;AAR8B,CAA9C;;ICtKMC,YAAb;AAAA;;AAEI;;;;;AAFJ,eAOWC,mBAPX,GAOI,6BAA2BC,WAA3B;AACI,QAAIC,sBAAW,CAACC,OAAZ,CAAoBF,WAAW,CAACG,cAAZ,CAA2BC,QAA/C,CAAJ,EAA8D;AAC1D,YAAM,IAAIC,KAAJ,CAAU1B,0BAA0B,CAACC,YAArC,CAAN;AACH,KAFD,MAEO,IAAI,CAACkB,YAAY,CAACQ,MAAb,CAAoBN,WAAW,CAACG,cAAZ,CAA2BC,QAA/C,CAAL,EAA+D;AAClE,YAAM,IAAIC,KAAJ,CAAU1B,0BAA0B,CAACE,iBAArC,CAAN;AACH;;AAED,QAAIoB,sBAAW,CAACC,OAAZ,CAAoBF,WAAW,CAACG,cAAZ,CAA2BI,QAA/C,CAAJ,EAA8D;AAC1D,YAAM,IAAIF,KAAJ,CAAU1B,0BAA0B,CAACG,cAArC,CAAN;AACH,KAFD,MAEO,IAAI,CAACgB,YAAY,CAACQ,MAAb,CAAoBN,WAAW,CAACG,cAAZ,CAA2BI,QAA/C,CAAD,IAA6D,CAACC,MAAM,CAACC,MAAP,CAAc1G,qBAAd,EAAqC2G,QAArC,CAA8CV,WAAW,CAACG,cAAZ,CAA2BI,QAAzE,CAAlE,EAAsJ;AACzJ,YAAM,IAAIF,KAAJ,CAAU1B,0BAA0B,CAACI,mBAArC,CAAN;AACH;;AAED,QAAIkB,sBAAW,CAACC,OAAZ,CAAoBF,WAAW,CAACW,UAAZ,CAAuBC,QAA3C,CAAJ,EAA0D;AACtD,YAAM,IAAIP,KAAJ,CAAU1B,0BAA0B,CAACM,eAArC,CAAN;AACH;;AAED,QAAIgB,sBAAW,CAACC,OAAZ,CAAoBF,WAAW,CAACW,UAAZ,CAAuBE,KAA3C,CAAJ,EAAuD;AACnD,YAAM,IAAIR,KAAJ,CAAU1B,0BAA0B,CAACO,cAArC,CAAN;AACH;;AAED,QAAIe,sBAAW,CAACC,OAAZ,CAAoBF,WAAW,CAACW,UAAZ,CAAuBG,YAA3C,CAAJ,EAA8D;AAC1D,YAAM,IAAIT,KAAJ,CAAU1B,0BAA0B,CAACQ,qBAArC,CAAN;AACH;AACJ,GA/BL;;AAiCI;;;;;AAjCJ,eAsCWmB,MAtCX,GAsCI,gBAAcS,IAAd;AACI,QAAMC,SAAS,GAAG,4EAAlB;AACA,WAAOA,SAAS,CAACC,IAAV,CAAeF,IAAf,CAAP;AACH;AAED;;;;;;AA3CJ;;AAAA,eAiDWG,yBAjDX,GAiDI,mCAAiCC,MAAjC,EAAmDnB,WAAnD;AACI,QAAMoB,KAAK,GAAGZ,MAAM,CAACC,MAAP,cAAmBT,WAAW,CAACqB,kBAA/B,EAAsDrB,WAAW,CAACsB,cAAlE,GACTC,SADS,CACC,UAACC,QAAD;AAAA,aAAwBC,IAAI,CAACC,SAAL,CAAeF,QAAQ,CAACL,MAAxB,MAAoCM,IAAI,CAACC,SAAL,CAAeP,MAAf,CAA5D;AAAA,KADD,CAAd;AAGA,QAAMQ,YAAY,GAAGnB,MAAM,CAACoB,IAAP,cAAiB5B,WAAW,CAACqB,kBAA7B,EAAoDrB,WAAW,CAACsB,cAAhE,GAAkFF,KAAlF,CAArB;AAEA,WAAOO,YAAP;AACH,GAxDL;;AA0DI;;;;;;AA1DJ,eAgEWE,6BAhEX,GAgEI,uCAAqCC,gBAArC,EAA+D9B,WAA/D;AACI,QAAMmB,MAAM,GAAGX,MAAM,CAACC,MAAP,cAAmBT,WAAW,CAACqB,kBAA/B,EAAsDrB,WAAW,CAACsB,cAAlE,GACVS,IADU,CACL,UAACP,QAAD;AAAA,aAAwBA,QAAQ,CAACQ,QAAT,KAAsBF,gBAA9C;AAAA,KADK,EAC2DX,MAD1E;AAGA,WAAOA,MAAP;AACH,GArEL;;AAAA,eAuEWc,kBAvEX,GAuEI,4BAA0BC,UAA1B;AACI,QAAMC,mBAAmB,GAAGD,UAAU,CAACE,MAAX,CAAkB,UAAAC,KAAK;AAAA,aAAI,CAACjI,WAAW,CAACsG,QAAZ,CAAqB2B,KAArB,CAAL;AAAA,KAAvB,CAA5B;AACA,WAAOF,mBAAP;AACH,GA1EL;;AAAA;AAAA;;ACVA;;;;AAQA,IAGsBG,qBAAtB;AAOI,iCAAsBtC,WAAtB;AACIF,IAAAA,YAAY,CAACC,mBAAb,CAAiCC,WAAjC;AACA,SAAKA,WAAL,GAAmBA,WAAnB;AACH;;AAVL;;AAAA,SAYIuC,uBAZJ,GAYI,iCAAwBC,kBAAxB;AACI,SAAKA,kBAAL,GAA0BA,kBAA1B;AACA,WAAO,IAAP;AACH,GAfL;;AAAA,SAiBIC,qBAjBJ,GAiBI,+BAAsBC,WAAtB;AACI,SAAKC,iBAAL,GAAyBD,WAAzB;AACA,WAAO,IAAP;AACH,GApBL;;AAAA,SAsBIE,yBAtBJ,GAsBI,mCAA0BC,kBAA1B;AACI,SAAKA,kBAAL,GAA0BA,kBAA1B;AACA,WAAO,IAAP;AACH,GAzBL;;AAAA;AAAA;;ICoBaC,cAAb;AAMI;;;;;;AAMA,0BAAY9C,WAAZ,EAAsC+C,UAAtC,EAAiEC,MAAjE;AACI,SAAKhD,WAAL,GAAmBA,WAAnB;AACA,SAAK+C,UAAL,GAAkBA,UAAlB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;AAED;;;;;;;AAlBJ;;AAAA,SAuBUC,eAvBV;AAAA;AAAA;AAAA,uFAuBI,iBAAsBC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEoC,KAAKC,oBAAL,CAA0BD,OAA1B,CAFpC;;AAAA;AAEcE,cAAAA,aAFd;;AAAA,mBAIYA,aAJZ;AAAA;AAAA;AAAA;;AAAA,+CAKmB,KAAKC,qBAAL,CAA2BD,aAA3B,CALnB;;AAAA;AAAA,+CAOmB,KAPnB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,+CAUe,KAVf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvBJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAqCI;;;;;;AArCJ,SA2CUE,mBA3CV;AAAA;AAAA;AAAA,2FA2CI,kBAA0BC,WAA1B,EAA+CC,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEoC,KAAKL,oBAAL,CAA0BI,WAA1B,CAFpC;;AAAA;AAEcH,cAAAA,aAFd;;AAAA,mBAIYA,aAJZ;AAAA;AAAA;AAAA;;AAAA,gDAKmB,KAAKK,yBAAL,CAA+BL,aAA/B,EAAmEI,cAAnE,CALnB;;AAAA;AAAA,gDAOmB,KAPnB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,gDAUe,KAVf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA3CJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAyDI;;;;;AAzDJ,SA8DkBL,oBA9DlB;AAAA;AAAA;AAAA,4FA8DY,kBAA2BO,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACAzD,sBAAW,CAACC,OAAZ,CAAoBwD,SAApB,CADA;AAAA;AAAA;AAAA;;AAEA,mBAAKV,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACS,eAAhC;AAFA,gDAGO,KAHP;;AAAA;AAMJ;AACI6F,cAAAA,YAPA,GAO0Bb,cAAc,CAACc,eAAf,CAA+BF,SAA/B,CAP1B;;AAAA;AAAA;AAAA,qBAaa,KAAKG,cAAL,CAAoBF,YAAY,CAACG,MAAjC,EAAyCH,YAAY,CAACI,OAAb,CAAqBC,GAA9D,CAbb;;AAAA;AAaApC,cAAAA,IAbA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAeA,mBAAKoB,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACY,iBAAhC;AAfA,gDAgBO,KAhBP;;AAAA;AAAA;AAuBAmF,cAAAA,aAAa,GAAGa,GAAG,CAACC,MAAJ,CAAWR,SAAX,EAAsB9B,IAAtB,CAAhB;AAEA;;;;;;AAKA,kBACI,KAAK5B,WAAL,CAAiBG,cAAjB,CAAgCI,QAAhC,KAA6CxG,qBAAqB,CAACC,MAAnE,IACA,KAAKgG,WAAL,CAAiBG,cAAjB,CAAgCI,QAAhC,KAA6CxG,qBAAqB,CAACE,aADnE,IAEA,KAAK+F,WAAL,CAAiBG,cAAjB,CAAgCI,QAAhC,KAA6CxG,qBAAqB,CAACG,SAHvE,EAIE;AACE,qBAAK8F,WAAL,CAAiBG,cAAjB,CAAgCI,QAAhC,GAA2CoD,YAAY,CAACI,OAAb,CAAqBC,GAAhE;AACH;;AApCD,gDAsCOZ,aAtCP;;AAAA;AAAA;AAAA;AAwCA,mBAAKJ,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACW,kBAAhC;AAxCA,gDAyCO,KAzCP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA9DZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA2GI;;;;;;;AA3GJ,SAkHkB6F,cAlHlB;AAAA;AAAA;AAAA,sFAkHY,kBAAqBC,MAArB,EAA0CE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAGJ;AACA,kBAAI,KAAKhE,WAAL,CAAiBmE,WAArB,EAAkC;AAC9BC,gBAAAA,OAAO,GAAM,KAAKrB,UAAL,CAAgBsB,IAAhB,CAAqBC,SAA3B,yBAAP;AACH,eAFD,MAEO;AACHF,gBAAAA,OAAO,gBAAcG,oBAAS,CAACC,sBAAxB,SAAkDR,GAAlD,yBAAP;AACH;;AAEKS,cAAAA,MAVF,GAUWC,UAAU,CAAC;AACtBN,gBAAAA,OAAO,EAAEA;AADa,eAAD,CAVrB;AAAA;AAAA,qBAcUK,MAAM,CAACE,kBAAP,CAA0Bb,MAAM,CAACc,GAAjC,CAdV;;AAAA;AAAA,+DAciDC,YAdjD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlHZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAmII;;;;;AAnIJ,SAwIYxB,qBAxIZ,GAwIY,+BAAsByB,aAAtB;AACJ,QAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAlC,CAAZ;;AAEA;;;;;;AAKA,QAAMC,WAAW,GAAGN,aAAa,CAACO,GAAd,CAAkB3E,QAAlB,CAA2B,KAAKV,WAAL,CAAiBG,cAAjB,CAAgCI,QAA3D,IAAuE,IAAvE,GAA8E,KAAlG;AACA,QAAM+E,aAAa,GAAGR,aAAa,CAACS,GAAd,KAAsB,KAAKxC,UAAL,CAAgBsB,IAAhB,CAAqBjE,QAA3C,GAAsD,IAAtD,GAA6D,KAAnF;AACA,QAAMoF,cAAc,GAAGV,aAAa,CAACW,GAAd,IAAqBV,GAArB,IAA4BD,aAAa,CAACY,GAAd,IAAqBX,GAAjD,GAAuD,IAAvD,GAA8D,KAArF;AAEA,WAAOK,WAAW,IAAIE,aAAf,IAAgCE,cAAvC;AACH,GArJL;;AAuJI;;;;;;AAvJJ,SA6JY/B,yBA7JZ,GA6JY,mCAA0BL,aAA1B,EAA4DI,cAA5D;AACJ,QAAMuB,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAlC,CAAZ;;AAEA;;;;;;AAKA,QAAMC,WAAW,GAAGhC,aAAa,CAACiC,GAAd,CAAkB3E,QAAlB,CAA2B,KAAKV,WAAL,CAAiBG,cAAjB,CAAgCI,QAA3D,IAAuE,IAAvE,GAA8E,KAAlG;AACA,QAAMiF,cAAc,GAAGpC,aAAa,CAACqC,GAAd,IAAqBV,GAArB,IAA4B3B,aAAa,CAACqC,GAAd,IAAqBV,GAAjD,GAAuD,IAAvD,GAA8D,KAArF;AAEA,QAAMO,aAAa,GAAGlC,aAAa,CAACmC,GAAd,KAAsB,KAAKvF,WAAL,CAAiBG,cAAjB,CAAgCC,QAAtD,IAClBgD,aAAa,CAACmC,GAAd,KAAsB,WAAW,KAAKvF,WAAL,CAAiBG,cAAjB,CAAgCC,QAD/C,GAC0D,IAD1D,GACiE,KADvF;AAGA,QAAMuF,WAAW,GAAG7F,YAAY,CAAC+B,6BAAb,CAA2C2B,cAA3C,EAA2D,KAAKxD,WAAhE,EACf4F,KADe,CACT,UAAAC,GAAG;AAAA,aAAIzC,aAAa,CAACyC,GAAd,CAAkBnF,QAAlB,CAA2BmF,GAA3B,CAAJ;AAAA,KADM,CAApB;AAGA,WAAOP,aAAa,IAAIF,WAAjB,IAAgCI,cAAhC,IAAkDG,WAAzD;AACH,GA/KL;;AAAA,iBAiLW/B,eAjLX,GAiLI,yBAAuBF,SAAvB;AAEI,QAAI;AACA,aAAOO,GAAG,CAAC6B,MAAJ,CAAWpC,SAAX,EAAsB;AAAEqC,QAAAA,QAAQ,EAAE;AAAZ,OAAtB,CAAP;AACH,KAFD,CAEE,OAAOlF,KAAP,EAAc;AACZ,YAAM,IAAIR,KAAJ,CAAUhD,aAAa,CAACU,iBAAxB,CAAN;AACH;AACJ,GAxLL;;AAAA;AAAA;;AC/BO,IAAMiI,WAAW,GAAG,2CAApB;AACP,IAAaC,cAAc,GAAG,MAAvB;;ACDP;;;;AAKA,IAgBsBC,cAAtB;AASI,0BAAsBlG,WAAtB,EAAgD+C,UAAhD;AACI,SAAK/C,WAAL,GAAmBA,WAAnB;AACA,SAAK+C,UAAL,GAAkBA,UAAlB;AACA,SAAKoD,cAAL,GAAsB,IAAIrD,cAAJ,CAAmB,KAAK9C,WAAxB,EAAqC,KAAK+C,UAA1C,EAAsD,KAAKC,MAA3D,CAAtB;AACA,SAAKoD,cAAL,GAAsB,IAAIC,uBAAJ,EAAtB;AACA,SAAKrD,MAAL,GAAc,IAAIsD,iBAAJ,CAAW,KAAKvD,UAAL,CAAgBwD,MAAhB,CAAuBC,aAAlC,EAAiDR,WAAjD,EAA8DC,cAA9D,CAAd;AACA,SAAKQ,UAAL,GAAkB,IAAIC,sCAAJ,CAAkC,KAAK3D,UAAvC,CAAlB;AACH;;AAhBL;;AAAA,SAkBI4D,aAlBJ,GAkBI;AACI,WAAO,KAAKF,UAAZ;AACH,GApBL;;AAAA,SAsBIG,aAtBJ,GAsBI;AACI,WAAO,KAAK7D,UAAZ;AACH,GAxBL;;AAAA,SA0BI8D,SA1BJ,GA0BI;AACI,WAAO,KAAK7D,MAAZ;AACH,GA5BL;;AAAA;AAAA;;ICRa8D,YAAb;AAEI;;;;;;AAKOA,4BAAA;AAAA,yEAAkB,iBAAO9E,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEqB+E,KAAK,CAACC,GAAN,CAAUhF,QAAV,CAFrB;;AAAA;AAEXiF,YAAAA,QAFW;AAAA,6CAGVA,QAAQ,CAACC,IAHC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AASP;;;;;;;;;AAOOJ,qCAAA;AAAA,0EAA2B,kBAAO9E,QAAP,EAAyBuB,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAE1BtD,sBAAW,CAACC,OAAZ,CAAoBqD,WAApB,CAF0B;AAAA;AAAA;AAAA;;AAAA,kBAGpB,IAAIlD,KAAJ,CAAUhD,aAAa,CAACS,eAAxB,CAHoB;;AAAA;AAMxBqJ,YAAAA,OANwB,GAMM;AAChCC,cAAAA,OAAO,EAAE;AACLC,gBAAAA,aAAa,cAAY9D;AADpB;AADuB,aANN;AAAA;AAAA;AAAA,mBAaYwD,KAAK,CAACC,GAAN,CAAUhF,QAAV,EAAoBmF,OAApB,CAbZ;;AAAA;AAapBF,YAAAA,QAboB;AAAA,8CAcnBA,QAAQ,CAACC,IAdU;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;AAoBP;;;;;;;;;AAOOJ,6BAAA;AAAA,0EAAmB,kBAAOvD,WAAP,EAA4B+D,QAA5B,EAA8CJ,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA8CA,IAA9C;AAA8CA,cAAAA,IAA9C,GAA+D,EAA/D;AAAA;;AAAA;AAAA;AAAA,mBAGUJ,YAAY,CAACS,wBAAb,CAAsCD,QAAtC,EAAgD/D,WAAhD,CAHV;;AAAA;AAGZiE,YAAAA,aAHY;AAIlBA,YAAAA,aAAa,CAAC,OAAD,CAAb,CAAuBC,GAAvB,CAA2B,UAACC,CAAD;AAAA,qBAAOR,IAAI,CAACS,IAAL,CAAUD,CAAC,CAACE,EAAZ,CAAP;AAAA,aAA3B;;AAJkB,iBAMdJ,aAAa,CAAC/K,sBAAsB,CAACK,eAAxB,CANC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAODgK,YAAY,CAACe,gBAAb,CAA8BtE,WAA9B,EAA2CiE,aAAa,CAAC/K,sBAAsB,CAACK,eAAxB,CAAxD,EAAkGoK,IAAlG,CAPC;;AAAA;AAAA;;AAAA;AAAA,8CASPA,IATO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;;AC/DX;;;;AAMA,IAEaY,QAAb;AACI;;;;;;;AAMOA,0BAAA,GAAoB,UAACC,GAAD,EAAeC,GAAf;AACvB,MAAMC,aAAa,GAAS,IAAIC,oBAAJ,CAAcF,GAAd,EAAmBG,gBAAnB,EAA5B;;AAEA,MAAI,CAACF,aAAa,CAACG,QAAnB,EAA6B;AACzB,QAAI,CAACH,aAAa,CAACI,eAAf,IAAkC,CAACL,GAAG,CAACM,UAAJ,CAAe,KAAf,CAAvC,EAA8D;AAC1D,UAAI,CAACN,GAAG,CAACM,UAAJ,CAAe,GAAf,CAAL,EAA0B;AACtB,eAAOP,GAAG,CAACQ,QAAJ,GAAe,KAAf,GAAuBR,GAAG,CAACf,GAAJ,CAAQ,MAAR,CAAvB,GAAyC,GAAzC,GAA+CgB,GAAtD;AACH;;AACD,aAAOD,GAAG,CAACQ,QAAJ,GAAe,KAAf,GAAuBR,GAAG,CAACf,GAAJ,CAAQ,MAAR,CAAvB,GAAyCgB,GAAhD;AACH;;AACD,WAAOD,GAAG,CAACQ,QAAJ,GAAe,KAAf,GAAuBP,GAA9B;AACH,GARD,MAQO;AACH,WAAOA,GAAP;AACH;AACJ,CAdM;AAgBP;;;;;;;AAKOF,uBAAA,GAAiB,UAACE,GAAD;AACpB,MAAMC,aAAa,GAAS,IAAIC,oBAAJ,CAAcF,GAAd,EAAmBG,gBAAnB,EAA5B;AACA,eAAWF,aAAa,CAACO,YAAd,CAA2BC,IAA3B,CAAgC,GAAhC,CAAX;AACH,CAHM;;IClCEC,WAAb;AAII,uBAAYC,SAAZ;QAAYA;AAAAA,MAAAA,YAAoB;;;AAC5B,SAAKA,SAAL,GAAiBA,SAAjB;AACH;;AANL;;AAAA,SAQIC,YARJ,GAQI;AACI,WAAOC,kBAAA,CAAmB,EAAnB,EAAuBC,QAAvB,CAAgC,KAAhC,CAAP;AACH,GAVL;;AAAA,SAYIC,SAZJ,GAYI,mBAAUC,QAAV,EAAoBC,IAApB;AACI,WAAOJ,iBAAA,CAAkBG,QAAlB,EAA4BC,IAA5B,EAAkC,EAAlC,CAAP;AACH,GAdL;;AAAA,SAgBIC,WAhBJ,GAgBI,qBAAYC,eAAZ,EAA6BC,GAA7B;AACI,QAAMC,EAAE,GAAGR,kBAAA,CAAmB,EAAnB,CAAX;AACA,QAAMS,MAAM,GAAGT,qBAAA,CAAsB,KAAKF,SAA3B,EAAsCS,GAAtC,EAA2CC,EAA3C,CAAf;AACA,QAAME,aAAa,GAAGD,MAAM,CAACE,MAAP,CAAcL,eAAd,EAA+B,MAA/B,EAAuC,KAAvC,CAAtB;AAEA,WAAO,CAACE,EAAE,CAACP,QAAH,CAAY,KAAZ,CAAD,EAAqBS,aAAa,GAAGD,MAAM,SAAN,CAAa,KAAb,CAArC,EAA0Db,IAA1D,CAA+D,GAA/D,CAAP;AACH,GAtBL;;AAAA,SAwBIgB,WAxBJ,GAwBI,qBAAYF,aAAZ,EAA2BH,GAA3B;AACI,+BAAwBG,aAAa,CAACG,KAAd,CAAoB,GAApB,CAAxB;AAAA,QAAOL,EAAP;AAAA,QAAWM,SAAX;;AACA,QAAMC,QAAQ,GAAGf,uBAAA,CAAwB,KAAKF,SAA7B,EAAwCS,GAAxC,EAA6CS,MAAM,CAACC,IAAP,CAAYT,EAAZ,EAAgB,KAAhB,CAA7C,CAAjB;AACA,WAAOO,QAAQ,CAACJ,MAAT,CAAgBG,SAAhB,EAA2B,KAA3B,EAAkC,MAAlC,IAA4CC,QAAQ,SAAR,CAAe,MAAf,CAAnD;AACH,GA5BL;;AAAA;AAAA;;;ACuDA;;;;;;AAKA,IAAaG,oBAAb;AAAA;;AAII;;;;;AAKA,gCAAY/J,WAAZ,EAAsC+C,UAAtC;;;AACI,uCAAM/C,WAAN,EAAmB+C,UAAnB;AACA,UAAKiH,WAAL,GAAmB,IAAItB,WAAJ,EAAnB;;AACH;AAED;;;;;;;AAdJ;;AAAA,SAmBIuB,UAnBJ,GAmBI,oBAAW9C,OAAX;;;AAEI,QAAM+C,SAAS,GAAGC,OAAO,CAACC,MAAR,EAAlB;;AAGAF,IAAAA,SAAS,CAAClD,GAAV,CAAcc,QAAQ,CAACuC,cAAT,CAAwB,KAAKrK,WAAL,CAAiBW,UAAjB,CAA4BC,QAApD,CAAd,EAA6E,KAAK0J,cAAL,EAA7E;AACAJ,IAAAA,SAAS,CAACK,IAAV,CAAezC,QAAQ,CAACuC,cAAT,CAAwB,KAAKrK,WAAL,CAAiBW,UAAjB,CAA4BC,QAApD,CAAf,EAA8E,KAAK0J,cAAL,EAA9E;AAEAJ,IAAAA,SAAS,CAACM,GAAV,CAAc,UAACzC,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AAEV,UAAI,CAAC3C,GAAG,CAAC4C,OAAT,EAAkB;AACd;AACA,cAAM,IAAItK,KAAJ,CAAUhD,aAAa,CAACoB,iBAAxB,CAAN;AACH;;;AAGDsJ,MAAAA,GAAG,CAAC4C,OAAJ,CAAYC,KAAZ,GAAoB,MAAI,CAACxE,cAAL,CAAoByE,aAApB,EAApB;AACAH,MAAAA,IAAI;AACP,KAVD;;AAYA,QAAI,KAAK1K,WAAL,CAAiBW,UAAjB,CAA4BmK,kBAAhC,EAAoD;AAChD;;;;AAIAZ,MAAAA,SAAS,CAAClD,GAAV,CAAc,KAAKhH,WAAL,CAAiBW,UAAjB,CAA4BmK,kBAA1C,EAA8D,UAAC/C,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AAC1D3C,QAAAA,GAAG,CAAC4C,OAAJ,CAAYI,OAAZ,CAAoB;AAChBN,UAAAA,GAAG,CAACO,UAAJ,CAAe,GAAf;AACH,SAFD;AAGH,OAJD;AAKH;;AAED,WAAOd,SAAP;AACH;AAED;;;;;AAtDJ;;AAAA,SA2DIe,MA3DJ,GA2DI,gBAAO9D,OAAP;;;AACI,WAAO,UAACY,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AAEH,UAAMtB,GAAG,GAAG,MAAI,CAACY,WAAL,CAAiBjB,SAAjB,CAA2BhB,GAAG,CAAC4C,OAAJ,CAAYC,KAAvC,EAA8C,MAAI,CAACZ,WAAL,CAAiBpB,YAAjB,EAA9C,CAAZ;;AACAb,MAAAA,GAAG,CAAC4C,OAAJ,CAAYvB,GAAZ,GAAkBA,GAAG,CAACN,QAAJ,CAAa,KAAb,CAAlB;;AAEA,UAAMoC,KAAK,GAAG,MAAI,CAAC9E,cAAL,CAAoB+E,YAApB,CACV,MAAI,CAACnB,WAAL,CAAiBd,WAAjB,CAA6BzH,IAAI,CAACC,SAAL,CAAe;AACxC0J,QAAAA,KAAK,EAAEtR,SAAS,CAACuR,OADuB;AAExCC,QAAAA,IAAI,EAAEnE,OAAO,CAACoE,iBAF0B;AAGxCX,QAAAA,KAAK,EAAE7C,GAAG,CAAC4C,OAAJ,CAAYC;AAHqB,OAAf,CAA7B,EAIIxB,GAJJ,CADU,CAAd;;AAQA,UAAMoC,MAAM,GAAmB;AAC3BlH,QAAAA,SAAS,EAAE,MAAI,CAACvB,UAAL,CAAgBsB,IAAhB,CAAqBC,SADL;AAE3BnD,QAAAA,MAAM,EAAE9G,8BAFmB;AAG3B6Q,QAAAA,KAAK,EAAEA,KAHoB;AAI3BtK,QAAAA,QAAQ,EAAEkH,QAAQ,CAAC2D,iBAAT,CAA2B1D,GAA3B,EAAgC,MAAI,CAAC/H,WAAL,CAAiBW,UAAjB,CAA4BC,QAA5D;AAJiB,OAA/B;;AAQA,aAAO,MAAI,CAAC8K,WAAL,CAAiB3D,GAAjB,EAAsB0C,GAAtB,EAA2BC,IAA3B,EAAiCc,MAAjC,CAAP;AAEH,KAvBD;AAwBH,GApFL;;AAsFI;;;;;AAtFJ,SA2FIG,OA3FJ,GA2FI,iBAAQxE,OAAR;;;AACI,WAAO,UAACY,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AAEH,UAAMkB,qBAAqB,GAAG9D,QAAQ,CAAC2D,iBAAT,CAA2B1D,GAA3B,EAAgCZ,OAAO,CAAC0E,kBAAxC,CAA9B;AAEA;;;;;;;AAMA,UAAMC,SAAS,GAAM,MAAI,CAAC/I,UAAL,CAAgBsB,IAAhB,CAAqBC,SAA3B,qDAAoFsH,qBAAnG;AAEA7D,MAAAA,GAAG,CAAC4C,OAAJ,CAAYI,OAAZ,CAAoB;AAChBN,QAAAA,GAAG,CAAC7J,QAAJ,CAAakL,SAAb;AACH,OAFD;AAGH,KAfD;AAgBH,GA5GL;;AA8GI;;;;;;AA9GJ,SAoHYxB,cApHZ,GAoHY,wBAAenD,OAAf;;;AACJ;AAAA,gEAAO,iBAAOY,GAAP,EAAqB0C,GAArB,EAAoCC,IAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGC3C,GAAG,CAACgE,KAAJ,CAAUb,KAHX;AAAA;AAAA;AAAA;;AAIOA,gBAAAA,KAJP,GAIezJ,IAAI,CAACuK,KAAL,CAAW,MAAI,CAAChC,WAAL,CAAiBP,WAAjB,CAA6B,MAAI,CAACrD,cAAL,CAAoB6F,YAApB,CAAiClE,GAAG,CAACgE,KAAJ,CAAUb,KAA3C,CAA7B,EAA0FrB,MAAM,CAACC,IAAP,CAAY/B,GAAG,CAAC4C,OAAJ,CAAYvB,GAAxB,EAA6B,KAA7B,CAA1F,CAAX,CAJf;;AAAA,sBAOK8B,KAAK,CAACN,KAAN,KAAgB7C,GAAG,CAAC4C,OAAJ,CAAYC,KAPjC;AAAA;AAAA;AAAA;;AAAA,8BAQaM,KAAK,CAACE,KARnB;AAAA,gDASctR,SAAS,CAACuR,OATxB,uBA0CcvR,SAAS,CAACoS,aA1CxB;AAAA;;AAAA;AAUa;AACAnE,gBAAAA,GAAG,CAAC4C,OAAJ,CAAYwB,YAAZ,CAAyBC,IAAzB,GAAgCrE,GAAG,CAACgE,KAAJ,CAAUK,IAA1C;AAXb;AAAA;AAAA,uBAemE,MAAI,CAAC3F,UAAL,CAAgB4F,kBAAhB,CAAmCtE,GAAG,CAAC4C,OAAJ,CAAYwB,YAA/C,CAfnE;;AAAA;AAeuBG,gBAAAA,aAfvB;AAAA;AAAA;AAAA,uBAkBkD,MAAI,CAACnG,cAAL,CAAoBlD,eAApB,CAAoCqJ,aAAa,CAACpJ,OAAlD,CAlBlD;;AAAA;AAkB2BqJ,gBAAAA,cAlB3B;;AAoBqB,oBAAIA,cAAJ,EAAoB;AAEhB;AACAxE,kBAAAA,GAAG,CAAC4C,OAAJ,CAAY6B,eAAZ,GAA8B,IAA9B;AACAzE,kBAAAA,GAAG,CAAC4C,OAAJ,CAAY8B,OAAZ,GAAsBH,aAAa,CAACG,OAApC;AAEAhC,kBAAAA,GAAG,CAAC7J,QAAJ,CAAasK,KAAK,CAACI,IAAnB;AACH,iBAPD,MAOO;AACH,kBAAA,MAAI,CAACtI,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACE,aAAhC;;AACAkN,kBAAAA,GAAG,CAAC7J,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC;AACH;;AA9BtB;AAAA;;AAAA;AAAA;AAAA;;AAgCqB,gBAAA,MAAI,CAACkC,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACI,qBAAhC;;AACAiN,gBAAAA,IAAI,aAAJ;;AAjCrB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAoCiB,gBAAA,MAAI,CAAC1H,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACO,wBAAhC;;AACA8M,gBAAAA,IAAI,aAAJ;;AArCjB;AAAA;;AAAA;AA2Ca;AACM/I,gBAAAA,YA5CnB,GA4CkC7B,YAAY,CAACoB,yBAAb,CAAuC6G,GAAG,CAAC4C,OAAJ,CAAYwB,YAAZ,CAAyBhL,MAAhE,EAAwE,MAAI,CAACnB,WAA7E,CA5ClC;AA8Ca+H,gBAAAA,GAAG,CAAC4C,OAAJ,CAAYwB,YAAZ,CAAyBC,IAAzB,GAAgCrE,GAAG,CAACgE,KAAJ,CAAUK,IAA1C;AA9Cb;AAAA;AAAA,uBAiDmE,MAAI,CAAC3F,UAAL,CAAgB4F,kBAAhB,CAAmCtE,GAAG,CAAC4C,OAAJ,CAAYwB,YAA/C,CAjDnE;;AAAA;AAiDuBG,gBAAAA,cAjDvB;AAkDiBvE,gBAAAA,GAAG,CAAC4C,OAAJ,CAAYtJ,kBAAZ,CAA+BM,YAA/B,EAA6C4B,WAA7C,GAA2D+I,cAAa,CAAC/I,WAAzE;AACAkH,gBAAAA,GAAG,CAAC7J,QAAJ,CAAasK,KAAK,CAACI,IAAnB;AAnDjB;AAAA;;AAAA;AAAA;AAAA;;AAqDiB,gBAAA,MAAI,CAACtI,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACO,wBAAhC;;AACA8M,gBAAAA,IAAI,aAAJ;;AAtDjB;AAAA;;AAAA;AA4Da,gBAAA,MAAI,CAAC1H,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACG,0BAAhC;;AACAiN,gBAAAA,GAAG,CAAC7J,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BE,KAAzC;AA7Db;;AAAA;AAAA;AAAA;;AAAA;AAiEK,gBAAA,MAAI,CAACmC,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACK,cAAhC;;AACA+M,gBAAAA,GAAG,CAAC7J,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC;;AAlEL;AAAA;AAAA;;AAAA;AAqEC,gBAAA,MAAI,CAACkC,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACa,eAAhC;;AACAuM,gBAAAA,GAAG,CAAC7J,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC;;AAtED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAyEH,GA9LL;;AAgMI;;;;;AAhMJ,SAqMI4L,QArMJ,GAqMI,kBAASvF,OAAT;;;AACI;AAAA,iEAAO,kBAAOY,GAAP,EAAqB0C,GAArB,EAAoCC,IAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH;AACMvJ,gBAAAA,MAHH,GAGYgG,OAAO,CAAC3F,QAAR,CAAiBL,MAH7B;AAIGQ,gBAAAA,YAJH,GAIkB7B,YAAY,CAACoB,yBAAb,CAAuCC,MAAvC,EAA+C,MAAI,CAACnB,WAApD,CAJlB;;AAMH,oBAAI,CAAC+H,GAAG,CAAC4C,OAAJ,CAAYtJ,kBAAjB,EAAqC;AACjC0G,kBAAAA,GAAG,CAAC4C,OAAJ,CAAYtJ,kBAAZ,GAAiC,EAAjC;AACH;;AAED0G,gBAAAA,GAAG,CAAC4C,OAAJ,CAAYtJ,kBAAZ,sDACKM,YADL,iBAEW,MAAI,CAAC3B,WAAL,CAAiBqB,kBAAjB,CAAoCM,YAApC,CAFX;AAGQ4B,kBAAAA,WAAW,EAAE;AAHrB;AAVG;AAkBOoJ,gBAAAA,aAlBP,GAkB0C;AACrCF,kBAAAA,OAAO,EAAE1E,GAAG,CAAC4C,OAAJ,CAAY8B,OADgB;AAErCtL,kBAAAA,MAAM,EAAEA;AAF6B,iBAlB1C;;AAAA;AAAA,uBAwBmD,MAAI,CAACsF,UAAL,CAAgBmG,kBAAhB,CAAmCD,aAAnC,CAxBnD;;AAAA;AAwBOL,gBAAAA,aAxBP;;AAAA,qBA4BKrM,sBAAW,CAACC,OAAZ,CAAoBoM,aAAa,CAAC/I,WAAlC,CA5BL;AAAA;AAAA;AAAA;;AA6BK,gBAAA,MAAI,CAACP,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACS,eAAhC;;AA7BL,sBA8BW,IAAI+O,uCAAJ,CAAiCxP,aAAa,CAACM,oBAA/C,CA9BX;;AAAA;AAiCCoK,gBAAAA,GAAG,CAAC4C,OAAJ,CAAYtJ,kBAAZ,CAA+BM,YAA/B,EAA6C4B,WAA7C,GAA2D+I,aAAa,CAAC/I,WAAzE;AACAmH,gBAAAA,IAAI;AAlCL;AAAA;;AAAA;AAAA;AAAA;;AAAA,sBAqCK,wBAAiBmC,uCArCtB;AAAA;AAAA;AAAA;;AAuCWzD,gBAAAA,GAvCX,GAuCiB,MAAI,CAACY,WAAL,CAAiBjB,SAAjB,CAA2BhB,GAAG,CAAC4C,OAAJ,CAAYC,KAAvC,EAA8C,MAAI,CAACZ,WAAL,CAAiBpB,YAAjB,EAA9C,CAvCjB;AAwCKb,gBAAAA,GAAG,CAAC4C,OAAJ,CAAYvB,GAAZ,GAAkBA,GAAG,CAACN,QAAJ,CAAa,KAAb,CAAlB;AAEMoC,gBAAAA,KA1CX,GA0CmB,MAAI,CAAC9E,cAAL,CAAoB+E,YAApB,CACV,MAAI,CAACnB,WAAL,CAAiBd,WAAjB,CAA6BzH,IAAI,CAACC,SAAL,CAAe;AACxC0J,kBAAAA,KAAK,EAAEtR,SAAS,CAACoS,aADuB;AAExCZ,kBAAAA,IAAI,EAAEvD,GAAG,CAAC+E,WAF8B;AAGxClC,kBAAAA,KAAK,EAAE7C,GAAG,CAAC4C,OAAJ,CAAYC;AAHqB,iBAAf,CAA7B,EAIIxB,GAJJ,CADU,CA1CnB;AAkDWoC,gBAAAA,MAlDX,GAkDoC;AAC3BlH,kBAAAA,SAAS,EAAE,MAAI,CAACvB,UAAL,CAAgBsB,IAAhB,CAAqBC,SADL;AAE3BnD,kBAAAA,MAAM,EAAEA,MAFmB;AAG3B+J,kBAAAA,KAAK,EAAEA,KAHoB;AAI3BtK,kBAAAA,QAAQ,EAAEkH,QAAQ,CAAC2D,iBAAT,CAA2B1D,GAA3B,EAAgC,MAAI,CAAC/H,WAAL,CAAiBW,UAAjB,CAA4BC,QAA5D,CAJiB;AAK3B6L,kBAAAA,OAAO,EAAE1E,GAAG,CAAC4C,OAAJ,CAAY8B;AALM,iBAlDpC;;AAAA,kDA2DY,MAAI,CAACf,WAAL,CAAiB3D,GAAjB,EAAsB0C,GAAtB,EAA2BC,IAA3B,EAAiCc,MAAjC,CA3DZ;;AAAA;AA6DKd,gBAAAA,IAAI,cAAJ;;AA7DL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAiEH,GAvQL;;AAyQI;;;;;AAzQJ,SA8QI8B,eA9QJ,GA8QI,yBAAgBrF,OAAhB;;;AACI,WAAO,UAACY,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AACH,UAAI3C,GAAG,CAAC4C,OAAR,EAAiB;AACb,YAAI,CAAC5C,GAAG,CAAC4C,OAAJ,CAAY6B,eAAjB,EAAkC;AAC9B,UAAA,MAAI,CAACxJ,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACC,aAAhC;;AACA,iBAAOmN,GAAG,CAAC7J,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC,CAAP;AACH;;AAED4J,QAAAA,IAAI;AACP,OAPD,MAOO;AACH,QAAA,MAAI,CAAC1H,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACoB,iBAAhC;;AACAgM,QAAAA,GAAG,CAAC7J,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC;AACH;AACJ,KAZD;AAaH,GA5RL;;AA8RI;;;;;AA9RJ,SAmSIiM,SAnSJ,GAmSI,mBAAU5F,OAAV;;;AACI;AAAA,iEAAO,kBAAOY,GAAP,EAAqB0C,GAArB,EAAoCC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC3C,GAAG,CAAC4C,OAAJ,IAAe,MAAI,CAAC3K,WAAL,CAAiBgN,YADjC;AAAA;AAAA;AAAA;;AAGOC,gBAAAA,QAHP,GAGkB9F,OAAO,CAAC+F,UAAR,CAAmBC,cAAnB,CAAkC1Q,sBAAsB,CAACC,MAAzD,IAAmED,sBAAsB,CAACC,MAA1F,GAAmGD,sBAAsB,CAACE,KAH5I;AAAA,+BAKSsQ,QALT;AAAA,kDAMUxQ,sBAAsB,CAACC,MANjC,wBA4BUD,sBAAsB,CAACE,KA5BjC;AAAA;;AAAA;AAAA,sBAQaoL,GAAG,CAAC4C,OAAJ,CAAY8B,OAAZ,CAAoB3H,aAApB,CAAkCrI,sBAAsB,CAACC,MAAzD,MAAqE7C,SARlF;AAAA;AAAA;AAAA;;AAAA,sBASiBkO,GAAG,CAAC4C,OAAJ,CAAY8B,OAAZ,CAAoB3H,aAApB,CAAkCrI,sBAAsB,CAACG,WAAzD,KACGmL,GAAG,CAAC4C,OAAJ,CAAY8B,OAAZ,CAAoB3H,aAApB,CAAkCrI,sBAAsB,CAACI,aAAzD,CAVpB;AAAA;AAAA;AAAA;;AAWiB,gBAAA,MAAI,CAACmG,MAAL,CAAYoK,OAAZ,CAAoBnQ,YAAY,CAACG,gBAAjC;;AAXjB;AAAA,uBAY8B,MAAI,CAACiQ,aAAL,CAAmBtF,GAAnB,EAAwB0C,GAAxB,EAA6BC,IAA7B,EAAmCvD,OAAO,CAAC+F,UAA3C,CAZ9B;;AAAA;AAAA;;AAAA;AAciB,gBAAA,MAAI,CAAClK,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACgB,iBAAhC;;AAdjB,kDAewBoM,GAAG,CAAC7J,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC,CAfxB;;AAAA;AAAA;AAAA;;AAAA;AAkBmBwM,gBAAAA,MAlBnB,GAkB4BvF,GAAG,CAAC4C,OAAJ,CAAY8B,OAAZ,CAAoB3H,aAApB,CAAkCrI,sBAAsB,CAACC,MAAzD,CAlB5B;;AAAA,oBAoBkB,MAAI,CAAC6Q,eAAL,CAAqBxF,GAAG,CAACyF,MAAzB,EAAiCrG,OAAO,CAAC+F,UAAzC,EAAqDI,MAArD,EAA6D7Q,sBAAsB,CAACC,MAApF,CApBlB;AAAA;AAAA;AAAA;;AAAA,kDAqBwB+N,GAAG,CAAC7J,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC,CArBxB;;AAAA;AAyBS4J,gBAAAA,IAAI;AAzBb;;AAAA;AAAA,sBA6Ba3C,GAAG,CAAC4C,OAAJ,CAAY8B,OAAZ,CAAoB3H,aAApB,CAAkCrI,sBAAsB,CAACE,KAAzD,MAAoE9C,SA7BjF;AAAA;AAAA;AAAA;;AA8Ba,gBAAA,MAAI,CAACmJ,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACc,gBAAhC;;AA9Bb,kDA+BoBsM,GAAG,CAAC7J,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC,CA/BpB;;AAAA;AAiCmB2M,gBAAAA,KAjCnB,GAiC2B1F,GAAG,CAAC4C,OAAJ,CAAY8B,OAAZ,CAAoB3H,aAApB,CAAkCrI,sBAAsB,CAACE,KAAzD,CAjC3B;;AAAA,oBAmCkB,MAAI,CAAC4Q,eAAL,CAAqBxF,GAAG,CAACyF,MAAzB,EAAiCrG,OAAO,CAAC+F,UAAzC,EAAqDO,KAArD,EAA4DhR,sBAAsB,CAACE,KAAnF,CAnClB;AAAA;AAAA;AAAA;;AAAA,kDAoCwB8N,GAAG,CAAC7J,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC,CApCxB;;AAAA;AAwCS4J,gBAAAA,IAAI;AAxCb;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AA+CCD,gBAAAA,GAAG,CAAC7J,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC;;AA/CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAkDH,GAtVL;;AA0VI;;;;;;;;AA1VJ;;AAAA,SAkWkB4K,WAlWlB;AAAA;AAAA;AAAA,mFAkWY,kBAAkB3D,GAAlB,EAAgC0C,GAAhC,EAA+CC,IAA/C,EAAmEc,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAEJ;AACAzD,cAAAA,GAAG,CAAC4C,OAAJ,CAAY+C,eAAZ,GAA8B;AAC1BpJ,gBAAAA,SAAS,EAAEkH,MAAM,CAAClH,SADQ;AAE1BnD,gBAAAA,MAAM,EAAEqK,MAAM,CAACrK,MAFW;AAG1B+J,gBAAAA,KAAK,EAAEM,MAAM,CAACN,KAHY;AAI1ByC,gBAAAA,WAAW,EAAEnC,MAAM,CAAC5K,QAJM;AAK1BgN,gBAAAA,MAAM,EAAEpC,MAAM,CAACoC,MALW;AAM1BnB,gBAAAA,OAAO,EAAEjB,MAAM,CAACiB;AANU,eAA9B;AASA1E,cAAAA,GAAG,CAAC4C,OAAJ,CAAYwB,YAAZ,GAA2B;AACvB7H,gBAAAA,SAAS,EAAEkH,MAAM,CAAClH,SADK;AAEvBnD,gBAAAA,MAAM,EAAEqK,MAAM,CAACrK,MAFQ;AAGvBwM,gBAAAA,WAAW,EAAEnC,MAAM,CAAC5K,QAHG;AAIvBwL,gBAAAA,IAAI,EAAEvS;AAJiB,eAA3B,CAZI;;AAAA;AAAA;AAAA,qBAqBuB,KAAK4M,UAAL,CAAgBoH,cAAhB,CAA+B9F,GAAG,CAAC4C,OAAJ,CAAY+C,eAA3C,CArBvB;;AAAA;AAqBMzG,cAAAA,QArBN;AAsBAwD,cAAAA,GAAG,CAAC7J,QAAJ,CAAaqG,QAAb;AAtBA;AAAA;;AAAA;AAAA;AAAA;AAwBA,mBAAKjE,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACQ,sBAAhC;AACA6M,cAAAA,IAAI,cAAJ;;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlWZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA+XI;;;;;;;;AA/XJ,SAuYkB2C,aAvYlB;AAAA;AAAA;AAAA,qFAuYY,kBAAoBtF,GAApB,EAAkC0C,GAAlC,EAAiDC,IAAjD,EAAqEoD,IAArE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sCACyE/F,GAAG,CAAC4C,OAAJ,CAAY8B,OAAZ,CAAoB3H,aAD7F,EACIiJ,AAAiCC,gBADrC;AAGErB,cAAAA,aAHF,GAGqC;AACrCF,gBAAAA,OAAO,EAAE1E,GAAG,CAAC4C,OAAJ,CAAY8B,OADgB;AAErCtL,gBAAAA,MAAM,EAAE1E,sBAAsB,CAACO,mBAAvB,CAA2C0M,KAA3C,CAAiD,GAAjD;AAF6B,eAHrC;AAAA;AAAA;AAAA,qBAU4B,KAAKjD,UAAL,CAAgBmG,kBAAhB,CAAmCD,aAAnC,CAV5B;;AAAA;AAUML,cAAAA,aAVN;AAAA;AAAA;AAAA,qBAYgCxF,YAAY,CAACS,wBAAb,CAAsC9K,sBAAsB,CAACM,sBAA7D,EAAqFuP,aAAa,CAAC/I,WAAnG,CAZhC;;AAAA;AAYUiE,cAAAA,aAZV;;AAAA,mBAoBQA,aAAa,CAAC/K,sBAAsB,CAACK,eAAxB,CApBrB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAsBqCgK,YAAY,CAACe,gBAAb,CAA8ByE,aAAa,CAAC/I,WAA5C,EAAyDiE,aAAa,CAAC/K,sBAAsB,CAACK,eAAxB,CAAtE,CAtBrC;;AAAA;AAsBkBmR,cAAAA,UAtBlB;AAwBYlG,cAAAA,GAAG,CAAC4C,OAAJ,CAAY8B,OAAZ,CAAoB3H,aAApB,gBACOkJ,gBADP;AAEIV,gBAAAA,MAAM,EAAEW;AAFZ;;AAxBZ,kBA6BiB,KAAKV,eAAL,CAAqBxF,GAAG,CAACyF,MAAzB,EAAiCM,IAAjC,EAAuC/F,GAAG,CAAC4C,OAAJ,CAAY8B,OAAZ,CAAoB3H,aAApB,CAAkCrI,sBAAsB,CAACC,MAAzD,CAAvC,EAAyGD,sBAAsB,CAACC,MAAhI,CA7BjB;AAAA;AAAA;AAAA;;AAAA,gDA8BuB+N,GAAG,CAAC7J,QAAJ,CAAa,KAAKZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC,CA9BvB;;AAAA;AAAA,gDAgCuB4J,IAAI,EAhC3B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmCYA,cAAAA,IAAI,cAAJ;;AAnCZ;AAAA;AAAA;;AAAA;AAsCQ3C,cAAAA,GAAG,CAAC4C,OAAJ,CAAY8B,OAAZ,CAAoB3H,aAApB,gBACOkJ,gBADP;AAEIV,gBAAAA,MAAM,EAAE9F,aAAa,CAAC,OAAD,CAAb,CAAuBC,GAAvB,CAA2B,UAACC,CAAD;AAAA,yBAAOA,CAAC,CAACE,EAAT;AAAA,iBAA3B;AAFZ;;AAtCR,kBA2Ca,KAAK2F,eAAL,CAAqBxF,GAAG,CAACyF,MAAzB,EAAiCM,IAAjC,EAAuC/F,GAAG,CAAC4C,OAAJ,CAAY8B,OAAZ,CAAoB3H,aAApB,CAAkCrI,sBAAsB,CAACC,MAAzD,CAAvC,EAAyGD,sBAAsB,CAACC,MAAhI,CA3Cb;AAAA;AAAA;AAAA;;AAAA,gDA4CmB+N,GAAG,CAAC7J,QAAJ,CAAa,KAAKZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC,CA5CnB;;AAAA;AAAA,gDA8CmB4J,IAAI,EA9CvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkDIA,cAAAA,IAAI,cAAJ;;AAlDJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqDA;AACAA,cAAAA,IAAI,cAAJ;;AAtDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvYZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAicI;;;;;;;;AAjcJ,SAycY6C,eAzcZ,GAycY,yBAAgBC,MAAhB,EAAgCM,IAAhC,EAAkDI,KAAlD,EAAmEC,QAAnE;AACJ,QAAIL,IAAI,CAACM,OAAL,CAAa1N,QAAb,CAAsB8M,MAAtB,CAAJ,EAAmC;AAC/B,cAAQW,QAAR;AACI,aAAK1R,sBAAsB,CAACC,MAA5B;AACI,cAAIoR,IAAI,CAACR,MAAL,CAAYlL,MAAZ,CAAmB,UAAAiM,IAAI;AAAA,mBAAIH,KAAK,CAACxN,QAAN,CAAe2N,IAAf,CAAJ;AAAA,WAAvB,EAAiDC,MAAjD,GAA0D,CAA9D,EAAiE;AAC7D,iBAAKtL,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACiB,iBAAhC;AACA,mBAAO,KAAP;AACH;;AACD;;AAEJ,aAAK7B,sBAAsB,CAACE,KAA5B;AACI,cAAImR,IAAI,CAACL,KAAL,CAAWrL,MAAX,CAAkB,UAAAiM,IAAI;AAAA,mBAAIH,KAAK,CAACxN,QAAN,CAAe2N,IAAf,CAAJ;AAAA,WAAtB,EAAgDC,MAAhD,GAAyD,CAA7D,EAAgE;AAC5D,iBAAKtL,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACe,gBAAhC;AACA,mBAAO,KAAP;AACH;;AACD;AAbR;AAkBH,KAnBD,MAmBO;AACH,WAAK4E,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACkB,kBAAhC;AACA,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH,GAneL;;AAAA;AAAA,EAA0C2H,cAA1C;;ICrBaqI,0BAAb;AAAA;;AAEI;;;;;AAKA,sCAAYvO,WAAZ,EAAsC+C,UAAtC;WACI,2BAAM/C,WAAN,EAAmB+C,UAAnB;AACH;AAED;;;;;;;AAXJ;;AAAA,SAgBIkH,UAhBJ,GAgBI,oBAAW9C,OAAX;AAEI,QAAM+C,SAAS,GAAGC,OAAO,CAACC,MAAR,EAAlB;;AAGAF,IAAAA,SAAS,CAAClD,GAAV,CAAcc,QAAQ,CAACuC,cAAT,CAAwB,KAAKrK,WAAL,CAAiBW,UAAjB,CAA4BC,QAApD,CAAd,EAA6E,KAAK0J,cAAL,EAA7E;AACAJ,IAAAA,SAAS,CAACK,IAAV,CAAezC,QAAQ,CAACuC,cAAT,CAAwB,KAAKrK,WAAL,CAAiBW,UAAjB,CAA4BC,QAApD,CAAf,EAA8E,KAAK0J,cAAL,EAA9E;AAEAJ,IAAAA,SAAS,CAACM,GAAV,CAAc,UAACzC,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AAGV,UAAI,CAAC3C,GAAG,CAAC4C,OAAJ,CAAY6B,eAAjB,EAAkC;AAC9B;AACA,YAAMgC,UAAU,GAAGzG,GAAG,CAACX,OAAJ,CAAY9M,+BAA+B,CAACG,2BAAhC,CAA4DgU,WAA5D,EAAZ,CAAnB;;AAEA,YAAID,UAAJ,EAAgB;AAEZ;AAEA;AACA,cAAM1J,aAAa,GAAkBhC,cAAc,CAACc,eAAf,CAA+B4K,UAA/B,EAA2CzK,OAAhF;AAEAgE,UAAAA,GAAG,CAAC4C,OAAJ,CAAY6B,eAAZ,GAA8B,IAA9B;AAEAzE,UAAAA,GAAG,CAAC4C,OAAJ,CAAY8B,OAAZ,GAAsB;AAClBlM,YAAAA,QAAQ,EAAEuE,aAAa,CAACd,GADN;AAElB0K,YAAAA,aAAa,EAAE5J,aAAa,CAAC6J,GAAd,GAAoB,GAApB,GAA0B7J,aAAa,CAACd,GAFrC;AAGlB4K,YAAAA,cAAc,EAAE9J,aAAa,CAAC6J,GAHZ;AAIlBE,YAAAA,WAAW,EAAE/J,aAAa,CAACO,GAAd,CAAkBqE,KAAlB,CAAwB,KAAxB,EAA+B,CAA/B,EAAkCA,KAAlC,CAAwC,GAAxC,EAA6C,CAA7C,CAJK;AAKlBoF,YAAAA,QAAQ,EAAEhK,aAAa,CAACiK,kBALN;AAMlBC,YAAAA,IAAI,EAAElK,aAAa,CAACkK,IANF;AAOlBlK,YAAAA,aAAa,EAAEA;AAPG,WAAtB;AASH;AACJ;;AAED4F,MAAAA,IAAI;AACP,KA7BD;AA+BA,WAAOR,SAAP;AACH;AAED;;;;;AA1DJ;;AAAA,SA+DIe,MA/DJ,GA+DI,gBAAO9D,OAAP;AACI,WAAO,UAACY,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AACH,UAAIuE,QAAJ;AACA,UAAMC,oBAAoB,GAAGpH,QAAQ,CAAC2D,iBAAT,CAA2B1D,GAA3B,EAAgCZ,OAAO,CAACoE,iBAAxC,CAA7B;AACA0D,MAAAA,QAAQ,GAAG,aAAaE,OAAO,CAACC,GAAR,CAAY1T,8BAA8B,CAACS,gBAA3C,CAAb,GAA4EpB,iCAAiC,CAACI,oBAA9G,GAAqII,uCAAuC,CAACC,+BAA7K,GAA+M0T,oBAA1N;AACAzE,MAAAA,GAAG,CAAC7J,QAAJ,CAAaqO,QAAb;AACH,KALD;AAMH;AAGD;;;;;AAzEJ;;AAAA,SA8EItD,OA9EJ,GA8EI,iBAAQxE,OAAR;AACI,WAAO,UAACY,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AACH,UAAMkB,qBAAqB,GAAG9D,QAAQ,CAAC2D,iBAAT,CAA2B1D,GAA3B,EAAgCZ,OAAO,CAAC0E,kBAAxC,CAA9B;AACA,UAAMC,SAAS,GAAG,aAAaqD,OAAO,CAACC,GAAR,CAAY1T,8BAA8B,CAACS,gBAA3C,CAAb,GAA4EpB,iCAAiC,CAACK,qBAA9G,GAAsIG,uCAAuC,CAACE,gCAA9K,GAAiNmQ,qBAAnO;AAEA7D,MAAAA,GAAG,CAAC4C,OAAJ,CAAYI,OAAZ,CAAoB;AAChBN,QAAAA,GAAG,CAAC7J,QAAJ,CAAakL,SAAb;AACH,OAFD;AAGH,KAPD;AAQH;AAED;;;;;;AAzFJ;;AAAA,SA+FYxB,cA/FZ,GA+FY,wBAAenD,OAAf;AACJ;AAAA,gEAAO,iBAAOY,GAAP,EAAqB0C,GAArB,EAAoCC,IAApC;AAAA;AAAA;AAAA;AAAA;AACHA,gBAAAA,IAAI;;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAGH;AAED;;;;;AArGJ;;AAAA,SA0GIgC,QA1GJ,GA0GI,kBAASvF,OAAT;;;AACI;AAAA,iEAAO,kBAAOY,GAAP,EAAqB0C,GAArB,EAAoCC,IAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH;AACM/I,gBAAAA,YAHH,GAGkB7B,YAAY,CAACoB,yBAAb,CAAuCiG,OAAO,CAAC3F,QAAR,CAAiBL,MAAxD,EAAgE,KAAI,CAACnB,WAArE,CAHlB;;AAKH,oBAAI,CAAC+H,GAAG,CAAC4C,OAAJ,CAAYtJ,kBAAjB,EAAqC;AACjC0G,kBAAAA,GAAG,CAAC4C,OAAJ,CAAYtJ,kBAAZ,GAAiC,EAAjC;AACH;;AAED0G,gBAAAA,GAAG,CAAC4C,OAAJ,CAAYtJ,kBAAZ,sDACKM,YADL,iBAEW,KAAI,CAAC3B,WAAL,CAAiBqB,kBAAjB,CAAoCM,YAApC,CAFX;AAGQ4B,kBAAAA,WAAW,EAAE;AAHrB;AAOM8L,gBAAAA,cAhBH,GAgBoBtH,GAAG,CAACX,OAAJ,CAAY9M,+BAA+B,CAACE,+BAAhC,CAAgEiU,WAAhE,EAAZ,CAhBpB;;AAAA,qBAkBCY,cAlBD;AAAA;AAAA;AAAA;;AAoBOC,gBAAAA,iBApBP,GAoB8CxM,cAAc,CAACc,eAAf,CAA+ByL,cAA/B,EAA+CtL,OApB7F;;AAuBO5C,gBAAAA,MAvBP,GAuBgBmO,iBAAiB,CAACzJ,GAAlB,CAAsB6D,KAAtB,CAA4B,GAA5B,CAvBhB;AAwBO6F,gBAAAA,eAxBP,GAwByBzP,YAAY,CAACmC,kBAAb,CAAgCd,MAAhC,CAxBzB;;AAAA,qBA0BKgG,OAAO,CAAC3F,QAAR,CAAiBL,MAAjB,CAAwByE,KAAxB,CAA8B,UAAAyI,IAAI;AAAA,yBAAIkB,eAAe,CAAC7O,QAAhB,CAAyB2N,IAAzB,CAAJ;AAAA,iBAAlC,CA1BL;AAAA;AAAA;AAAA;;AA2BKtG,gBAAAA,GAAG,CAAC4C,OAAJ,CAAYtJ,kBAAZ,CAA+BM,YAA/B,EAA6C4B,WAA7C,GAA2D8L,cAA3D;AA3BL,kDA4BY3E,IAAI,EA5BhB;;AAAA;AAAA,kDA8BYA,IAAI,CAAC,IAAIrK,KAAJ,CAAU,kCAAV,CAAD,CA9BhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAkCH;AAED;;;;;AA/IJ;;AAAA,SAoJImM,eApJJ,GAoJI,yBAAgBrF,OAAhB;;;AACI,WAAO,UAACY,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AACH,UAAI3C,GAAG,CAAC4C,OAAR,EAAiB;AACb,YAAI,CAAC5C,GAAG,CAAC4C,OAAJ,CAAY6B,eAAjB,EAAkC;AAC9B,UAAA,MAAI,CAACxJ,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACC,aAAhC;;AACA,iBAAOmN,GAAG,CAAC7J,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC,CAAP;AACH;;AAED4J,QAAAA,IAAI;AACP,OAPD,MAOO;AACH,QAAA,MAAI,CAAC1H,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACoB,iBAAhC;;AACAgM,QAAAA,GAAG,CAAC7J,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC;AACH;AACJ,KAZD;AAaH,GAlKL;;AAAA;AAAA,EAAgDoF,cAAhD;;ICxBasJ,eAAb;AAAA;;AAAA;;AAEI;;;;;AAFJ,SAOUC,yBAPV;AAAA;AAAA;AAAA,iGAOI,iBAAgCjN,kBAAhC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEUkN,cAAAA,UAFV,GAEuB,IAAIC,+BAAJ,EAFvB;AAAA,4BAIYnN,kBAAkB,CAACoN,cAJ/B;AAAA,8CAKazV,uBAAuB,CAAC0V,MALrC,uBAoBa1V,uBAAuB,CAAC2V,WApBrC;AAAA;;AAAA;AAAA;AAAA;AAAA,qBAO6C,KAAKC,mBAAL,CAAyBvN,kBAAzB,EAA6CkN,UAA7C,CAP7C;;AAAA;AAOsBM,cAAAA,cAPtB;AAAA,+CASuB;AACHC,gBAAAA,IAAI,EAAE9V,uBAAuB,CAAC0V,MAD3B;AAEHK,gBAAAA,KAAK,EAAEF,cAAc,CAACE;AAFnB,eATvB;;AAAA;AAAA;AAAA;AAegBzQ,cAAAA,OAAO,CAAC0Q,GAAR;;AAfhB;AAAA;;AAAA;AAAA;AAAA;AAAA,qBAsBkD,KAAKC,wBAAL,CAA8B5N,kBAA9B,EAAkDkN,UAAlD,CAtBlD;;AAAA;AAsBsBW,cAAAA,mBAtBtB;AAAA;AAAA,qBAuB6C,KAAKN,mBAAL,CAAyBvN,kBAAzB,EAA6CkN,UAA7C,CAvB7C;;AAAA;AAuBsBM,cAAAA,eAvBtB;AAAA,+CAyBuB;AACHC,gBAAAA,IAAI,EAAE9V,uBAAuB,CAAC2V,WAD3B;AAEHI,gBAAAA,KAAK,EAAE;AACHI,kBAAAA,UAAU,EAAED,mBAAmB,CAACE,UAApB,CAA+BC,cAA/B,CAA8C1H,QAA9C,EADT;AAEH2H,kBAAAA,UAAU,EAAET,eAAc,CAACE,KAAf,CAAqBxG,KAArB,CAA2B,+BAA3B,EAA4D,CAA5D;AAFT;AAFJ,eAzBvB;;AAAA;AAAA;AAAA;AAiCgBjK,cAAAA,OAAO,CAAC0Q,GAAR;;AAjChB;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAkDI;;;;;;AAlDJ,SAwDUC,wBAxDV;AAAA;AAAA;AAAA,gGAwDI,kBAA+B5N,kBAA/B,EAAuEkN,UAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI;AACMgB,cAAAA,YAHV,GAGyB,IAAIC,sCAAJ,CAAsBnO,kBAAkB,CAACoO,WAAzC,EAAsDlB,UAAtD,CAHzB;AAAA;AAAA;AAAA,qBAM0CgB,YAAY,CAACG,cAAb,CAA4BrO,kBAAkB,CAACsO,cAA/C,CAN1C;;AAAA;AAMcC,cAAAA,mBANd;AAAA,gDAOeA,mBAPf;;AAAA;AAAA;AAAA;AASQtR,cAAAA,OAAO,CAAC0Q,GAAR;AATR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxDJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsEI;;;;;;AAtEJ;;AAAA,SA4EUJ,mBA5EV;AAAA;AAAA;AAAA,2FA4EI,kBAA0BvN,kBAA1B,EAAkEkN,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI;AACMgB,cAAAA,YAHV,GAGyB,IAAIM,4BAAJ,CAAiBxO,kBAAkB,CAACoO,WAApC,EAAiDlB,UAAjD,CAHzB;AAAA;AAAA;AAAA,qBAMqCgB,YAAY,CAACO,SAAb,CAAuBzO,kBAAkB,CAACsO,cAA1C,CANrC;;AAAA;AAMcI,cAAAA,cANd;AAAA,gDAOeA,cAPf;;AAAA;AAAA;AAAA;AASQzR,cAAAA,OAAO,CAAC0Q,GAAR;AATR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5EJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;ACjBA;;;;AAQA,IAAagB,sBAAb;AAOI,kCAAoBtO,kBAApB,EAAiEuO,cAAjE;AACI,SAAKvO,kBAAL,GAA0BA,kBAA1B;AACA,SAAKuO,cAAL,GAAsBA,cAAtB;AACH;;AAVL,yBAYWC,WAZX,GAYI,qBAAmBxO,kBAAnB,EAAgEuO,cAAhE;AACI,QAAI,CAACD,sBAAsB,CAACG,QAA5B,EAAsC;AAClCH,MAAAA,sBAAsB,CAACG,QAAvB,GAAkC,IAAIH,sBAAJ,CAA2BtO,kBAA3B,EAA+CuO,cAA/C,CAAlC;AACH;;AAED,WAAOD,sBAAsB,CAACG,QAA9B;AACH,GAlBL;;AAAA;;AAAA,SAoBUC,iBApBV;AAAA,yFAoBI,kBAAwBC,YAAxB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gDACW,IAAIC,OAAJ;AAAA,0EAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACW,KAAI,CAAC9O,kBAAL,CAAwBmE,GAAxB,CAA4B,KAAI,CAACoK,cAAjC,CADX;;AAAA;AACTQ,0BAAAA,WADS;;AAAA,+BAEXA,WAFW;AAAA;AAAA;AAAA;;AAAA;AAAA,iCAGa,KAAI,CAAC/O,kBAAL,CAAwBmE,GAAxB,CAA4BvF,IAAI,CAACuK,KAAL,CAAW4F,WAAX,EAAwBnF,OAAxB,CAAgCiC,aAA5D,CAHb;;AAAA;AAGLmD,0BAAAA,SAHK;AAIXL,0BAAAA,YAAY,CAACM,UAAb,CAAwBC,WAAxB,CAAoCF,SAApC;;AAJW;AAMfH,0BAAAA,OAAO;;AANQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAZ;;AAAA;AAAA;AAAA;AAAA,kBADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KApBJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,SA+BUM,gBA/BV;AAAA,wFA+BI,kBAAuBR,YAAvB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gDACW,IAAIC,OAAJ;AAAA,2EAAY,kBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACXH,YAAY,CAACS,eADF;AAAA;AAAA;AAAA;;AAELC,0BAAAA,OAFK,GAEKV,YAAY,CAACM,UAAb,CAAwBK,UAAxB,EAFL;AAGLzD,0BAAAA,aAHK,GAGWlO,MAAM,CAACC,MAAP,CAAcyR,OAAd,EAAuB,CAAvB,EAA0B,eAA1B,CAHX;AAAA;AAAA,iCAIL,MAAI,CAACrP,kBAAL,CAAwBuP,GAAxB,CAA4B1D,aAA5B,EAA2C8C,YAAY,CAACM,UAAb,CAAwBO,SAAxB,EAA3C,CAJK;;AAAA;AAMfX,0BAAAA,OAAO;;AANQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAZ;;AAAA;AAAA;AAAA;AAAA,kBADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA/BJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;ICgBaY,iBAAb;AAAA;;AAEI;;;;;;;;AAFJ,oBAUWC,oBAVX,GAUI,8BAA4BvS,WAA5B,EAAsD6C,kBAAtD;AACI,WAAO;AACHwB,MAAAA,IAAI;AACAjE,QAAAA,QAAQ,EAAEJ,WAAW,CAACG,cAAZ,CAA2BC,QADrC;AAEAkE,QAAAA,SAAS,EAAEtE,WAAW,CAACmE,WAAZ,GACP3D,MAAM,CAACgS,OAAP,CAAexS,WAAW,CAACmE,WAA3B,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,WAA9C,CADO;AAAA,UAGPnE,WAAW,CAACG,cAAZ,CAA2BmR,QAA3B,gBAAiDtR,WAAW,CAACG,cAAZ,CAA2BmR,QAA5E,SAAwFtR,WAAW,CAACG,cAAZ,CAA2BI,QAAnH,gBAEWgE,oBAAS,CAACC,sBAFrB,SAE+CxE,WAAW,CAACG,cAAZ,CAA2BI;AAP9E,SAQIP,WAAW,CAACG,cAAZ,CAA2BgN,cAA3B,CAA0C,cAA1C,CAAD,IAA+D;AAAEsF,QAAAA,YAAY,EAAEzS,WAAW,CAACG,cAAZ,CAA2BsS;AAA3C,OARlE,EASIzS,WAAW,CAACG,cAAZ,CAA2BgN,cAA3B,CAA0C,mBAA1C,CAAD,IAAoE;AAAEuF,QAAAA,iBAAiB,EAAE1S,WAAW,CAACG,cAAZ,CAA2BuS;AAAhD,OATvE;AAUAC,QAAAA,gBAAgB,EAAE3S,WAAW,CAACmE,WAAZ,GACd,CAAC+D,oBAAS,CAAC0K,gBAAV,CAA2BpS,MAAM,CAACgS,OAAP,CAAexS,WAAW,CAACmE,WAA3B,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,WAA9C,CAA3B,CAAD,CADc;AAAA,UAGd;AAbJ,QADD;AAgBH0O,MAAAA,KAAK,EAAE;AACHnQ,QAAAA,WAAW,EAAEG,kBAAkB,GAAGsO,sBAAsB,CAACE,WAAvB,CAAmCxO,kBAAnC,CAAH,GAA4D;AADxF,OAhBJ;AAmBH0D,MAAAA,MAAM,EAAE;AACJC,QAAAA,aAAa,EAAExG,WAAW,CAACwG,aAAZ,GAA4BxG,WAAW,CAACwG,aAAxC,GAAwDpH;AADnE;AAnBL,KAAP;AAuBH,GAlCL;;AAAA;AAAA;;ACxBA;;;;AAKA,IAIa0T,gBAAb;AAAA;;AAAA,mBACWC,YADX,GACI;AACI,WAAO5D,aAAA,KAAyB,YAAhC;AACH,GAHL;;AAAA,mBAKW6D,aALX,GAKI;AACI,WAAO7D,aAAA,KAAyB,aAAhC;AACH,GAPL;;AAAA,mBASW8D,uBATX,GASI;AACI,WAAO9D,OAAO,CAACC,GAAR,CAAY1T,8BAA8B,CAACC,oBAA3C,MAAqE,MAA5E;AACH,GAXL;;AAAA;AAAA;;ICMauX,uBAAb;AAAA;;AAKI,mCAAYlT,WAAZ;WACI,iCAAMA,WAAN;AACH;;AAPL;;AAAA,SASImT,KATJ,GASI;AACI;AAEA,SAAKpQ,UAAL,GAAkBuP,iBAAiB,CAACC,oBAAlB,CAAuC,KAAKvS,WAA5C,EAAyD,KAAK6C,kBAA9D,CAAlB;;AAEA,QAAIiQ,gBAAgB,CAACG,uBAAjB,EAAJ,EAAgD;AAC5C,aAAO,IAAI1E,0BAAJ,CAA+B,KAAKvO,WAApC,EAAiD,KAAK+C,UAAtD,CAAP;AACH,KAFD,MAEO;AACH,aAAO,IAAIgH,oBAAJ,CAAyB,KAAK/J,WAA9B,EAA2C,KAAK+C,UAAhD,CAAP;AACH;AACJ,GAnBL;;AAAA,SAqBUqQ,UArBV;AAAA,kFAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,mBAEY,KAAK5Q,kBAFjB;AAAA;AAAA;AAAA;;AAGkB6Q,cAAAA,eAHlB,GAGoC,IAAI7D,eAAJ,EAHpC;AAAA;AAAA,qBAIqC6D,eAAe,CAAC5D,yBAAhB,CAA0C,KAAKjN,kBAA/C,CAJrC;;AAAA;AAIkBkN,cAAAA,UAJlB;AAKY,mBAAK1P,WAAL,CAAiBG,cAAjB,CAAgCuP,UAAU,CAACO,IAA3C,IAAmDP,UAAU,CAACQ,KAA9D;;AALZ;AAQQ,kBAAI,KAAKrN,kBAAT,EAA6B;AACzB,qBAAKE,UAAL,GAAkBuP,iBAAiB,CAACC,oBAAlB,CAAuC,KAAKvS,WAA5C,EAAyD,KAAK6C,kBAA9D,CAAlB;AACH,eAFD,MAEO;AACH,qBAAKE,UAAL,GAAkBuP,iBAAiB,CAACC,oBAAlB,CAAuC,KAAKvS,WAA5C,CAAlB;AACH;;AAZT,mBAcY8S,gBAAgB,CAACG,uBAAjB,EAdZ;AAAA;AAAA;AAAA;;AAAA,+CAemB,IAAI1E,0BAAJ,CAA+B,KAAKvO,WAApC,EAAiD,KAAK+C,UAAtD,CAfnB;;AAAA;AAAA,+CAiBmB,IAAIgH,oBAAJ,CAAyB,KAAK/J,WAA9B,EAA2C,KAAK+C,UAAhD,CAjBnB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,oBAoBc,IAAI1C,KAAJ,aApBd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KArBJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAA6CiC,qBAA7C;;ACuBA;;;;;;AAKA,IAAagR,oBAAb;AAAA;;AAEI;;;;;AAKA,gCAAYtT,WAAZ,EAAsC+C,UAAtC;WACI,2BAAM/C,WAAN,EAAmB+C,UAAnB;AACH;AAED;;;;;;;AAXJ;;AAAA,SAgBIkH,UAhBJ,GAgBI,oBAAW9C,OAAX;AACI,QAAM+C,SAAS,GAAGC,OAAO,CAACC,MAAR,EAAlB;AAEAF,IAAAA,SAAS,CAACM,GAAV,CAAc,UAACzC,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AACV;AACAA,MAAAA,IAAI;AACP,KAHD;AAKA,WAAOR,SAAP;AACH;AAED;;;;;AA3BJ;;AAAA,SAgCIqJ,gBAhCJ,GAgCI,0BAAiBpM,OAAjB;;;AACI;AAAA,gEAAO,iBAAOY,GAAP,EAAqB0C,GAArB,EAAoCC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AACG8I,gBAAAA,UADH,GACwBzL,GAAG,CAACX,OAAJ,CAAYqM,aADpC;;AAIGtS,gBAAAA,MAJH,GAIsBgG,OAAO,CAAC3F,QAAR,CAAiBL,MAJvC;;AAOGkO,gBAAAA,cAPH,GAO4BmE,UAAU,CAAC9J,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAP5B;AAQH3B,gBAAAA,GAAG,CAAC2L,YAAJ,GAAmBrE,cAAnB;AAEMsE,gBAAAA,UAVH,GAUmC;AAClCD,kBAAAA,YAAY,EAAErE,cADoB;AAElClO,kBAAAA,MAAM,EAAEA;AAF0B,iBAVnC;AAAA;AAAA;AAAA,uBAiBmD,KAAI,CAACsF,UAAL,CAAgBmN,sBAAhB,CAAuCD,UAAvC,CAjBnD;;AAAA;AAiBOrH,gBAAAA,aAjBP;AAkBCvE,gBAAAA,GAAG,CAAC8L,QAAJ,GAAevH,aAAa,CAAC/I,WAA7B;AACAmH,gBAAAA,IAAI;AAnBL;AAAA;;AAAA;AAAA;AAAA;AAqBCA,gBAAAA,IAAI,aAAJ;;AArBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAwBH;AAED;;;;;;AA3DJ;;AAAA,SAiEIoJ,YAjEJ,GAiEI,sBAAa3M,OAAb;;;AACI;AAAA,iEAAO,kBAAOY,GAAP,EAAqB0C,GAArB,EAAoCC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AACG2E,gBAAAA,cADH,GAC4BtH,GAAG,CAACX,OAAJ,CAAYqM,aAAZ,CAA0B/J,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAD5B;;AAAA,qBAGC3B,GAAG,CAACX,OAAJ,CAAYqM,aAHb;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIa,MAAI,CAACtN,cAAL,CAAoB7C,mBAApB,CAAwC+L,cAAxC,OAA2DtH,GAAG,CAACgM,OAA/D,GAAyEhM,GAAG,CAACuD,IAA7E,CAJb;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKK,gBAAA,MAAI,CAACtI,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACE,aAAhC;;AALL,kDAMYkN,GAAG,CAAC7J,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC,CANZ;;AAAA;AASC4J,gBAAAA,IAAI;AATL;AAAA;;AAAA;AAWC,gBAAA,MAAI,CAAC1H,MAAL,CAAYnC,KAAZ,CAAkBxD,aAAa,CAACS,eAAhC;;AACA2M,gBAAAA,GAAG,CAAC7J,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC;;AAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAeH,GAjFL;;AAAA;AAAA,EAA0CoF,cAA1C;;IC9Ba8N,uBAAb;AAAA;;AAKI,mCAAYhU,WAAZ;WACI,iCAAMA,WAAN;AACH;;AAPL;;AASI;;;;AATJ,SAaImT,KAbJ,GAaI;AACI;AACA,SAAKpQ,UAAL,GAAkBuP,iBAAiB,CAACC,oBAAlB,CAAuC,KAAKvS,WAA5C,EAAyD,KAAK6C,kBAA9D,CAAlB;AACA,WAAO,IAAIyQ,oBAAJ,CAAyB,KAAKtT,WAA9B,EAA2C,KAAK+C,UAAhD,CAAP;AACH;AAED;;;;AAnBJ;;AAAA,SAuBUqQ,UAvBV;AAAA;AAAA;AAAA,kFAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,mBAEY,KAAK5Q,kBAFjB;AAAA;AAAA;AAAA;;AAGkB6Q,cAAAA,eAHlB,GAGoC,IAAI7D,eAAJ,EAHpC;AAAA;AAAA,qBAIqC6D,eAAe,CAAC5D,yBAAhB,CAA0C,KAAKjN,kBAA/C,CAJrC;;AAAA;AAIkBkN,cAAAA,UAJlB;AAKY,mBAAK1P,WAAL,CAAiBG,cAAjB,CAAgCuP,UAAU,CAACO,IAA3C,IAAmDP,UAAU,CAACQ,KAA9D;;AALZ;AAQQ,kBAAI,KAAKrN,kBAAT,EAA6B;AACzB,qBAAKE,UAAL,GAAkBuP,iBAAiB,CAACC,oBAAlB,CAAuC,KAAKvS,WAA5C,EAAyD,KAAK6C,kBAA9D,CAAlB;AACH,eAFD,MAEO;AACH,qBAAKE,UAAL,GAAkBuP,iBAAiB,CAACC,oBAAlB,CAAuC,KAAKvS,WAA5C,CAAlB;AACH;;AAZT,+CAce,IAAIsT,oBAAJ,CAAyB,KAAKtT,WAA9B,EAA2C,KAAK+C,UAAhD,CAdf;;AAAA;AAAA;AAAA;AAAA,oBAgBc,IAAI1C,KAAJ,aAhBd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvBJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAA6CiC,qBAA7C;;;;;;;;;;;;;;;"}