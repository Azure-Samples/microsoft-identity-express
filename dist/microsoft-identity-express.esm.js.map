{"version":3,"file":"microsoft-identity-express.esm.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/utils/Constants.ts","../src/config/AppSettings.ts","../src/config/ConfigHelper.ts","../src/client/BaseAuthClientBuilder.ts","../src/packageMetadata.ts","../src/utils/CryptoUtils.ts","../src/client/BaseAuthClient.ts","../src/network/FetchManager.ts","../src/utils/UrlUtils.ts","../src/client/webapp/MsalWebAppAuthClient.ts","../src/client/webapp/AppServiceWebAppAuthClient.ts","../src/network/KeyVaultManager.ts","../src/config/MsalConfiguration.ts","../src/utils/EnvironmentUtils.ts","../src/client/webapp/WebAppAuthClientBuilder.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    LoggerOptions,\n    LogLevel,\n    OIDC_DEFAULT_SCOPES,\n} from \"@azure/msal-common\";\n\n/**\n * Basic authentication stages used to determine\n * appropriate action after redirect occurs\n */\nexport enum AppStages {\n    SIGN_IN = \"sign_in\",\n    SIGN_OUT = \"sign_out\",\n    ACQUIRE_TOKEN = \"acquire_token\",\n};\n\n/**\n * String constants related to AAD Authority\n */\nexport const AADAuthorityConstants = {\n    COMMON: \"common\",\n    ORGANIZATIONS: \"organizations\",\n    CONSUMERS: \"consumers\"\n}\n\n/**\n * String constants related credential type\n */\nexport enum KeyVaultCredentialTypes {\n    SECRET = \"clientSecret\",\n    CERTIFICATE = \"clientCertificate\",\n}\n\nexport const OIDC_SCOPES = [\n    ...OIDC_DEFAULT_SCOPES,\n    \"email\"\n]\n\n/**\n * Request headers used by App Service authentication\n */\nexport const AppServiceAuthenticationHeaders = {\n    APP_SERVICE_AUTHENTICATION_HEADER: \"X-MSAL-APP-SERVICE-AUTHENTICATION\",\n    APP_SERVICE_ACCESS_TOKEN_HEADER: \"X-MS-TOKEN-AAD-ACCESS-TOKEN\",\n    APP_SERVICE_ID_TOKEN_HEADER: \"X-MS-TOKEN-AAD-ID-TOKEN\",\n    APP_SERVICE_REFRESH_TOKEN_HEADER: \"X-MS-TOKEN-AAD-REFRESH-TOKEN\",\n    APP_SERVICE_ACCESS_TOKEN_EXPIRES_HEADER: \"X-MS-TOKEN-AAD-EXPIRES-ON\",\n    APP_SERVICE_USER_OID_HEADER: \"X-MS-CLIENT-PRINCIPAL-ID\",\n    APP_SERVICE_USER_UPN_HEADER: \"X-MS-CLIENT-PRINCIPAL-NAME\",\n    APP_SERVICE_IDP_X_HEADER: \"X-MS-CLIENT-PRINCIPAL-IDP\"\n}\n\n/**\n * Endpoints used by App Service authentication\n */\nexport const AppServiceAuthenticationEndpoints = {\n    ID_TOKEN_ENDPOINT: \"/.auth/me\",\n    POST_LOGOUT_DEFAULT_ENDPOINT: \"/.auth/logout/done\",\n    POST_LOGIN_DEFAULT_ENDPOINT: \"/.auth/login/done\",\n    AAD_SIGN_IN_ENDPOINT: \"/.auth/login/aad\",\n    AAD_SIGN_OUT_ENDPOINT: \"/.auth/logout\",\n    TOKEN_REFRESH_ENDPOINT: \"/.auth/refresh\",\n    AAD_REDIRECT_ENDPOINT: \"/.auth/login/aad/callback\",\n}\n\n/**\n * Query parameters used by App Service authentication endpoints\n */\nexport const AppServiceAuthenticationQueryParameters = {\n    POST_LOGIN_REDIRECT_QUERY_PARAM: \"?post_login_redirect_url=\",\n    POST_LOGOUT_REDIRECT_QUERY_PARAM: \"?post_logout_redirect_uri=\",\n}\n\n/**\n * Environment variables used by App Service authentication\n */\nexport const AppServiceEnvironmentVariables = {\n    WEBSITE_AUTH_ENABLED: \"WEBSITE_AUTH_ENABLED\",\n    WEBSITE_AUTH_ALLOWED_AUDIENCES: \"WEBSITE_AUTH_ALLOWED_AUDIENCES\",\n    WEBSITE_AUTH_DEFAULT_PROVIDER: \"WEBSITE_AUTH_DEFAULT_PROVIDER\",\n    WEBSITE_AUTH_TOKEN_STORE: \"WEBSITE_AUTH_TOKEN_STORE\",\n    WEBSITE_AUTH_LOGIN_PARAMS: \"WEBSITE_AUTH_LOGIN_PARAMS\",\n    WEBSITE_AUTH_PRESERVE_URL_FRAGMENT: \"WEBSITE_AUTH_PRESERVE_URL_FRAGMENT\",\n    WEBSITE_AUTH_OPENID_ISSUER: \"WEBSITE_AUTH_OPENID_ISSUER\",\n    WEBSITE_AUTH_CLIENT_ID: \"WEBSITE_AUTH_CLIENT_ID\",\n    WEBSITE_HOSTNAME: \"WEBSITE_HOSTNAME\",\n    WEBSITE_SITE_NAME: \"WEBSITE_SITE_NAME\",\n    WEBSITE_AUTH_REQUIRE_HTTPS: \"WEBSITE_AUTH_REQUIRE_HTTPS\",\n    WEBSITE_AUTH_UNAUTHENTICATED_ACTION: \"WEBSITE_AUTH_UNAUTHENTICATED_ACTION\",\n    WEBSITE_AUTH_API_PREFIX: \"WEBSITE_AUTH_API_PREFIX\",\n    MICROSOFT_PROVIDER_AUTHENTICATION_SECRET: \"MICROSOFT_PROVIDER_AUTHENTICATION_SECRET\",\n}\n\n/**\n * Constants used in access control scenarios\n */\nexport const AccessControlConstants = {\n    GROUPS: \"groups\",\n    ROLES: \"roles\",\n    CLAIM_NAMES: \"_claim_name\",\n    CLAIM_SOURCES: \"_claim_sources\",\n    PAGINATION_LINK: \"@odata.nextLink\",\n    GRAPH_MEMBERS_ENDPOINT: \"https://graph.microsoft.com/v1.0/me/memberOf\",\n    GRAPH_MEMBER_SCOPES: \"User.Read GroupMember.Read.All\"\n};\n\n/**\n * Various information constants\n */\nexport const InfoMessages = {\n    APP_SERVICE_AUTH_DETECTED: \"App Service Authentication detected\",\n    REQUEST_FOR_RESOURCE: \"Request made to web API\",\n    OVERAGE_OCCURRED: \"User has too many groups. Groups overage claim occurred\"\n}\n\n/**\n * Various error constants\n */\nexport const ErrorMessages = {\n    NOT_PERMITTED: \"Not permitted\",\n    INVALID_TOKEN: \"Invalid token\",\n    CANNOT_DETERMINE_APP_STAGE: \"Cannot determine application stage\",\n    CANNOT_VALIDATE_TOKEN: \"Cannot validate token\",\n    CSRF_TOKEN_MISMATH: \"CSRF token in response does not match to original request\",\n    INTERACTION_REQUIRED: \"interaction_required\",\n    TOKEN_ACQUISITION_FAILED: \"Token acquisition failed\",\n    TOKEN_RESPONSE_NULL: \"Token response is null\",\n    AUTH_CODE_NOT_OBTAINED: \"Authorization code cannot be obtained\",\n    TOKEN_NOT_FOUND: \"No token found\",\n    TOKEN_NOT_DECODED: \"Token cannot be decoded\",\n    TOKEN_NOT_VERIFIED: \"Token cannot be verified\",\n    KEYS_NOT_OBTAINED: \"Signing keys cannot be obtained\",\n    STATE_NOT_FOUND: \"State not found\",\n    USER_HAS_NO_ROLE: \"User does not have any roles\",\n    USER_NOT_IN_ROLE: \"User does not have this role\",\n    USER_HAS_NO_GROUP: \"User does not have any groups\",\n    USER_NOT_IN_GROUP: \"User does not have this group\",\n    METHOD_NOT_ALLOWED: \"Method not allowed for this route\",\n    RULE_NOT_FOUND: \"No rule found for this route\",\n    SESSION_NOT_FOUND: \"No session found for this request\",\n    KEY_VAULT_CONFIG_NOT_FOUND: \"No coordinates found for Key Vault\",\n    CANNOT_OBTAIN_CREDENTIALS_FROM_KEY_VAULT: \"Cannot obtain credentials from Key Vault\",\n};\n\n/**\n * Various configuration error constants\n */\nexport const ConfigurationErrorMessages = {\n    NO_CLIENT_ID: \"No clientId provided!\",\n    INVALID_CLIENT_ID: \"Invalid clientId!\",\n    NO_TENANT_INFO: \"No tenant info provided!\",\n    INVALID_TENANT_INFO: \"Invalid tenant info!\",\n    NO_CLIENT_CREDENTIAL: \"No client credential provided!\",\n    NO_REDIRECT_URI: \"No redirect URI provided!\",\n    NO_ERROR_ROUTE: \"No error route provided!\",\n    NO_UNAUTHORIZED_ROUTE: \"No unauthorized route provided!\"\n}\n\n/**\n * For more information, visit: https://login.microsoftonline.com/error\n */\nexport const ErrorCodes = {\n    65001: \"AADSTS65001\", // consent required\n    50076: \"AADSTS50076\", // mfa required\n    50079: \"AADSTS50079\", // mfa enrollment required\n    50001: \"AADSTS50001\", // invalid resource uri\n    65004: \"AADSTS65004\", // user declined consent\n    70011: \"AADSTS70011\", // invalid scope\n    700022: \"AADSTS700022\", // multiple resources\n    700020: \"AADSTS700020\", // interaction required\n    90118: \"AADB2C90118\", // password forgotten (B2C)\n};\n\nexport const DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\n    loggerCallback: (logLevel, message, containsPii) => {\n        if (containsPii) {\n            return;\n        }\n        console.info(message);\n    },\n    piiLoggingEnabled: false,\n    logLevel: LogLevel.Info,\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { LoggerOptions } from \"@azure/msal-common\";\n\nexport type AppSettings = {\n    appCredentials: AppCredentials;\n    authRoutes?: AuthRoutes;\n    loggerOptions?: LoggerOptions;\n    b2cPolicies?: {\n        [policy: string]: Policy;\n    };\n    accessMatrix?: {\n        [accessRule: string]: AccessRule\n    };\n    protectedResources?: {\n        [resource: string]: Resource;\n    };\n    ownedResources?: {\n        [resource: string]: Resource\n    };\n};\n\nexport type AppCredentials = {\n    instance?: string;\n    clientId: string;\n    tenantId: string;\n    clientSecret?: string;\n    clientCertificate?: ClientCertificate;\n};\n\nexport type ClientCertificate = {\n    thumbprint: string;\n    privateKey: string;\n    x5c?: string;\n};\n\nexport type KeyVaultCredential = {\n    credentialType: string;\n    credentialName: string;\n    keyVaultUrl: string;\n};\n\nexport type AuthRoutes = {\n    redirect: string;\n    unauthorized: string;\n    frontChannelLogout?: string;\n};\n\nexport type Policy = {\n    authority: string;\n};\n\nexport type Resource = {\n    endpoint: string;\n    scopes: string[];\n    accessToken?: string;\n};\n\nexport type AccessRule = {\n    path: string;\n    methods: string[];\n    roles?: string[];\n    groups?: string[];\n};\n\nexport enum AppType {\n    WebApp,\n    WebApi\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StringUtils } from \"@azure/msal-common\";\n\nimport { AADAuthorityConstants, ConfigurationErrorMessages, OIDC_SCOPES } from \"../utils/Constants\";\nimport { AppSettings, AppType, Resource } from \"./AppSettings\";\n\nexport class ConfigHelper {\n\n    /**\n     * Validates the fields in the configuration file\n     * @param {AppSettings} appSettings: configuration object\n     * @returns {void}\n     */\n    static validateAppSettings(appSettings: AppSettings, appType: AppType): void {\n        if (StringUtils.isEmpty(appSettings.appCredentials.clientId)) {\n            throw new Error(ConfigurationErrorMessages.NO_CLIENT_ID);\n        } else if (!ConfigHelper.isGuid(appSettings.appCredentials.clientId)) {\n            throw new Error(ConfigurationErrorMessages.INVALID_CLIENT_ID);\n        }\n\n        if (StringUtils.isEmpty(appSettings.appCredentials.tenantId)) {\n            throw new Error(ConfigurationErrorMessages.NO_TENANT_INFO);\n        } else if (!ConfigHelper.isGuid(appSettings.appCredentials.tenantId) && !Object.values(AADAuthorityConstants).includes(appSettings.appCredentials.tenantId)) {\n            throw new Error(ConfigurationErrorMessages.INVALID_TENANT_INFO);\n        }\n\n        switch (appType) {\n            case AppType.WebApp:\n                if (StringUtils.isEmpty(appSettings.authRoutes?.redirect)) {\n                    throw new Error(ConfigurationErrorMessages.NO_REDIRECT_URI);\n                }\n\n                if (StringUtils.isEmpty(appSettings.authRoutes?.unauthorized)) {\n                    throw new Error(ConfigurationErrorMessages.NO_UNAUTHORIZED_ROUTE);\n                }\n\n                break;\n            case AppType.WebApi:\n                break;\n            default:\n                break;\n        }\n    };\n\n    /**\n     * Verifies if a string is GUID\n     * @param {string} guid\n     * @returns {boolean}\n     */\n    static isGuid(guid: string): boolean {\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n        return regexGuid.test(guid);\n    }\n\n    /**\n     * Util method to get the resource name for a given scope(s)\n     * @param {Array} scopes: an array of scopes that the resource is associated with\n     * @param {AppSettings} appSettings: application authentication parameters\n     * @returns {string}\n     */\n    static getResourceNameFromScopes(scopes: string[], appSettings: AppSettings): string {\n        const index = Object.values({ ...appSettings.protectedResources, ...appSettings.ownedResources })\n            .findIndex((resource: Resource) => JSON.stringify(resource.scopes) === JSON.stringify(scopes));\n\n        const resourceName = Object.keys({ ...appSettings.protectedResources, ...appSettings.ownedResources })[index];\n\n        return resourceName;\n    };\n\n    /**\n     * Util method to get the scopes for a given resource name\n     * @param {string} resourceEndpoint: the resource name\n     * @param {AppSettings} appSettings: application authentication parameters\n     * @returns {string}\n     */\n    static getScopesFromResourceEndpoint(resourceEndpoint: string, appSettings: AppSettings): string[] {\n        const scopes = Object.values({ ...appSettings.protectedResources, ...appSettings.ownedResources })\n            .find((resource: Resource) => resource.endpoint === resourceEndpoint)?.scopes;\n\n        return scopes ? scopes : []\n    };\n\n    /**\n     * Util method to strip the default OIDC scopes from the scopes array\n     * @param {Array} scopesList full list of scopes for this resource\n     * @returns\n     */\n    static getEffectiveScopes(scopesList: string[]): string[] {\n        const effectiveScopesList = scopesList.filter(scope => !OIDC_SCOPES.includes(scope));\n        return effectiveScopesList;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICachePlugin } from \"@azure/msal-node\";\n\nimport { ConfigHelper } from \"../config/ConfigHelper\";\nimport { AppSettings, AppType, KeyVaultCredential } from \"../config/AppSettings\";\n\nexport abstract class BaseAuthClientBuilder {\n\n    appSettings: AppSettings;\n    protected keyVaultCredential: KeyVaultCredential | undefined;\n    protected customCachePlugin: ICachePlugin | undefined;\n\n    protected constructor(appSettings: AppSettings, appType: AppType) {\n        ConfigHelper.validateAppSettings(appSettings, appType);\n        this.appSettings = appSettings;\n    };\n\n    withKeyVaultCredentials(keyVaultCredential: KeyVaultCredential): BaseAuthClientBuilder {\n        this.keyVaultCredential = keyVaultCredential;\n        return this;\n    }\n\n    withCustomCachePlugin(cachePlugin: ICachePlugin): BaseAuthClientBuilder {\n        this.customCachePlugin = cachePlugin;\n        return this;\n    }\n\n    abstract build(): any;\n\n    abstract buildAsync(): Promise<any>;\n}\n","export const packageName = \"@azure-samples/microsoft-identity-express\";\nexport const packageVersion = \"beta\";","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as crypto from \"crypto\";\n\nexport class CryptoUtils {\n\n    private algorithm: string;\n\n    constructor(algorithm: string = \"aes-192-cbc\") {\n        this.algorithm = algorithm;\n    }\n\n    generateSalt(): string {\n        return crypto.randomBytes(20).toString('hex');\n    }\n\n    createKey(password: string, salt: string): Buffer {\n        return crypto.scryptSync(password, salt, 24);\n    }\n\n    encryptData(stringifiedData: string, key: Buffer): string {\n        const iv = crypto.randomBytes(16);\n        const cipher = crypto.createCipheriv(this.algorithm, key, iv);\n        const encryptedData = cipher.update(stringifiedData, 'utf8', 'hex');\n\n        return [iv.toString(\"hex\"), encryptedData + cipher.final('hex')].join(\".\");\n    }\n\n    decryptData(encryptedData: string, key: Buffer): string {\n        const [iv, encrypted] = encryptedData.split(\".\");\n        const decipher = crypto.createDecipheriv(this.algorithm, key, Buffer.from(iv, \"hex\"));\n        return decipher.update(encrypted, 'hex', 'utf8') + decipher.final('utf8');\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"@azure/msal-common\";\n\nimport {\n    ConfidentialClientApplication,\n    Configuration,\n    CryptoProvider,\n} from \"@azure/msal-node\";\n\nimport { AppSettings } from \"../config/AppSettings\";\n\nimport {\n    packageName,\n    packageVersion\n} from \"../packageMetadata\";\nimport { CryptoUtils } from \"../utils/CryptoUtils\";\n\nexport abstract class BaseAuthClient {\n\n    appSettings: AppSettings;\n\n    protected msalConfig: Configuration;\n    protected msalClient: ConfidentialClientApplication;\n    protected cryptoProvider: CryptoProvider;\n    protected cryptoUtils: CryptoUtils;\n    protected logger: Logger;\n\n    protected constructor(appSettings: AppSettings, msalConfig: Configuration) {\n        this.appSettings = appSettings;\n        this.msalConfig = msalConfig;\n        this.cryptoProvider = new CryptoProvider();\n        this.cryptoUtils = new CryptoUtils();\n\n        this.logger = new Logger(this.msalConfig.system?.loggerOptions!, packageName, packageVersion);\n\n        this.msalClient = new ConfidentialClientApplication(this.msalConfig);\n    }\n\n    getMsalClient(): ConfidentialClientApplication {\n        return this.msalClient;\n    }\n\n    getMsalConfig(): Configuration {\n        return this.msalConfig;\n    }\n\n    getLogger(): Logger {\n        return this.logger;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport axios, { AxiosResponse, AxiosRequestConfig } from \"axios\";\nimport { StringUtils } from \"@azure/msal-common\";\n\nimport {\n    AccessControlConstants,\n    ErrorMessages\n} from \"../utils/Constants\";\n\nexport class FetchManager {\n\n    /**\n     * Calls a resource endpoint\n     * @param {string} endpoint\n     * @returns {Promise}\n     */\n    static callApiEndpoint = async (endpoint: string): Promise<AxiosResponse> => {\n        try {\n            const response: AxiosResponse = await axios.get(endpoint);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    /**\n     * Calls a resource endpoint with a raw access token\n     * using the authorization bearer token scheme\n     * @param {string} endpoint\n     * @param {string} accessToken\n     * @returns {Promise}\n     */\n    static callApiEndpointWithToken = async (endpoint: string, accessToken: string): Promise<AxiosResponse<any>> => {\n\n        if (StringUtils.isEmpty(accessToken)) {\n            throw new Error(ErrorMessages.TOKEN_NOT_FOUND)\n        }\n\n        const options: AxiosRequestConfig = {\n            headers: {\n                Authorization: `Bearer ${accessToken}`\n            }\n        };\n\n        try {\n            const response: AxiosResponse = await axios.get(endpoint, options);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    /**\n     * Handles queries against Microsoft Graph that return multiple pages of data\n     * @param {string} accessToken: access token required by endpoint\n     * @param {string} nextPage: next page link\n     * @param {Array} data: stores data from each page\n     * @returns {Promise}\n     */\n    static handlePagination = async (accessToken: string, nextPage: string, data: string[] = []): Promise<string[]> => {\n\n        try {\n            const graphResponse = await (await FetchManager.callApiEndpointWithToken(nextPage, accessToken)).data;\n            graphResponse[\"value\"].map((v: any) => data.push(v.id));\n\n            if (graphResponse[AccessControlConstants.PAGINATION_LINK]) {\n                return await FetchManager.handlePagination(accessToken, graphResponse[AccessControlConstants.PAGINATION_LINK], data)\n            } else {\n                return data;\n            }\n        } catch (error) {\n            throw error;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Request } from \"express\";\nimport { IUri, UrlString } from \"@azure/msal-common\";\n\nexport class UrlUtils {\n    /**\n     * Gets the absolute URL from a given request and path string\n     * @param {Request} req: express request object \n     * @param {string} url: a given URL\n     * @returns {string}\n     */\n    static ensureAbsoluteUrl = (req: Request, url: string): string => {\n        const urlComponents: IUri = new UrlString(url).getUrlComponents();\n\n        if (!urlComponents.Protocol) {\n            if (!urlComponents.HostNameAndPort && !url.startsWith(\"www\")) {\n                if (!url.startsWith(\"/\")) {\n                    return req.protocol + \"://\" + req.get(\"host\") + \"/\" + url;\n                }\n                return req.protocol + \"://\" + req.get(\"host\") + url;\n            }\n            return req.protocol + \"://\" + url;\n        } else {\n            return url;\n        }\n    };\n\n    /**\n     * Gets the path segment from a given URL\n     * @param {string} url: a given URL\n     * @returns {string}\n     */\n    static getPathFromUrl = (url: string): string => {\n        const urlComponents: IUri = new UrlString(url).getUrlComponents();\n        return `/${urlComponents.PathSegments.join(\"/\")}`;\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport express, {\n    RequestHandler,\n    Request,\n    Response,\n    NextFunction,\n    Router\n} from \"express\";\n\nimport {\n    OIDC_DEFAULT_SCOPES,\n    InteractionRequiredAuthError,\n    StringUtils,\n    ResponseMode,\n} from \"@azure/msal-common\";\n\nimport {\n    Configuration,\n    SilentFlowRequest\n} from \"@azure/msal-node\";\n\n\nimport { BaseAuthClient } from \"../BaseAuthClient\";\nimport { ConfigHelper } from \"../../config/ConfigHelper\";\nimport { IdTokenClaims } from \"../../utils/Types\";\nimport { FetchManager } from \"../../network/FetchManager\";\nimport { UrlUtils } from \"../../utils/UrlUtils\";\n\nimport {\n    Resource,\n    AppSettings,\n    AccessRule,\n} from \"../../config/AppSettings\";\n\nimport { AuthCodeParams } from \"../../utils/Types\";\n\nimport {\n    TokenRequestOptions,\n    GuardOptions,\n    SignInOptions,\n    SignOutOptions\n} from \"../MiddlewareOptions\";\n\nimport {\n    AppStages,\n    ErrorMessages,\n    AccessControlConstants,\n    InfoMessages\n} from \"../../utils/Constants\";\n\n\n/**\n * A simple wrapper around MSAL Node ConfidentialClientApplication object.\n * It offers a collection of middleware and utility methods that automate\n * basic authentication and authorization tasks in Express web apps\n */\nexport class MsalWebAppAuthClient extends BaseAuthClient {\n\n    /**\n     * @param {AppSettings} appSettings\n     * @param {Configuration} msalConfig\n     * @constructor\n     */\n    constructor(appSettings: AppSettings, msalConfig: Configuration) {\n        super(appSettings, msalConfig);\n    }\n\n    /**\n     * Initialize AuthProvider and set default routes and handlers\n     * @returns {Router}\n     */\n    initialize(): Router {\n\n        const appRouter = express.Router();\n\n        appRouter.post(UrlUtils.getPathFromUrl(this.appSettings.authRoutes!.redirect), this.handleRedirect());\n\n        appRouter.use((req: Request, res: Response, next: NextFunction) => {\n\n            if (!req.session) {\n                // TODO: handle gracefully\n                throw new Error(ErrorMessages.SESSION_NOT_FOUND);\n            }\n\n            // add session csrfToken for crsf\n            req.session.csrfToken = this.cryptoProvider.createNewGuid();\n            next();\n        });\n\n        if (this.appSettings.authRoutes?.frontChannelLogout) {\n            /**\n             * Expose front-channel logout route. For more information, visit:\n             * https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc#single-sign-out\n             */\n            appRouter.get(this.appSettings.authRoutes.frontChannelLogout, (req: Request, res: Response) => {\n                req.session.destroy(() => {\n                    res.sendStatus(200);\n                });\n            });\n        }\n\n        return appRouter;\n    }\n\n    /**\n     * Initiates sign in flow\n     * @param {SignInOptions} options: options to modify login request\n     * @returns {RequestHandler}\n     */\n    signIn(options: SignInOptions = {\n        postLoginRedirect: '/',\n        failureRedirect: '/',\n    }): RequestHandler {\n        return (req: Request, res: Response, next: NextFunction): Promise<void> => {\n\n            if (!req.session.csrfToken) {\n                throw new Error('CSRF token not found in session. Ensure that app is initialized properly.');\n            }\n\n            const key = this.cryptoUtils.createKey(req.session.csrfToken, this.cryptoUtils.generateSalt())\n\n            req.session.key = key.toString(\"hex\");\n\n            const state = this.cryptoProvider.base64Encode(\n                this.cryptoUtils.encryptData(JSON.stringify({\n                    stage: AppStages.SIGN_IN,\n                    path: options.postLoginRedirect,\n                    csrfToken: req.session.csrfToken,\n                }), key)\n            );\n\n            const params: AuthCodeParams = {\n                authority: this.msalConfig.auth.authority!, // TODO: default to default authority\n                scopes: OIDC_DEFAULT_SCOPES,\n                state: state,\n                redirect: UrlUtils.ensureAbsoluteUrl(req, this.appSettings.authRoutes!.redirect)\n            };\n\n            // get url to sign user in\n            return this.getAuthCode(req, res, next, params);\n        }\n    };\n\n    /**\n     * Initiate sign out and destroy the session\n     * @param options: options to modify logout request\n     * @returns {RequestHandler}\n     */\n    signOut(options: SignOutOptions = {\n        postLogoutRedirect: '/'\n    }): RequestHandler {\n        return (req: Request, res: Response): void => {\n\n            const postLogoutRedirectUri = UrlUtils.ensureAbsoluteUrl(req, options.postLogoutRedirect);\n\n            /**\n             * Construct a logout URI and redirect the user to end the\n             * session with Azure AD/B2C. For more information, visit:\n             * (AAD) https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc#send-a-sign-out-request\n             * (B2C) https://docs.microsoft.com/azure/active-directory-b2c/openid-connect#send-a-sign-out-request\n             */\n            const logoutUri = `${this.msalConfig.auth.authority}/oauth2/v2.0/logout?post_logout_redirect_uri=${postLogoutRedirectUri}`;\n\n            req.session.destroy(() => {\n                res.redirect(logoutUri);\n            });\n        }\n    };\n\n    /**\n     * Middleware that handles redirect depending on request state\n     * There are basically 2 stages: sign-in and acquire token\n     * @returns {RequestHandler}\n     */\n    private handleRedirect(): RequestHandler {\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n            if (!req.session.key || !req.session.tokenRequest) {\n                throw new Error('CSRF token not found in session. Ensure that app is initialized properly.');\n            }\n\n            if (req.body.state) {\n              const state = JSON.parse(\n                this.cryptoUtils.decryptData(\n                        this.cryptoProvider.base64Decode(req.body.state as string),\n                        Buffer.from(req.session.key, \"hex\")\n                    )\n                );\n\n                // check if csrfToken matches\n                if (state.csrfToken === req.session.csrfToken) {\n                    switch (state.stage) {\n                        case AppStages.SIGN_IN: {\n                            // token request should have auth code\n                            req.session.tokenRequest.code = req.body.code as string;\n\n                            try {\n                                // exchange auth code for tokens\n                                const tokenResponse = await this.msalClient.acquireTokenByCode(req.session.tokenRequest);\n                                if (!tokenResponse) throw new Error(ErrorMessages.TOKEN_RESPONSE_NULL);\n\n                                req.session.isAuthenticated = true;\n                                req.session.account = tokenResponse.account!; // this won't be null unless client credentials are used\n                                res.redirect(state.path);\n                            } catch (error) {\n                                this.logger.error(ErrorMessages.TOKEN_ACQUISITION_FAILED);\n                                next(error)\n                            }\n                            break;\n                        }\n\n                        case AppStages.ACQUIRE_TOKEN: {\n                            // get the name of the resource associated with scope\n                            const resourceName = ConfigHelper.getResourceNameFromScopes(req.session.tokenRequest.scopes, this.appSettings);\n\n                            req.session.tokenRequest.code = req.body.code as string;\n\n                            try {\n                                const tokenResponse = await this.msalClient.acquireTokenByCode(req.session.tokenRequest);\n                                if (!tokenResponse) throw new Error(ErrorMessages.TOKEN_RESPONSE_NULL);\n\n                                req.session.protectedResources![resourceName].accessToken = tokenResponse.accessToken;\n                                res.redirect(state.path);\n                            } catch (error) {\n                                this.logger.error(ErrorMessages.TOKEN_ACQUISITION_FAILED);\n                                next(error);\n                            }\n                            break;\n                        }\n\n                        default:\n                            this.logger.error(ErrorMessages.CANNOT_DETERMINE_APP_STAGE);\n                            next(new Error(ErrorMessages.CANNOT_DETERMINE_APP_STAGE));\n                            break;\n                    }\n                } else {\n                    this.logger.error(ErrorMessages.CSRF_TOKEN_MISMATH);\n                    res.redirect(this.appSettings.authRoutes!.unauthorized);\n                }\n            } else {\n                this.logger.error(ErrorMessages.STATE_NOT_FOUND);\n                res.redirect(this.appSettings.authRoutes!.unauthorized);\n            }\n        }\n    };\n\n    /**\n     * Middleware that gets tokens via acquireToken*\n     * @param {TokenRequestOptions} options: options to modify this middleware\n     * @returns {RequestHandler}\n     */\n    getToken(options: TokenRequestOptions): RequestHandler {\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n\n            if (!req.session.csrfToken) throw new Error('');\n\n            // get scopes for token request\n            const scopes = options.resource.scopes;\n            const resourceName = ConfigHelper.getResourceNameFromScopes(scopes, this.appSettings)\n\n            if (!req.session.protectedResources) {\n                req.session.protectedResources = {}\n            }\n\n            req.session.protectedResources = {\n                [resourceName]: {\n                    ...this.appSettings.protectedResources![resourceName],\n                    accessToken: undefined,\n                } as Resource\n            };\n\n            try {\n                const silentRequest = {\n                    account: req.session.account,\n                    scopes: scopes,\n                } as SilentFlowRequest;\n\n                // acquire token silently to be used in resource call\n                const tokenResponse = await this.msalClient.acquireTokenSilent(silentRequest);\n\n                if (!tokenResponse) {\n                    this.logger.error(ErrorMessages.TOKEN_NOT_FOUND);\n                    throw new InteractionRequiredAuthError(ErrorMessages.INTERACTION_REQUIRED);\n                } else if (StringUtils.isEmpty(tokenResponse.accessToken)) {\n                    // In B2C scenarios, sometimes an access token is returned empty.\n                    // In that case, we will acquire token interactively instead.\n                    this.logger.error(ErrorMessages.TOKEN_NOT_FOUND);\n                    throw new InteractionRequiredAuthError(ErrorMessages.INTERACTION_REQUIRED);\n                }\n\n                req.session.protectedResources[resourceName].accessToken = tokenResponse.accessToken;\n                next();\n            } catch (error) {\n                // in case there are no cached tokens, initiate an interactive call\n                if (error instanceof InteractionRequiredAuthError) {\n\n                    const key = this.cryptoUtils.createKey(req.session.csrfToken, this.cryptoUtils.generateSalt());\n                    req.session.key = key.toString(\"hex\");\n\n                    const state = this.cryptoProvider.base64Encode(\n                        this.cryptoUtils.encryptData(JSON.stringify({\n                            stage: AppStages.ACQUIRE_TOKEN,\n                            path: req.originalUrl,\n                            csrfToken: req.session.csrfToken,\n                        }), key)\n                    );\n\n                    const params: AuthCodeParams = {\n                        authority: this.msalConfig.auth.authority!,\n                        scopes: scopes,\n                        state: state,\n                        redirect: UrlUtils.ensureAbsoluteUrl(req, this.appSettings.authRoutes!.redirect),\n                        account: req.session.account,\n                    };\n\n                    // initiate the first leg of auth code grant to get token\n                    return this.getAuthCode(req, res, next, params);\n                } else {\n                    next(error);\n                }\n            }\n        }\n    };\n\n    /**\n     * Check if authenticated in session\n     * @returns {RequestHandler}\n     */\n    isAuthenticated(): RequestHandler {\n        return (req: Request, res: Response, next: NextFunction): void => {\n            if (req.session) {\n                if (!req.session.isAuthenticated) {\n                    this.logger.error(ErrorMessages.NOT_PERMITTED);\n                    return res.redirect(this.appSettings.authRoutes!.unauthorized);\n                }\n\n                next();\n            } else {\n                this.logger.error(ErrorMessages.SESSION_NOT_FOUND);\n                res.redirect(this.appSettings.authRoutes!.unauthorized);\n            }\n        }\n    };\n\n    /**\n     * Checks if the user has access for this route, defined in access matrix\n     * @param {GuardOptions} options: options to modify this middleware\n     * @returns {RequestHandler}\n     */\n    hasAccess(options: GuardOptions): RequestHandler {\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n            if (req.session.account?.idTokenClaims && this.appSettings.accessMatrix) {\n\n                const checkFor = options.accessRule.hasOwnProperty(AccessControlConstants.GROUPS) ? AccessControlConstants.GROUPS : AccessControlConstants.ROLES;\n\n                switch (checkFor) {\n                    case AccessControlConstants.GROUPS:\n\n                        if (req.session.account.idTokenClaims[AccessControlConstants.GROUPS] === undefined) {\n                            if (req.session.account.idTokenClaims[AccessControlConstants.CLAIM_NAMES]\n                                || req.session.account.idTokenClaims[AccessControlConstants.CLAIM_SOURCES]) {\n                                this.logger.warning(InfoMessages.OVERAGE_OCCURRED);\n                                return await this.handleOverage(req, res, next, options.accessRule);\n                            } else {\n                                this.logger.error(ErrorMessages.USER_HAS_NO_GROUP);\n                                return res.redirect(this.appSettings.authRoutes!.unauthorized);\n                            }\n                        } else {\n                            const groups = req.session.account.idTokenClaims[AccessControlConstants.GROUPS] as string[];\n\n                            if (!this.checkAccessRule(req.method, options.accessRule, groups, AccessControlConstants.GROUPS)) {\n                                return res.redirect(this.appSettings.authRoutes!.unauthorized);\n                            }\n                        }\n\n                        next();\n                        break;\n\n                    case AccessControlConstants.ROLES:\n                        if (req.session.account.idTokenClaims[AccessControlConstants.ROLES] === undefined) {\n                            this.logger.error(ErrorMessages.USER_HAS_NO_ROLE);\n                            return res.redirect(this.appSettings.authRoutes!.unauthorized);\n                        } else {\n                            const roles = req.session.account.idTokenClaims[AccessControlConstants.ROLES] as string[];\n\n                            if (!this.checkAccessRule(req.method, options.accessRule, roles, AccessControlConstants.ROLES)) {\n                                return res.redirect(this.appSettings.authRoutes!.unauthorized);\n                            }\n                        }\n\n                        next();\n                        break;\n\n                    default:\n                        break;\n                }\n            } else {\n                res.redirect(this.appSettings.authRoutes!.unauthorized);\n            }\n        }\n    }\n\n    // ============== UTILS ===============\n\n    /**\n     * This method is used to generate an auth code url request\n     * @param {Request} req: express request object\n     * @param {Response} res: express response object\n     * @param {NextFunction} next: express next function\n     * @param {AuthCodeParams} params: modifies auth code url request\n     * @returns {Promise}\n     */\n    private async getAuthCode(req: Request, res: Response, next: NextFunction, params: AuthCodeParams): Promise<void> {\n\n        // prepare the request\n        req.session.authCodeRequest = {\n            authority: params.authority,\n            scopes: params.scopes,\n            state: params.state,\n            redirectUri: params.redirect,\n            prompt: params.prompt,\n            account: params.account,\n            responseMode: ResponseMode.FORM_POST\n        }\n\n        req.session.tokenRequest = {\n            authority: params.authority,\n            scopes: params.scopes,\n            redirectUri: params.redirect,\n            code: \"\",\n        }\n\n        // request an authorization code to exchange for tokens\n        try {\n            const response = await this.msalClient.getAuthCodeUrl(req.session.authCodeRequest);\n            res.redirect(response);\n        } catch (error) {\n            this.logger.error(ErrorMessages.AUTH_CODE_NOT_OBTAINED);\n            next(error);\n        }\n    };\n\n    /**\n     * Handles group overage claims by querying MS Graph /memberOf endpoint\n     * @param {Request} req: express request object\n     * @param {Response} res: express response object\n     * @param {NextFunction} next: express next function\n     * @param {AccessRule} rule: a given access rule\n     * @returns {Promise}\n     */\n    private async handleOverage(req: Request, res: Response, next: NextFunction, rule: AccessRule): Promise<void> {\n\n        if (!req.session.account?.idTokenClaims) throw new Error('Session not found');\n\n        const { _claim_names, _claim_sources, ...newIdTokenClaims } = <IdTokenClaims>req.session.account.idTokenClaims;\n\n        const silentRequest: SilentFlowRequest = {\n            account: req.session.account,\n            scopes: AccessControlConstants.GRAPH_MEMBER_SCOPES.split(\" \"),\n        };\n\n        try {\n            // acquire token silently to be used in resource call\n            const tokenResponse = await this.msalClient.acquireTokenSilent(silentRequest);\n\n            if (!tokenResponse) throw new Error('Token response is undefined');\n\n            try {\n                const graphResponse = await FetchManager.callApiEndpointWithToken(AccessControlConstants.GRAPH_MEMBERS_ENDPOINT, tokenResponse.accessToken);\n\n                /**\n                 * Some queries against Microsoft Graph return multiple pages of data either due to server-side paging\n                 * or due to the use of the $top query parameter to specifically limit the page size in a request.\n                 * When a result set spans multiple pages, Microsoft Graph returns an @odata.nextLink property in\n                 * the response that contains a URL to the next page of results. Learn more at https://docs.microsoft.com/graph/paging\n                 */\n                if (graphResponse.data[AccessControlConstants.PAGINATION_LINK]) {\n                    try {\n                        const userGroups = await FetchManager.handlePagination(tokenResponse.accessToken, graphResponse.data[AccessControlConstants.PAGINATION_LINK]);\n\n                        req.session.account.idTokenClaims = {\n                            ...newIdTokenClaims,\n                            groups: userGroups\n                        }\n\n                        if (!this.checkAccessRule(req.method, rule, req.session.account.idTokenClaims[AccessControlConstants.GROUPS] as string[], AccessControlConstants.GROUPS)) {\n                            return res.redirect(this.appSettings.authRoutes!.unauthorized);\n                        } else {\n                            return next();\n                        }\n                    } catch (error) {\n                        next(error);\n                    }\n                } else {\n                    req.session.account.idTokenClaims = {\n                        ...newIdTokenClaims,\n                        groups: graphResponse.data[\"value\"].map((v: any) => v.id)\n                    }\n\n                    if (!this.checkAccessRule(req.method, rule, req.session.account.idTokenClaims[AccessControlConstants.GROUPS] as string[], AccessControlConstants.GROUPS)) {\n                        return res.redirect(this.appSettings.authRoutes!.unauthorized);\n                    } else {\n                        return next();\n                    }\n                }\n            } catch (error) {\n                next(error);\n            }\n        } catch (error) {\n            // TODO: handle silent token acquisition error\n            next(error);\n        }\n    };\n\n    /**\n     * Checks if the request passes a given access rule\n     * @param {string} method: HTTP method for this route\n     * @param {AccessRule} rule: access rule for this route\n     * @param {Array} creds: user's credentials i.e. roles or groups\n     * @param {string} credType: roles or groups\n     * @returns {boolean}\n     */\n    private checkAccessRule(method: string, rule: AccessRule, creds: string[], credType: string): boolean {\n        if (rule.methods.includes(method)) {\n            switch (credType) {\n                case AccessControlConstants.GROUPS:\n                    if (rule.groups!.filter(elem => creds.includes(elem)).length < 1) {\n                        this.logger.error(ErrorMessages.USER_NOT_IN_GROUP);\n                        return false;\n                    }\n                    break;\n\n                case AccessControlConstants.ROLES:\n                    if (rule.roles!.filter(elem => creds.includes(elem)).length < 1) {\n                        this.logger.error(ErrorMessages.USER_NOT_IN_ROLE);\n                        return false;\n                    }\n                    break;\n\n                default:\n                    break;\n            }\n        } else {\n            this.logger.error(ErrorMessages.METHOD_NOT_ALLOWED);\n            return false;\n        }\n\n        return true;\n    }\n}\n","\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport express, {\n    Router,\n    RequestHandler,\n    Request,\n    Response,\n    NextFunction\n} from \"express\";\n\nimport { AccountInfo, AuthToken } from \"@azure/msal-common\";\n\nimport { BaseAuthClient } from \"../BaseAuthClient\";\nimport { Configuration } from \"@azure/msal-node\";\n\nimport { AccessTokenClaims, IdTokenClaims } from \"../../utils/Types\";\nimport { AppSettings, Resource } from \"../../config/AppSettings\";\nimport { ConfigHelper } from \"../../config/ConfigHelper\";\nimport { UrlUtils } from \"../../utils/UrlUtils\";\n\nimport {\n    SignInOptions,\n    SignOutOptions,\n    TokenRequestOptions\n} from \"../MiddlewareOptions\";\n\nimport {\n    AppServiceAuthenticationHeaders,\n    AppServiceEnvironmentVariables,\n    AppServiceAuthenticationEndpoints,\n    AppServiceAuthenticationQueryParameters,\n    ErrorMessages\n} from \"../../utils/Constants\";\n\nexport class AppServiceWebAppAuthClient extends BaseAuthClient {\n\n\n    /**\n     * @param {AppSettings} appSettings\n     * @param {Configuration} msalConfig\n     * @constructor\n     */\n    constructor(appSettings: AppSettings, msalConfig: Configuration) {\n        super(appSettings, msalConfig);\n    }\n\n    /**\n     * Initialize AuthProvider and set default routes and handlers\n     * @param {InitializationOptions} options\n     * @returns {Router}\n     */\n    initialize(): Router {\n\n        const appRouter = express.Router();\n\n        // handle redirect\n        appRouter.get(UrlUtils.getPathFromUrl(this.appSettings.authRoutes!.redirect), this.handleRedirect());\n        appRouter.post(UrlUtils.getPathFromUrl(this.appSettings.authRoutes!.redirect), this.handleRedirect());\n\n        appRouter.use((req: Request, res: Response, next: NextFunction): void => {\n\n\n            if (!req.session.isAuthenticated) {\n                // check headers for id token\n                const rawIdToken = req.headers[AppServiceAuthenticationHeaders.APP_SERVICE_ID_TOKEN_HEADER.toLowerCase()] as string;\n\n                if (rawIdToken) {\n\n                    // parse the id token\n                    const idTokenClaims: IdTokenClaims = AuthToken.extractTokenClaims(rawIdToken, this.cryptoProvider);\n\n                    req.session.isAuthenticated = true;\n\n                    req.session.account = {\n                        tenantId: idTokenClaims.tid,\n                        homeAccountId: idTokenClaims.oid + \".\" + idTokenClaims.tid,\n                        localAccountId: idTokenClaims.oid,\n                        environment: idTokenClaims.iss?.split(\"://\")[1].split(\"/\")[0],\n                        username: idTokenClaims.preferred_username,\n                        name: idTokenClaims.name,\n                        idTokenClaims: idTokenClaims\n                    } as AccountInfo;\n                }\n            }\n\n            next();\n        });\n\n        return appRouter;\n    }\n\n    /**\n     * Initiates sign in flow\n     * @param {SignInOptions} options: options to modify login request\n     * @returns {RequestHandler}\n     */\n    signIn(options: SignInOptions = {\n        postLoginRedirect: '/',\n        failureRedirect: '/',\n    }): RequestHandler {\n        return (req: Request, res: Response, next: NextFunction): void => {\n            let loginUri;\n            const postLoginRedirectUri = UrlUtils.ensureAbsoluteUrl(req, options.postLoginRedirect);\n            loginUri = \"https://\" + process.env[AppServiceEnvironmentVariables.WEBSITE_HOSTNAME] + AppServiceAuthenticationEndpoints.AAD_SIGN_IN_ENDPOINT + AppServiceAuthenticationQueryParameters.POST_LOGIN_REDIRECT_QUERY_PARAM + postLoginRedirectUri;\n            res.redirect(loginUri);\n        }\n    }\n\n\n    /**\n     * Initiate sign out and destroy the session\n     * @param options: options to modify logout request\n     * @returns {RequestHandler}\n     */\n    signOut(options: SignOutOptions = {\n        postLogoutRedirect: '/'\n    }): RequestHandler {\n        return (req: Request, res: Response, next: NextFunction): void => {\n            const postLogoutRedirectUri = UrlUtils.ensureAbsoluteUrl(req, options.postLogoutRedirect);\n            const logoutUri = \"https://\" + process.env[AppServiceEnvironmentVariables.WEBSITE_HOSTNAME] + AppServiceAuthenticationEndpoints.AAD_SIGN_OUT_ENDPOINT + AppServiceAuthenticationQueryParameters.POST_LOGOUT_REDIRECT_QUERY_PARAM + postLogoutRedirectUri;\n\n            req.session.destroy(() => {\n                res.redirect(logoutUri);\n            });\n        }\n    }\n\n    /**\n     * Middleware that handles redirect depending on request state\n     * There are basically 2 stages: sign-in and acquire token\n     * @param {HandleRedirectOptions} options: options to modify this middleware\n     * @returns {RequestHandler}\n     */\n    private handleRedirect(): RequestHandler {\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n            next();\n        }\n    }\n\n    /**\n     * Middleware that gets tokens\n     * @param {TokenRequestOptions} options: options to modify this middleware\n     * @returns {RequestHandler}\n     */\n    getToken(options: TokenRequestOptions): RequestHandler {\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n\n            // get scopes for token request\n            const resourceName = ConfigHelper.getResourceNameFromScopes(options.resource.scopes, this.appSettings)\n\n            if (!req.session.protectedResources) {\n                req.session.protectedResources = {}\n            }\n\n            req.session.protectedResources = {\n                [resourceName]: {\n                    ...this.appSettings.protectedResources![resourceName],\n                    accessToken: undefined,\n                } as Resource\n            };\n\n            const rawAccessToken = req.headers[AppServiceAuthenticationHeaders.APP_SERVICE_ACCESS_TOKEN_HEADER.toLowerCase()] as string;\n\n            if (rawAccessToken) {\n\n                const accessTokenClaims = AuthToken.extractTokenClaims(rawAccessToken, this.cryptoProvider) as AccessTokenClaims;\n\n                // get the name of the resource associated with scope\n                const scopes = accessTokenClaims?.scp ? accessTokenClaims?.scp?.split(\" \") : [];\n                const effectiveScopes = ConfigHelper.getEffectiveScopes(scopes);\n\n                if (options.resource.scopes.every(elem => effectiveScopes.includes(elem))) {\n                    req.session.protectedResources[resourceName].accessToken = rawAccessToken;\n                    return next();\n                } else {\n                    return next(new Error(\"No tokens found for given scopes\"));\n                }\n            }\n        }\n    }\n\n    /**\n     * Check if authenticated in session\n     * @returns {RequestHandler}\n     */\n    isAuthenticated(): RequestHandler {\n        return (req: Request, res: Response, next: NextFunction): void => {\n            if (req.session) {\n                if (!req.session.isAuthenticated) {\n                    this.logger.error(ErrorMessages.NOT_PERMITTED);\n                    return res.redirect(this.appSettings.authRoutes!.unauthorized);\n                }\n\n                next();\n            } else {\n                this.logger.error(ErrorMessages.SESSION_NOT_FOUND);\n                res.redirect(this.appSettings.authRoutes!.unauthorized);\n            }\n        }\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { DefaultAzureCredential } from \"@azure/identity\";\nimport { CertificateClient, KeyVaultCertificate } from \"@azure/keyvault-certificates\";\nimport { KeyVaultSecret, SecretClient } from \"@azure/keyvault-secrets\";\n\nimport { KeyVaultCredential, ClientCertificate } from \"../config/AppSettings\";\nimport { KeyVaultCredentialTypes } from \"../utils/Constants\";\n\nexport type KeyVaultCredentialResponse = {\n    type: KeyVaultCredentialTypes.SECRET | KeyVaultCredentialTypes.CERTIFICATE,\n    value: string & ClientCertificate\n}\n\nexport class KeyVaultManager {\n\n    /**\n     * Fetches credentials from Key Vault and updates appSettings\n     * @param {AppSettings} appSettings\n     * @returns {Promise}\n     */\n    async getCredentialFromKeyVault(keyVaultCredential: KeyVaultCredential): Promise<KeyVaultCredentialResponse> {\n\n        const credential = new DefaultAzureCredential();\n        let response: KeyVaultCredentialResponse = {} as KeyVaultCredentialResponse;\n\n        // TODO: promisify\n\n        switch (keyVaultCredential.credentialType) {\n            case KeyVaultCredentialTypes.SECRET: {\n                try {\n                    const secretResponse = await this.getSecretCredential(keyVaultCredential, credential);\n\n                    response = {\n                        type: KeyVaultCredentialTypes.SECRET,\n                        value: secretResponse.value,\n                    } as KeyVaultCredentialResponse;\n\n                } catch (error) {\n                    throw error;\n                }\n                break;\n            }\n\n            case KeyVaultCredentialTypes.CERTIFICATE: {\n                try {\n                    const certificateResponse = await this.getCertificateCredential(keyVaultCredential, credential);\n                    const secretResponse = await this.getSecretCredential(keyVaultCredential, credential);\n\n                    response = {\n                        type: KeyVaultCredentialTypes.CERTIFICATE,\n                        value: {\n                            thumbprint: certificateResponse?.properties?.x509Thumbprint?.toString(),\n                            privateKey: secretResponse?.value?.split('-----BEGIN CERTIFICATE-----\\n')[0]\n                        }\n                    } as KeyVaultCredentialResponse;\n                } catch (error) {\n                    throw error;\n                }\n                break;\n            }\n\n            default:\n                break;\n        }\n\n        return response;\n    };\n\n    /**\n     * Gets a certificate credential from Key Vault\n     * @param {AppSettings} config\n     * @param {DefaultAzureCredential} credential\n     * @returns {Promise}\n     */\n    async getCertificateCredential(keyVaultCredential: KeyVaultCredential, credential: DefaultAzureCredential): Promise<KeyVaultCertificate> {\n\n        // Initialize secretClient with credentials\n        const secretClient = new CertificateClient(keyVaultCredential.keyVaultUrl, credential);\n\n        try {\n            const keyVaultCertificate = await secretClient.getCertificate(keyVaultCredential.credentialName);\n            return keyVaultCertificate;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    /**\n     * Gets a secret credential from Key Vault\n     * @param {AppSettings} config\n     * @param {DefaultAzureCredential} credential\n     * @returns {Promise}\n     */\n    async getSecretCredential(keyVaultCredential: KeyVaultCredential, credential: DefaultAzureCredential): Promise<KeyVaultSecret> {\n\n        // Initialize secretClient with credentials\n        const secretClient = new SecretClient(keyVaultCredential.keyVaultUrl, credential);\n\n        try {\n            const keyVaultSecret = await secretClient.getSecret(keyVaultCredential.credentialName);\n            return keyVaultSecret;\n        } catch (error) {\n            throw error;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    UrlString,\n    Constants,\n} from \"@azure/msal-common\";\n\nimport {\n    Configuration\n} from \"@azure/msal-node\";\n\nimport { DEFAULT_LOGGER_OPTIONS } from \"../utils/Constants\";\n\nimport { AppSettings } from \"./AppSettings\";\n\nexport class MsalConfiguration {\n\n    /**\n     * Maps the custom configuration object to configuration\n     * object expected by MSAL Node ConfidentialClientApplication class\n     * @param {AppSettings} appSettings: configuration object\n     * @param {ICachePlugin} cachePlugin: custom cache plugin\n     * @param {IDistributedPersistence} distributedPersistence: distributed persistence client\n     * @returns {Configuration}\n     */\n    static getMsalConfiguration(appSettings: AppSettings): Configuration {\n        return {\n            auth: {\n                clientId: appSettings.appCredentials.clientId,\n                authority: appSettings.b2cPolicies ?\n                    Object.entries(appSettings.b2cPolicies)[0][1][\"authority\"] // the first policy/user-flow is the default authority\n                    :\n                    appSettings.appCredentials.instance ? `https://${appSettings.appCredentials.instance}/${appSettings.appCredentials.tenantId}`\n                        :\n                        `https://${Constants.DEFAULT_AUTHORITY_HOST}/${appSettings.appCredentials.tenantId}`,\n                ...(appSettings.appCredentials.hasOwnProperty(\"clientSecret\")) && { clientSecret: appSettings.appCredentials.clientSecret },\n                ...(appSettings.appCredentials.hasOwnProperty(\"clientCertificate\")) && { clientCertificate: appSettings.appCredentials.clientCertificate },\n                knownAuthorities: appSettings.b2cPolicies ?\n                    [UrlString.getDomainFromUrl(Object.entries(appSettings.b2cPolicies)[0][1][\"authority\"])] // in B2C scenarios\n                    :\n                    [],\n            },\n            system: {\n              loggerOptions: appSettings.loggerOptions ? appSettings.loggerOptions : DEFAULT_LOGGER_OPTIONS,\n            },\n        };\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AppServiceEnvironmentVariables,\n} from \"./Constants\";\n\nexport class EnvironmentUtils {\n    static isProduction(): boolean {\n        return process.env.NODE_ENV === 'production';\n    }\n\n    static isDevelopment(): boolean {\n        return process.env.NODE_ENV === 'development';\n    }\n\n    static isAppServiceAuthEnabled(): boolean {\n        return process.env[AppServiceEnvironmentVariables.WEBSITE_AUTH_ENABLED] === \"True\";\n    }\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Configuration } from \"@azure/msal-node\";\n\nimport { BaseAuthClientBuilder } from \"../BaseAuthClientBuilder\";\nimport { MsalWebAppAuthClient } from \"./MsalWebAppAuthClient\";\nimport { AppServiceWebAppAuthClient } from \"./AppServiceWebAppAuthClient\";\nimport { KeyVaultManager } from \"../../network/KeyVaultManager\";\nimport { MsalConfiguration } from \"../../config/MsalConfiguration\";\nimport { AppSettings, AppType } from \"../../config/AppSettings\";\nimport { EnvironmentUtils } from \"../../utils/EnvironmentUtils\";\nimport { ErrorMessages } from \"../../utils/Constants\";\n\nexport class WebAppAuthClientBuilder extends BaseAuthClientBuilder {\n\n    appSettings!: AppSettings;\n    private msalConfig!: Configuration;\n\n    constructor(appSettings: AppSettings) {\n        super(appSettings, AppType.WebApp);\n    };\n\n    build(): MsalWebAppAuthClient | AppServiceWebAppAuthClient {\n        // TODO: throw error if key vault credential is being built\n        // TODO: app settings should have\n\n        this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings);\n\n        if (EnvironmentUtils.isAppServiceAuthEnabled()) {\n            return new AppServiceWebAppAuthClient(this.appSettings, this.msalConfig);\n        } else {\n            return new MsalWebAppAuthClient(this.appSettings, this.msalConfig);\n        }\n    }\n\n    async buildAsync(): Promise<MsalWebAppAuthClient | AppServiceWebAppAuthClient> {\n        try {\n            if (this.keyVaultCredential) {\n                const keyVaultManager = new KeyVaultManager();\n                const credential = await keyVaultManager.getCredentialFromKeyVault(this.keyVaultCredential);\n                this.appSettings.appCredentials[credential.type] = credential.value;\n            }\n\n            this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings);\n\n            if (EnvironmentUtils.isAppServiceAuthEnabled()) {\n                return new AppServiceWebAppAuthClient(this.appSettings, this.msalConfig);\n            } else {\n                return new MsalWebAppAuthClient(this.appSettings, this.msalConfig);\n            }\n        } catch (error) {\n            throw new Error(ErrorMessages.CANNOT_OBTAIN_CREDENTIALS_FROM_KEY_VAULT);\n        }\n    }\n}\n"],"names":["undefined","AppStages","AADAuthorityConstants","COMMON","ORGANIZATIONS","CONSUMERS","KeyVaultCredentialTypes","OIDC_SCOPES","OIDC_DEFAULT_SCOPES","AppServiceAuthenticationHeaders","APP_SERVICE_AUTHENTICATION_HEADER","APP_SERVICE_ACCESS_TOKEN_HEADER","APP_SERVICE_ID_TOKEN_HEADER","APP_SERVICE_REFRESH_TOKEN_HEADER","APP_SERVICE_ACCESS_TOKEN_EXPIRES_HEADER","APP_SERVICE_USER_OID_HEADER","APP_SERVICE_USER_UPN_HEADER","APP_SERVICE_IDP_X_HEADER","AppServiceAuthenticationEndpoints","ID_TOKEN_ENDPOINT","POST_LOGOUT_DEFAULT_ENDPOINT","POST_LOGIN_DEFAULT_ENDPOINT","AAD_SIGN_IN_ENDPOINT","AAD_SIGN_OUT_ENDPOINT","TOKEN_REFRESH_ENDPOINT","AAD_REDIRECT_ENDPOINT","AppServiceAuthenticationQueryParameters","POST_LOGIN_REDIRECT_QUERY_PARAM","POST_LOGOUT_REDIRECT_QUERY_PARAM","AppServiceEnvironmentVariables","WEBSITE_AUTH_ENABLED","WEBSITE_AUTH_ALLOWED_AUDIENCES","WEBSITE_AUTH_DEFAULT_PROVIDER","WEBSITE_AUTH_TOKEN_STORE","WEBSITE_AUTH_LOGIN_PARAMS","WEBSITE_AUTH_PRESERVE_URL_FRAGMENT","WEBSITE_AUTH_OPENID_ISSUER","WEBSITE_AUTH_CLIENT_ID","WEBSITE_HOSTNAME","WEBSITE_SITE_NAME","WEBSITE_AUTH_REQUIRE_HTTPS","WEBSITE_AUTH_UNAUTHENTICATED_ACTION","WEBSITE_AUTH_API_PREFIX","MICROSOFT_PROVIDER_AUTHENTICATION_SECRET","AccessControlConstants","GROUPS","ROLES","CLAIM_NAMES","CLAIM_SOURCES","PAGINATION_LINK","GRAPH_MEMBERS_ENDPOINT","GRAPH_MEMBER_SCOPES","InfoMessages","APP_SERVICE_AUTH_DETECTED","REQUEST_FOR_RESOURCE","OVERAGE_OCCURRED","ErrorMessages","NOT_PERMITTED","INVALID_TOKEN","CANNOT_DETERMINE_APP_STAGE","CANNOT_VALIDATE_TOKEN","CSRF_TOKEN_MISMATH","INTERACTION_REQUIRED","TOKEN_ACQUISITION_FAILED","TOKEN_RESPONSE_NULL","AUTH_CODE_NOT_OBTAINED","TOKEN_NOT_FOUND","TOKEN_NOT_DECODED","TOKEN_NOT_VERIFIED","KEYS_NOT_OBTAINED","STATE_NOT_FOUND","USER_HAS_NO_ROLE","USER_NOT_IN_ROLE","USER_HAS_NO_GROUP","USER_NOT_IN_GROUP","METHOD_NOT_ALLOWED","RULE_NOT_FOUND","SESSION_NOT_FOUND","KEY_VAULT_CONFIG_NOT_FOUND","CANNOT_OBTAIN_CREDENTIALS_FROM_KEY_VAULT","ConfigurationErrorMessages","NO_CLIENT_ID","INVALID_CLIENT_ID","NO_TENANT_INFO","INVALID_TENANT_INFO","NO_CLIENT_CREDENTIAL","NO_REDIRECT_URI","NO_ERROR_ROUTE","NO_UNAUTHORIZED_ROUTE","DEFAULT_LOGGER_OPTIONS","loggerCallback","logLevel","message","containsPii","console","info","piiLoggingEnabled","LogLevel","Info","AppType","ConfigHelper","validateAppSettings","appSettings","appType","StringUtils","isEmpty","appCredentials","clientId","Error","isGuid","tenantId","Object","values","includes","WebApp","authRoutes","redirect","unauthorized","guid","regexGuid","test","getResourceNameFromScopes","scopes","index","protectedResources","ownedResources","findIndex","resource","JSON","stringify","resourceName","keys","getScopesFromResourceEndpoint","resourceEndpoint","find","endpoint","getEffectiveScopes","scopesList","effectiveScopesList","filter","scope","BaseAuthClientBuilder","withKeyVaultCredentials","keyVaultCredential","withCustomCachePlugin","cachePlugin","customCachePlugin","packageName","packageVersion","CryptoUtils","algorithm","generateSalt","crypto","toString","createKey","password","salt","encryptData","stringifiedData","key","iv","cipher","encryptedData","update","join","decryptData","split","encrypted","decipher","Buffer","from","BaseAuthClient","msalConfig","cryptoProvider","CryptoProvider","cryptoUtils","logger","Logger","system","loggerOptions","msalClient","ConfidentialClientApplication","getMsalClient","getMsalConfig","getLogger","FetchManager","axios","get","response","data","accessToken","options","headers","Authorization","nextPage","callApiEndpointWithToken","graphResponse","map","v","push","id","handlePagination","UrlUtils","req","url","urlComponents","UrlString","getUrlComponents","Protocol","HostNameAndPort","startsWith","protocol","PathSegments","MsalWebAppAuthClient","initialize","appRouter","express","Router","post","getPathFromUrl","handleRedirect","use","res","next","session","csrfToken","createNewGuid","frontChannelLogout","destroy","sendStatus","signIn","postLoginRedirect","failureRedirect","state","base64Encode","stage","SIGN_IN","path","params","authority","auth","ensureAbsoluteUrl","getAuthCode","signOut","postLogoutRedirect","postLogoutRedirectUri","logoutUri","tokenRequest","body","parse","base64Decode","ACQUIRE_TOKEN","code","acquireTokenByCode","tokenResponse","isAuthenticated","account","error","getToken","silentRequest","acquireTokenSilent","InteractionRequiredAuthError","originalUrl","hasAccess","idTokenClaims","accessMatrix","checkFor","accessRule","hasOwnProperty","warning","handleOverage","groups","checkAccessRule","method","roles","authCodeRequest","redirectUri","prompt","responseMode","ResponseMode","FORM_POST","getAuthCodeUrl","rule","_claim_names","newIdTokenClaims","userGroups","creds","credType","methods","elem","length","AppServiceWebAppAuthClient","rawIdToken","toLowerCase","AuthToken","extractTokenClaims","tid","homeAccountId","oid","localAccountId","environment","iss","username","preferred_username","name","loginUri","postLoginRedirectUri","process","env","rawAccessToken","accessTokenClaims","scp","effectiveScopes","every","KeyVaultManager","getCredentialFromKeyVault","credential","DefaultAzureCredential","credentialType","SECRET","CERTIFICATE","getSecretCredential","secretResponse","type","value","getCertificateCredential","certificateResponse","thumbprint","properties","x509Thumbprint","privateKey","secretClient","CertificateClient","keyVaultUrl","getCertificate","credentialName","keyVaultCertificate","SecretClient","getSecret","keyVaultSecret","MsalConfiguration","getMsalConfiguration","b2cPolicies","entries","instance","Constants","DEFAULT_AUTHORITY_HOST","clientSecret","clientCertificate","knownAuthorities","getDomainFromUrl","EnvironmentUtils","isProduction","NODE_ENV","isDevelopment","isAppServiceAuthEnabled","WebAppAuthClientBuilder","build","buildAsync","keyVaultManager"],"mappings":"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"}