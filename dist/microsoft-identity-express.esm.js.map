{"version":3,"file":"microsoft-identity-express.esm.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/utils/Constants.ts","../src/config/ConfigHelper.ts","../src/client/BaseAuthClientBuilder.ts","../src/packageMetadata.ts","../src/client/BaseAuthClient.ts","../src/network/FetchManager.ts","../src/utils/UrlUtils.ts","../src/utils/CryptoUtils.ts","../src/client/webapp/MsalWebAppAuthClient.ts","../src/client/webapp/AppServiceWebAppAuthClient.ts","../src/network/KeyVaultManager.ts","../src/cache/DistributedCachePlugin.ts","../src/config/MsalConfiguration.ts","../src/utils/EnvironmentUtils.ts","../src/client/webapp/WebAppAuthClientBuilder.ts","../src/client/webapi/MsalWebApiAuthClient.ts","../src/client/webapi/WebApiAuthClientBuilder.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    LoggerOptions,\r\n    LogLevel,\r\n    OIDC_DEFAULT_SCOPES,\r\n} from \"@azure/msal-common\";\r\n\r\n/**\r\n * Basic authentication stages used to determine\r\n * appropriate action after redirect occurs\r\n */\r\nexport enum AppStages {\r\n    SIGN_IN = \"sign_in\",\r\n    SIGN_OUT = \"sign_out\",\r\n    ACQUIRE_TOKEN = \"acquire_token\",\r\n};\r\n\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nexport const AADAuthorityConstants = {\r\n    COMMON: \"common\",\r\n    ORGANIZATIONS: \"organizations\",\r\n    CONSUMERS: \"consumers\"\r\n}\r\n\r\n/**\r\n * String constants related credential type\r\n */\r\nexport enum KeyVaultCredentialTypes {\r\n    SECRET = \"clientSecret\",\r\n    CERTIFICATE = \"clientCertificate\",\r\n}\r\n\r\nexport const OIDC_SCOPES = [\r\n    ...OIDC_DEFAULT_SCOPES,\r\n    \"email\"\r\n]\r\n\r\n/**\r\n * Request headers used by App Service authentication\r\n */\r\nexport const AppServiceAuthenticationHeaders = {\r\n    APP_SERVICE_AUTHENTICATION_HEADER: \"X-MSAL-APP-SERVICE-AUTHENTICATION\",\r\n    APP_SERVICE_ACCESS_TOKEN_HEADER: \"X-MS-TOKEN-AAD-ACCESS-TOKEN\",\r\n    APP_SERVICE_ID_TOKEN_HEADER: \"X-MS-TOKEN-AAD-ID-TOKEN\",\r\n    APP_SERVICE_REFRESH_TOKEN_HEADER: \"X-MS-TOKEN-AAD-REFRESH-TOKEN\",\r\n    APP_SERVICE_ACCESS_TOKEN_EXPIRES_HEADER: \"X-MS-TOKEN-AAD-EXPIRES-ON\",\r\n    APP_SERVICE_USER_OID_HEADER: \"X-MS-CLIENT-PRINCIPAL-ID\",\r\n    APP_SERVICE_USER_UPN_HEADER: \"X-MS-CLIENT-PRINCIPAL-NAME\",\r\n    APP_SERVICE_IDP_X_HEADER: \"X-MS-CLIENT-PRINCIPAL-IDP\"\r\n}\r\n\r\n/**\r\n * Endpoints used by App Service authentication\r\n */\r\nexport const AppServiceAuthenticationEndpoints = {\r\n    ID_TOKEN_ENDPOINT: \"/.auth/me\",\r\n    POST_LOGOUT_DEFAULT_ENDPOINT: \"/.auth/logout/done\",\r\n    POST_LOGIN_DEFAULT_ENDPOINT: \"/.auth/login/done\",\r\n    AAD_SIGN_IN_ENDPOINT: \"/.auth/login/aad\",\r\n    AAD_SIGN_OUT_ENDPOINT: \"/.auth/logout\",\r\n    TOKEN_REFRESH_ENDPOINT: \"/.auth/refresh\",\r\n    AAD_REDIRECT_ENDPOINT: \"/.auth/login/aad/callback\",\r\n}\r\n\r\n/**\r\n * Query parameters used by App Service authentication endpoints\r\n */\r\nexport const AppServiceAuthenticationQueryParameters = {\r\n    POST_LOGIN_REDIRECT_QUERY_PARAM: \"?post_login_redirect_url=\",\r\n    POST_LOGOUT_REDIRECT_QUERY_PARAM: \"?post_logout_redirect_uri=\",\r\n}\r\n\r\n/**\r\n * Environment variables used by App Service authentication\r\n */\r\nexport const AppServiceEnvironmentVariables = {\r\n    WEBSITE_AUTH_ENABLED: \"WEBSITE_AUTH_ENABLED\",\r\n    WEBSITE_AUTH_ALLOWED_AUDIENCES: \"WEBSITE_AUTH_ALLOWED_AUDIENCES\",\r\n    WEBSITE_AUTH_DEFAULT_PROVIDER: \"WEBSITE_AUTH_DEFAULT_PROVIDER\",\r\n    WEBSITE_AUTH_TOKEN_STORE: \"WEBSITE_AUTH_TOKEN_STORE\",\r\n    WEBSITE_AUTH_LOGIN_PARAMS: \"WEBSITE_AUTH_LOGIN_PARAMS\",\r\n    WEBSITE_AUTH_PRESERVE_URL_FRAGMENT: \"WEBSITE_AUTH_PRESERVE_URL_FRAGMENT\",\r\n    WEBSITE_AUTH_OPENID_ISSUER: \"WEBSITE_AUTH_OPENID_ISSUER\",\r\n    WEBSITE_AUTH_CLIENT_ID: \"WEBSITE_AUTH_CLIENT_ID\",\r\n    WEBSITE_HOSTNAME: \"WEBSITE_HOSTNAME\",\r\n    WEBSITE_SITE_NAME: \"WEBSITE_SITE_NAME\",\r\n    WEBSITE_AUTH_REQUIRE_HTTPS: \"WEBSITE_AUTH_REQUIRE_HTTPS\",\r\n    WEBSITE_AUTH_UNAUTHENTICATED_ACTION: \"WEBSITE_AUTH_UNAUTHENTICATED_ACTION\",\r\n    WEBSITE_AUTH_API_PREFIX: \"WEBSITE_AUTH_API_PREFIX\",\r\n    MICROSOFT_PROVIDER_AUTHENTICATION_SECRET: \"MICROSOFT_PROVIDER_AUTHENTICATION_SECRET\",\r\n}\r\n\r\n/**\r\n * Constants used in access control scenarios\r\n */\r\nexport const AccessControlConstants = {\r\n    GROUPS: \"groups\",\r\n    ROLES: \"roles\",\r\n    CLAIM_NAMES: \"_claim_name\",\r\n    CLAIM_SOURCES: \"_claim_sources\",\r\n    PAGINATION_LINK: \"@odata.nextLink\",\r\n    GRAPH_MEMBERS_ENDPOINT: \"https://graph.microsoft.com/v1.0/me/memberOf\",\r\n    GRAPH_MEMBER_SCOPES: \"User.Read GroupMember.Read.All\"\r\n};\r\n\r\n/**\r\n * Various information constants\r\n */\r\nexport const InfoMessages = {\r\n    APP_SERVICE_AUTH_DETECTED: \"App Service Authentication detected\",\r\n    REQUEST_FOR_RESOURCE: \"Request made to web API\",\r\n    OVERAGE_OCCURRED: \"User has too many groups. Groups overage claim occurred\"\r\n}\r\n\r\n/**\r\n * Various error constants\r\n */\r\nexport const ErrorMessages = {\r\n    NOT_PERMITTED: \"Not permitted\",\r\n    INVALID_TOKEN: \"Invalid token\",\r\n    CANNOT_DETERMINE_APP_STAGE: \"Cannot determine application stage\",\r\n    CANNOT_VALIDATE_TOKEN: \"Cannot validate token\",\r\n    NONCE_MISMATCH: \"Nonce does not match\",\r\n    INTERACTION_REQUIRED: \"interaction_required\",\r\n    TOKEN_ACQUISITION_FAILED: \"Token acquisition failed\",\r\n    AUTH_CODE_NOT_OBTAINED: \"Authorization code cannot be obtained\",\r\n    TOKEN_NOT_FOUND: \"No token found\",\r\n    TOKEN_NOT_DECODED: \"Token cannot be decoded\",\r\n    TOKEN_NOT_VERIFIED: \"Token cannot be verified\",\r\n    KEYS_NOT_OBTAINED: \"Signing keys cannot be obtained\",\r\n    STATE_NOT_FOUND: \"State not found\",\r\n    USER_HAS_NO_ROLE: \"User does not have any roles\",\r\n    USER_NOT_IN_ROLE: \"User does not have this role\",\r\n    USER_HAS_NO_GROUP: \"User does not have any groups\",\r\n    USER_NOT_IN_GROUP: \"User does not have this group\",\r\n    METHOD_NOT_ALLOWED: \"Method not allowed for this route\",\r\n    RULE_NOT_FOUND: \"No rule found for this route\",\r\n    SESSION_NOT_FOUND: \"No session found for this request\",\r\n    KEY_VAULT_CONFIG_NOT_FOUND: \"No coordinates found for Key Vault\"\r\n};\r\n\r\n/**\r\n * Various configuration error constants\r\n */\r\nexport const ConfigurationErrorMessages = {\r\n    NO_CLIENT_ID: \"No clientId provided!\",\r\n    INVALID_CLIENT_ID: \"Invalid clientId!\",\r\n    NO_TENANT_INFO: \"No tenant info provided!\",\r\n    INVALID_TENANT_INFO: \"Invalid tenant info!\",\r\n    NO_CLIENT_CREDENTIAL: \"No client credential provided!\",\r\n    NO_REDIRECT_URI: \"No redirect URI provided!\",\r\n    NO_ERROR_ROUTE: \"No error route provided!\",\r\n    NO_UNAUTHORIZED_ROUTE: \"No unauthorized route provided!\"\r\n}\r\n\r\n/**\r\n * For more information, visit: https://login.microsoftonline.com/error\r\n */\r\nexport const ErrorCodes = {\r\n    65001: \"AADSTS65001\", // consent required\r\n    50076: \"AADSTS50076\", // mfa required\r\n    50079: \"AADSTS50079\", // mfa enrollment required\r\n    50001: \"AADSTS50001\", // invalid resource uri\r\n    65004: \"AADSTS65004\", // user declined consent\r\n    70011: \"AADSTS70011\", // invalid scope\r\n    700022: \"AADSTS700022\", // multiple resources\r\n    700020: \"AADSTS700020\", // interaction required\r\n    90118: \"AADB2C90118\", // password forgotten (B2C)\r\n};\r\n\r\nexport const DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\r\n    loggerCallback: (logLevel, message, containsPii) => {\r\n        if (containsPii) {\r\n            return;\r\n        }\r\n        console.info(message);\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info,\r\n};","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { StringUtils } from \"@azure/msal-common\";\r\n\r\nimport { AADAuthorityConstants, ConfigurationErrorMessages, OIDC_SCOPES } from \"../utils/Constants\";\r\nimport { AppSettings, Resource } from \"./AppSettings\";\r\n\r\nexport class ConfigHelper {\r\n\r\n    /**\r\n     * Validates the fields in the configuration file\r\n     * @param {AppSettings} appSettings: configuration object\r\n     * @returns {void}\r\n     */\r\n    static validateAppSettings(appSettings: AppSettings): void {\r\n        if (StringUtils.isEmpty(appSettings.appCredentials.clientId)) {\r\n            throw new Error(ConfigurationErrorMessages.NO_CLIENT_ID);\r\n        } else if (!ConfigHelper.isGuid(appSettings.appCredentials.clientId)) {\r\n            throw new Error(ConfigurationErrorMessages.INVALID_CLIENT_ID);\r\n        }\r\n\r\n        if (StringUtils.isEmpty(appSettings.appCredentials.tenantId)) {\r\n            throw new Error(ConfigurationErrorMessages.NO_TENANT_INFO);\r\n        } else if (!ConfigHelper.isGuid(appSettings.appCredentials.tenantId) && !Object.values(AADAuthorityConstants).includes(appSettings.appCredentials.tenantId)) {\r\n            throw new Error(ConfigurationErrorMessages.INVALID_TENANT_INFO);\r\n        }\r\n\r\n        if (StringUtils.isEmpty(appSettings.authRoutes.redirect)) {\r\n            throw new Error(ConfigurationErrorMessages.NO_REDIRECT_URI);\r\n        }\r\n\r\n        if (StringUtils.isEmpty(appSettings.authRoutes.error)) {\r\n            throw new Error(ConfigurationErrorMessages.NO_ERROR_ROUTE);\r\n        }\r\n\r\n        if (StringUtils.isEmpty(appSettings.authRoutes.unauthorized)) {\r\n            throw new Error(ConfigurationErrorMessages.NO_UNAUTHORIZED_ROUTE);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Verifies if a string is GUID\r\n     * @param {string} guid\r\n     * @returns {boolean}\r\n     */\r\n    static isGuid(guid: string): boolean {\r\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n        return regexGuid.test(guid);\r\n    }\r\n\r\n    /**\r\n     * Util method to get the resource name for a given scope(s)\r\n     * @param {Array} scopes: an array of scopes that the resource is associated with\r\n     * @param {AppSettings} appSettings: application authentication parameters\r\n     * @returns {string}\r\n     */\r\n    static getResourceNameFromScopes(scopes: string[], appSettings: AppSettings): string {\r\n        const index = Object.values({ ...appSettings.protectedResources, ...appSettings.ownedResources })\r\n            .findIndex((resource: Resource) => JSON.stringify(resource.scopes) === JSON.stringify(scopes));\r\n\r\n        const resourceName = Object.keys({ ...appSettings.protectedResources, ...appSettings.ownedResources })[index];\r\n\r\n        return resourceName;\r\n    };\r\n\r\n    /**\r\n     * Util method to get the scopes for a given resource name\r\n     * @param {string} resourceEndpoint: the resource name\r\n     * @param {AppSettings} appSettings: application authentication parameters\r\n     * @returns {string}\r\n     */\r\n    static getScopesFromResourceEndpoint(resourceEndpoint: string, appSettings: AppSettings): string[] {\r\n        const scopes = Object.values({ ...appSettings.protectedResources, ...appSettings.ownedResources })\r\n            .find((resource: Resource) => resource.endpoint === resourceEndpoint).scopes;\r\n\r\n        return scopes;\r\n    };\r\n\r\n    static getEffectiveScopes(scopesList: string[]): string[] {\r\n        const effectiveScopesList = scopesList.filter(scope => !OIDC_SCOPES.includes(scope));\r\n        return effectiveScopesList;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ICachePlugin } from \"@azure/msal-node\";\r\n\r\nimport { IDistributedPersistence } from \"../cache/IDistributedPersistence\";\r\nimport { ConfigHelper } from \"../config/ConfigHelper\";\r\nimport { AppSettings, KeyVaultCredential } from \"../config/AppSettings\";\r\n\r\nexport abstract class BaseAuthClientBuilder {\r\n\r\n    appSettings: AppSettings;\r\n    protected persistenceManager: IDistributedPersistence;\r\n    protected keyVaultCredential: KeyVaultCredential;\r\n    protected customCachePlugin: ICachePlugin;\r\n\r\n    protected constructor(appSettings: AppSettings) {\r\n        ConfigHelper.validateAppSettings(appSettings);\r\n        this.appSettings = appSettings;\r\n    };\r\n\r\n    withKeyVaultCredentials(keyVaultCredential: KeyVaultCredential): BaseAuthClientBuilder {\r\n        this.keyVaultCredential = keyVaultCredential;\r\n        return this;\r\n    }\r\n\r\n    withCustomCachePlugin(cachePlugin: ICachePlugin): BaseAuthClientBuilder {\r\n        this.customCachePlugin = cachePlugin;\r\n        return this;\r\n    }\r\n    \r\n    withDistributedTokenCache(persistenceManager: IDistributedPersistence): BaseAuthClientBuilder {\r\n        this.persistenceManager = persistenceManager;\r\n        return this;\r\n    }\r\n\r\n    abstract build(): any;\r\n\r\n    abstract buildAsync(): Promise<any>;\r\n}","export const packageName = \"@azure-samples/microsoft-identity-express\";\r\nexport const packageVersion = \"beta\";","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Logger } from \"@azure/msal-common\";\r\n\r\nimport {\r\n    ConfidentialClientApplication,\r\n    Configuration,\r\n    CryptoProvider,\r\n} from \"@azure/msal-node\";\r\n\r\nimport { AppSettings } from \"../config/AppSettings\";\r\n\r\nimport {\r\n    packageName,\r\n    packageVersion\r\n} from \"../packageMetadata\";\r\n\r\nexport abstract class BaseAuthClient {\r\n\r\n    appSettings: AppSettings;\r\n    protected msalConfig: Configuration;\r\n    protected msalClient: ConfidentialClientApplication;\r\n    protected cryptoProvider: CryptoProvider;\r\n    protected logger: Logger;\r\n\r\n    protected constructor(appSettings: AppSettings, msalConfig: Configuration) {\r\n        this.appSettings = appSettings;\r\n        this.msalConfig = msalConfig;\r\n        this.cryptoProvider = new CryptoProvider();\r\n        this.logger = new Logger(this.msalConfig.system.loggerOptions, packageName, packageVersion);\r\n        this.msalClient = new ConfidentialClientApplication(this.msalConfig);\r\n    }\r\n\r\n    getMsalClient(): ConfidentialClientApplication {\r\n        return this.msalClient;\r\n    }\r\n\r\n    getMsalConfig(): Configuration {\r\n        return this.msalConfig;\r\n    }\r\n\r\n    getLogger(): Logger {\r\n        return this.logger;\r\n    }\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport axios, { AxiosResponse, AxiosRequestConfig } from \"axios\";\r\nimport { StringUtils } from \"@azure/msal-common\";\r\n\r\nimport {\r\n    AccessControlConstants,\r\n    ErrorMessages\r\n} from \"../utils/Constants\";\r\n\r\nexport class FetchManager {\r\n\r\n    /**\r\n     * Calls a resource endpoint\r\n     * @param {string} endpoint\r\n     * @returns {Promise}\r\n     */\r\n    static callApiEndpoint = async (endpoint: string): Promise<AxiosResponse> => {\r\n        try {\r\n            const response: AxiosResponse = await axios.get(endpoint);\r\n            return response.data;\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls a resource endpoint with a raw access token\r\n     * using the authorization bearer token scheme\r\n     * @param {string} endpoint \r\n     * @param {string} accessToken \r\n     * @returns {Promise}\r\n     */\r\n    static callApiEndpointWithToken = async (endpoint: string, accessToken: string): Promise<AxiosResponse> => {\r\n\r\n        if (StringUtils.isEmpty(accessToken)) {\r\n            throw new Error(ErrorMessages.TOKEN_NOT_FOUND)\r\n        }\r\n\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`\r\n            }\r\n        };\r\n\r\n        try {\r\n            const response: AxiosResponse = await axios.get(endpoint, options);\r\n            return response.data;\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles queries against Microsoft Graph that return multiple pages of data  \r\n     * @param {string} accessToken: access token required by endpoint \r\n     * @param {string} nextPage: next page link\r\n     * @param {Array} data: stores data from each page\r\n     * @returns {Promise}\r\n     */\r\n    static handlePagination = async (accessToken: string, nextPage: string, data: string[] = []): Promise<string[]> => {\r\n\r\n        try {\r\n            const graphResponse = await FetchManager.callApiEndpointWithToken(nextPage, accessToken);\r\n            graphResponse[\"value\"].map((v) => data.push(v.id));\r\n\r\n            if (graphResponse[AccessControlConstants.PAGINATION_LINK]) {\r\n                return await FetchManager.handlePagination(accessToken, graphResponse[AccessControlConstants.PAGINATION_LINK], data)\r\n            } else {\r\n                return data;\r\n            }\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Request } from \"express\";\r\nimport { IUri, UrlString } from \"@azure/msal-common\";\r\n\r\nexport class UrlUtils {\r\n    /**\r\n     * Gets the absolute URL from a given request and path string\r\n     * @param {Request} req: express request object \r\n     * @param {string} url: a given URL\r\n     * @returns {string}\r\n     */\r\n    static ensureAbsoluteUrl = (req: Request, url: string): string => {\r\n        const urlComponents: IUri = new UrlString(url).getUrlComponents();\r\n\r\n        if (!urlComponents.Protocol) {\r\n            if (!urlComponents.HostNameAndPort && !url.startsWith(\"www\")) {\r\n                if (!url.startsWith(\"/\")) {\r\n                    return req.protocol + \"://\" + req.get(\"host\") + \"/\" + url;\r\n                }\r\n                return req.protocol + \"://\" + req.get(\"host\") + url;\r\n            }\r\n            return req.protocol + \"://\" + url;\r\n        } else {\r\n            return url;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the path segment from a given URL\r\n     * @param {string} url: a given URL\r\n     * @returns {string}\r\n     */\r\n    static getPathFromUrl = (url: string): string => {\r\n        const urlComponents: IUri = new UrlString(url).getUrlComponents();\r\n        return `/${urlComponents.PathSegments.join(\"/\")}`;\r\n    };\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n\r\nimport * as crypto from \"crypto\";\r\n\r\n\r\n\r\nexport class CryptoUtils {\r\n\r\n    algorithm: string;\r\n\r\n    constructor(algorithm: string = \"aes-192-cbc\") {\r\n        this.algorithm = algorithm;\r\n    }\r\n\r\n    generateSalt(): string {\r\n        return crypto.randomBytes(20).toString('hex');\r\n    }\r\n\r\n    createKey(password, salt): Buffer {\r\n        return crypto.scryptSync(password, salt, 24);\r\n    }\r\n\r\n    encryptData(stringifiedData, key): string {\r\n        const iv = crypto.randomBytes(16);\r\n        const cipher = crypto.createCipheriv(this.algorithm, key, iv);\r\n        const encryptedData = cipher.update(stringifiedData, 'utf8', 'hex');\r\n\r\n        return [iv.toString(\"hex\"), encryptedData + cipher.final('hex')].join(\".\");\r\n    }\r\n\r\n    decryptData(encryptedData, key): string {\r\n        const [iv, encrypted] = encryptedData.split(\".\");\r\n        const decipher = crypto.createDecipheriv(this.algorithm, key, Buffer.from(iv, \"hex\"));\r\n        return decipher.update(encrypted, 'hex', 'utf8') + decipher.final('utf8');\r\n    }\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport express, {\r\n    RequestHandler,\r\n    Request,\r\n    Response,\r\n    NextFunction,\r\n    Router\r\n} from \"express\";\r\n\r\nimport {\r\n    OIDC_DEFAULT_SCOPES,\r\n    InteractionRequiredAuthError,\r\n    StringUtils,\r\n} from \"@azure/msal-common\";\r\n\r\nimport {\r\n    Configuration,\r\n    SilentFlowRequest,\r\n    AuthenticationResult\r\n} from \"@azure/msal-node\";\r\n\r\n\r\nimport { BaseAuthClient } from \"../BaseAuthClient\";\r\nimport { ConfigHelper } from \"../../config/ConfigHelper\";\r\nimport { IdTokenClaims } from \"../../utils/Types\";\r\nimport { FetchManager } from \"../../network/FetchManager\";\r\nimport { UrlUtils } from \"../../utils/UrlUtils\";\r\nimport { CryptoUtils } from \"../../utils/CryptoUtils\"\r\n\r\nimport {\r\n    Resource,\r\n    AppSettings,\r\n    AccessRule,\r\n} from \"../../config/AppSettings\";\r\n\r\nimport { AuthCodeParams } from \"../../utils/Types\";\r\n\r\nimport {\r\n    InitializationOptions,\r\n    TokenRequestOptions,\r\n    GuardOptions,\r\n    SignInOptions,\r\n    SignOutOptions,\r\n    HandleRedirectOptions\r\n} from \"../MiddlewareOptions\";\r\n\r\nimport {\r\n    AppStages,\r\n    ErrorMessages,\r\n    AccessControlConstants,\r\n    InfoMessages\r\n} from \"../../utils/Constants\";\r\n\r\n\r\n/**\r\n * A simple wrapper around MSAL Node ConfidentialClientApplication object.\r\n * It offers a collection of middleware and utility methods that automate\r\n * basic authentication and authorization tasks in Express MVC web apps\r\n */\r\nexport class MsalWebAppAuthClient extends BaseAuthClient {\r\n    \r\n    private cryptoUtils: CryptoUtils;\r\n\r\n    /**\r\n     * @param {AppSettings} appSettings\r\n     * @param {Configuration} msalConfig\r\n     * @constructor\r\n     */\r\n    constructor(appSettings: AppSettings, msalConfig: Configuration) {\r\n        super(appSettings, msalConfig);\r\n        this.cryptoUtils = new CryptoUtils();\r\n    }\r\n\r\n    /**\r\n     * Initialize AuthProvider and set default routes and handlers\r\n     * @param {InitializationOptions} options\r\n     * @returns {Router}\r\n     */\r\n    initialize(options?: InitializationOptions): Router {\r\n\r\n        const appRouter = express.Router();\r\n\r\n        // handle redirect\r\n        appRouter.get(UrlUtils.getPathFromUrl(this.appSettings.authRoutes.redirect), this.handleRedirect());\r\n        appRouter.post(UrlUtils.getPathFromUrl(this.appSettings.authRoutes.redirect), this.handleRedirect());\r\n\r\n        appRouter.use((req: Request, res: Response, next: NextFunction) => {\r\n\r\n            if (!req.session) {\r\n                // TODO: handle gracefully\r\n                throw new Error(ErrorMessages.SESSION_NOT_FOUND);\r\n            }\r\n\r\n            // add session nonce for crsf\r\n            req.session.nonce = this.cryptoProvider.createNewGuid();\r\n            next();\r\n        });\r\n\r\n        if (this.appSettings.authRoutes.frontChannelLogout) {\r\n            /**\r\n             * Expose front-channel logout route. For more information, visit: \r\n             * https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc#single-sign-out\r\n             */\r\n            appRouter.get(this.appSettings.authRoutes.frontChannelLogout, (req: Request, res: Response, next: NextFunction) => {\r\n                req.session.destroy(() => {\r\n                    res.sendStatus(200);\r\n                });\r\n            });\r\n        }\r\n\r\n        return appRouter;\r\n    }\r\n\r\n    /**\r\n     * Initiates sign in flow\r\n     * @param {SignInOptions} options: options to modify login request\r\n     * @returns {RequestHandler}\r\n     */\r\n    signIn(options?: SignInOptions): RequestHandler {\r\n        return (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n\r\n            const key = this.cryptoUtils.createKey(req.session.nonce, this.cryptoUtils.generateSalt());\r\n            req.session.key = key.toString(\"hex\");\r\n\r\n            const state = this.cryptoProvider.base64Encode(\r\n                this.cryptoUtils.encryptData(JSON.stringify({\r\n                    stage: AppStages.SIGN_IN,\r\n                    path: options.postLoginRedirect,\r\n                    nonce: req.session.nonce,\r\n                }), key)\r\n            );\r\n\r\n            const params: AuthCodeParams = {\r\n                authority: this.msalConfig.auth.authority,\r\n                scopes: OIDC_DEFAULT_SCOPES,\r\n                state: state,\r\n                redirect: UrlUtils.ensureAbsoluteUrl(req, this.appSettings.authRoutes.redirect)\r\n            };\r\n\r\n            // get url to sign user in\r\n            return this.getAuthCode(req, res, next, params);\r\n\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initiate sign out and destroy the session\r\n     * @param options: options to modify logout request \r\n     * @returns {RequestHandler}\r\n     */\r\n    signOut(options?: SignOutOptions): RequestHandler {\r\n        return (req: Request, res: Response, next: NextFunction): void => {\r\n\r\n            const postLogoutRedirectUri = UrlUtils.ensureAbsoluteUrl(req, options.postLogoutRedirect);\r\n\r\n            /**\r\n             * Construct a logout URI and redirect the user to end the\r\n             * session with Azure AD/B2C. For more information, visit:\r\n             * (AAD) https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc#send-a-sign-out-request\r\n             * (B2C) https://docs.microsoft.com/azure/active-directory-b2c/openid-connect#send-a-sign-out-request\r\n             */\r\n            const logoutUri = `${this.msalConfig.auth.authority}/oauth2/v2.0/logout?post_logout_redirect_uri=${postLogoutRedirectUri}`;\r\n\r\n            req.session.destroy(() => {\r\n                res.redirect(logoutUri);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Middleware that handles redirect depending on request state\r\n     * There are basically 2 stages: sign-in and acquire token\r\n     * @param {HandleRedirectOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    private handleRedirect(options?: HandleRedirectOptions): RequestHandler {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n            // TODO: handle form_post method\r\n\r\n            if (req.query.state) {\r\n                const state = JSON.parse(this.cryptoUtils.decryptData(this.cryptoProvider.base64Decode(req.query.state as string), Buffer.from(req.session.key, \"hex\")));\r\n\r\n                // check if nonce matches\r\n                if (state.nonce === req.session.nonce) {\r\n                    switch (state.stage) {\r\n                        case AppStages.SIGN_IN: {\r\n                            // token request should have auth code\r\n                            req.session.tokenRequest.code = req.query.code as string;\r\n\r\n                            try {\r\n                                // exchange auth code for tokens\r\n                                const tokenResponse: AuthenticationResult = await this.msalClient.acquireTokenByCode(req.session.tokenRequest);\r\n                                req.session.isAuthenticated = true;\r\n                                req.session.account = tokenResponse.account;\r\n                                res.redirect(state.path);\r\n                            } catch (error) {\r\n                                this.logger.error(ErrorMessages.TOKEN_ACQUISITION_FAILED);\r\n                                next(error)\r\n                            }\r\n                            break;\r\n                        }\r\n\r\n                        case AppStages.ACQUIRE_TOKEN: {\r\n                            // get the name of the resource associated with scope\r\n                            const resourceName = ConfigHelper.getResourceNameFromScopes(req.session.tokenRequest.scopes, this.appSettings);\r\n\r\n                            req.session.tokenRequest.code = req.query.code as string;\r\n\r\n                            try {\r\n                                const tokenResponse: AuthenticationResult = await this.msalClient.acquireTokenByCode(req.session.tokenRequest);\r\n                                req.session.protectedResources[resourceName].accessToken = tokenResponse.accessToken;\r\n                                res.redirect(state.path);\r\n                            } catch (error) {\r\n                                this.logger.error(ErrorMessages.TOKEN_ACQUISITION_FAILED);\r\n                                next(error);\r\n                            }\r\n                            break;\r\n                        }\r\n\r\n                        default:\r\n                            this.logger.error(ErrorMessages.CANNOT_DETERMINE_APP_STAGE);\r\n                            res.redirect(this.appSettings.authRoutes.error);\r\n                            break;\r\n                    }\r\n                } else {\r\n                    this.logger.error(ErrorMessages.NONCE_MISMATCH);\r\n                    res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                }\r\n            } else {\r\n                this.logger.error(ErrorMessages.STATE_NOT_FOUND);\r\n                res.redirect(this.appSettings.authRoutes.unauthorized);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Middleware that gets tokens via acquireToken*\r\n     * @param {TokenRequestOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    getToken(options: TokenRequestOptions): RequestHandler {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n\r\n            // get scopes for token request\r\n            const scopes = options.resource.scopes;\r\n            const resourceName = ConfigHelper.getResourceNameFromScopes(scopes, this.appSettings)\r\n\r\n            if (!req.session.protectedResources) {\r\n                req.session.protectedResources = {}\r\n            }\r\n\r\n            req.session.protectedResources = {\r\n                [resourceName]: {\r\n                    ...this.appSettings.protectedResources[resourceName],\r\n                    accessToken: null,\r\n                } as Resource\r\n            };\r\n\r\n            try {\r\n                const silentRequest: SilentFlowRequest = {\r\n                    account: req.session.account,\r\n                    scopes: scopes,\r\n                };\r\n\r\n                // acquire token silently to be used in resource call\r\n                const tokenResponse: AuthenticationResult = await this.msalClient.acquireTokenSilent(silentRequest);\r\n\r\n                // In B2C scenarios, sometimes an access token is returned empty.\r\n                // In that case, we will acquire token interactively instead.\r\n                if (StringUtils.isEmpty(tokenResponse.accessToken)) {\r\n                    this.logger.error(ErrorMessages.TOKEN_NOT_FOUND);\r\n                    throw new InteractionRequiredAuthError(ErrorMessages.INTERACTION_REQUIRED);\r\n                }\r\n\r\n                req.session.protectedResources[resourceName].accessToken = tokenResponse.accessToken;\r\n                next();\r\n            } catch (error) {\r\n                // in case there are no cached tokens, initiate an interactive call\r\n                if (error instanceof InteractionRequiredAuthError) {\r\n                    \r\n                    const key = this.cryptoUtils.createKey(req.session.nonce, this.cryptoUtils.generateSalt());\r\n                    req.session.key = key.toString(\"hex\");\r\n\r\n                    const state = this.cryptoProvider.base64Encode(\r\n                        this.cryptoUtils.encryptData(JSON.stringify({\r\n                            stage: AppStages.ACQUIRE_TOKEN,\r\n                            path: req.originalUrl,\r\n                            nonce: req.session.nonce,\r\n                        }), key)\r\n                    );\r\n\r\n                    const params: AuthCodeParams = {\r\n                        authority: this.msalConfig.auth.authority,\r\n                        scopes: scopes,\r\n                        state: state,\r\n                        redirect: UrlUtils.ensureAbsoluteUrl(req, this.appSettings.authRoutes.redirect),\r\n                        account: req.session.account,\r\n                    };\r\n\r\n                    // initiate the first leg of auth code grant to get token\r\n                    return this.getAuthCode(req, res, next, params);\r\n                } else {\r\n                    next(error);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Check if authenticated in session\r\n     * @param {GuardOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    isAuthenticated(options?: GuardOptions): RequestHandler {\r\n        return (req: Request, res: Response, next: NextFunction): void => {\r\n            if (req.session) {\r\n                if (!req.session.isAuthenticated) {\r\n                    this.logger.error(ErrorMessages.NOT_PERMITTED);\r\n                    return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                }\r\n\r\n                next();\r\n            } else {\r\n                this.logger.error(ErrorMessages.SESSION_NOT_FOUND);\r\n                res.redirect(this.appSettings.authRoutes.unauthorized);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Checks if the user has access for this route, defined in access matrix\r\n     * @param {GuardOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    hasAccess(options?: GuardOptions): RequestHandler {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n            if (req.session && this.appSettings.accessMatrix) {\r\n\r\n                const checkFor = options.accessRule.hasOwnProperty(AccessControlConstants.GROUPS) ? AccessControlConstants.GROUPS : AccessControlConstants.ROLES;\r\n\r\n                switch (checkFor) {\r\n                    case AccessControlConstants.GROUPS:\r\n\r\n                        if (req.session.account.idTokenClaims[AccessControlConstants.GROUPS] === undefined) {\r\n                            if (req.session.account.idTokenClaims[AccessControlConstants.CLAIM_NAMES]\r\n                                || req.session.account.idTokenClaims[AccessControlConstants.CLAIM_SOURCES]) {\r\n                                this.logger.warning(InfoMessages.OVERAGE_OCCURRED);\r\n                                return await this.handleOverage(req, res, next, options.accessRule);\r\n                            } else {\r\n                                this.logger.error(ErrorMessages.USER_HAS_NO_GROUP);\r\n                                return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                            }\r\n                        } else {\r\n                            const groups = req.session.account.idTokenClaims[AccessControlConstants.GROUPS];\r\n\r\n                            if (!this.checkAccessRule(req.method, options.accessRule, groups, AccessControlConstants.GROUPS)) {\r\n                                return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                            }\r\n                        }\r\n\r\n                        next();\r\n                        break;\r\n\r\n                    case AccessControlConstants.ROLES:\r\n                        if (req.session.account.idTokenClaims[AccessControlConstants.ROLES] === undefined) {\r\n                            this.logger.error(ErrorMessages.USER_HAS_NO_ROLE);\r\n                            return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                        } else {\r\n                            const roles = req.session.account.idTokenClaims[AccessControlConstants.ROLES];\r\n\r\n                            if (!this.checkAccessRule(req.method, options.accessRule, roles, AccessControlConstants.ROLES)) {\r\n                                return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                            }\r\n                        }\r\n\r\n                        next();\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n            } else {\r\n                res.redirect(this.appSettings.authRoutes.unauthorized);\r\n            }\r\n        }\r\n    }\r\n\r\n    // ============== UTILS ===============\r\n\r\n    /**\r\n     * This method is used to generate an auth code url request\r\n     * @param {Request} req: express request object\r\n     * @param {Response} res: express response object\r\n     * @param {NextFunction} next: express next function\r\n     * @param {AuthCodeParams} params: modifies auth code url request\r\n     * @returns {Promise}\r\n     */\r\n    private async getAuthCode(req: Request, res: Response, next: NextFunction, params: AuthCodeParams): Promise<void> {\r\n\r\n        // prepare the request\r\n        req.session.authCodeRequest = {\r\n            authority: params.authority,\r\n            scopes: params.scopes,\r\n            state: params.state,\r\n            redirectUri: params.redirect,\r\n            prompt: params.prompt,\r\n            account: params.account,\r\n        }\r\n\r\n        req.session.tokenRequest = {\r\n            authority: params.authority,\r\n            scopes: params.scopes,\r\n            redirectUri: params.redirect,\r\n            code: undefined,\r\n        }\r\n\r\n        // request an authorization code to exchange for tokens\r\n        try {\r\n            const response = await this.msalClient.getAuthCodeUrl(req.session.authCodeRequest);\r\n            res.redirect(response);\r\n        } catch (error) {\r\n            this.logger.error(ErrorMessages.AUTH_CODE_NOT_OBTAINED);\r\n            next(error);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handles group overage claims by querying MS Graph /memberOf endpoint\r\n     * @param {Request} req: express request object\r\n     * @param {Response} res: express response object\r\n     * @param {NextFunction} next: express next function\r\n     * @param {AccessRule} rule: a given access rule\r\n     * @returns {Promise}\r\n     */\r\n    private async handleOverage(req: Request, res: Response, next: NextFunction, rule: AccessRule): Promise<void> {\r\n        const { _claim_names, _claim_sources, ...newIdTokenClaims } = <IdTokenClaims>req.session.account.idTokenClaims;\r\n\r\n        const silentRequest: SilentFlowRequest = {\r\n            account: req.session.account,\r\n            scopes: AccessControlConstants.GRAPH_MEMBER_SCOPES.split(\" \"),\r\n        };\r\n\r\n        try {\r\n            // acquire token silently to be used in resource call\r\n            const tokenResponse = await this.msalClient.acquireTokenSilent(silentRequest);\r\n            try {\r\n                const graphResponse = await FetchManager.callApiEndpointWithToken(AccessControlConstants.GRAPH_MEMBERS_ENDPOINT, tokenResponse.accessToken);\r\n\r\n                /**\r\n                 * Some queries against Microsoft Graph return multiple pages of data either due to server-side paging \r\n                 * or due to the use of the $top query parameter to specifically limit the page size in a request. \r\n                 * When a result set spans multiple pages, Microsoft Graph returns an @odata.nextLink property in \r\n                 * the response that contains a URL to the next page of results. Learn more at https://docs.microsoft.com/graph/paging\r\n                 */\r\n                if (graphResponse[AccessControlConstants.PAGINATION_LINK]) {\r\n                    try {\r\n                        const userGroups = await FetchManager.handlePagination(tokenResponse.accessToken, graphResponse[AccessControlConstants.PAGINATION_LINK]);\r\n\r\n                        req.session.account.idTokenClaims = {\r\n                            ...newIdTokenClaims,\r\n                            groups: userGroups\r\n                        }\r\n\r\n                        if (!this.checkAccessRule(req.method, rule, req.session.account.idTokenClaims[AccessControlConstants.GROUPS], AccessControlConstants.GROUPS)) {\r\n                            return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                        } else {\r\n                            return next();\r\n                        }\r\n                    } catch (error) {\r\n                        next(error);\r\n                    }\r\n                } else {\r\n                    req.session.account.idTokenClaims = {\r\n                        ...newIdTokenClaims,\r\n                        groups: graphResponse[\"value\"].map((v) => v.id)\r\n                    }\r\n\r\n                    if (!this.checkAccessRule(req.method, rule, req.session.account.idTokenClaims[AccessControlConstants.GROUPS], AccessControlConstants.GROUPS)) {\r\n                        return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                    } else {\r\n                        return next();\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                next(error);\r\n            }\r\n        } catch (error) {\r\n            // TODO: handle silent token acquisition error\r\n            next(error);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Checks if the request passes a given access rule\r\n     * @param {string} method: HTTP method for this route\r\n     * @param {AccessRule} rule: access rule for this route\r\n     * @param {Array} creds: user's credentials i.e. roles or groups\r\n     * @param {string} credType: roles or groups\r\n     * @returns {boolean}\r\n     */\r\n    private checkAccessRule(method: string, rule: AccessRule, creds: string[], credType: string): boolean {\r\n        if (rule.methods.includes(method)) {\r\n            switch (credType) {\r\n                case AccessControlConstants.GROUPS:\r\n                    if (rule.groups.filter(elem => creds.includes(elem)).length < 1) {\r\n                        this.logger.error(ErrorMessages.USER_NOT_IN_GROUP);\r\n                        return false;\r\n                    }\r\n                    break;\r\n\r\n                case AccessControlConstants.ROLES:\r\n                    if (rule.roles.filter(elem => creds.includes(elem)).length < 1) {\r\n                        this.logger.error(ErrorMessages.USER_NOT_IN_ROLE);\r\n                        return false;\r\n                    }\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        } else {\r\n            this.logger.error(ErrorMessages.METHOD_NOT_ALLOWED);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport express, {\r\n    Router,\r\n    RequestHandler,\r\n    Request,\r\n    Response,\r\n    NextFunction\r\n} from \"express\";\r\n\r\nimport { AccountInfo, AuthToken } from \"@azure/msal-common\";\r\n\r\nimport { BaseAuthClient } from \"../BaseAuthClient\";\r\nimport { Configuration } from \"@azure/msal-node\";\r\n\r\nimport { AccessTokenClaims, IdTokenClaims } from \"../../utils/Types\";\r\nimport { AppSettings, Resource } from \"../../config/AppSettings\";\r\nimport { ConfigHelper } from \"../../config/ConfigHelper\";\r\nimport { UrlUtils } from \"../../utils/UrlUtils\";\r\nimport { CryptoUtils } from \"../../utils/CryptoUtils\"\r\n\r\n\r\nimport {\r\n    GuardOptions,\r\n    HandleRedirectOptions,\r\n    InitializationOptions,\r\n    SignInOptions,\r\n    SignOutOptions,\r\n    TokenRequestOptions\r\n} from \"../MiddlewareOptions\";\r\n\r\nimport {\r\n    AppServiceAuthenticationHeaders,\r\n    AppServiceEnvironmentVariables,\r\n    AppServiceAuthenticationEndpoints,\r\n    AppServiceAuthenticationQueryParameters,\r\n    ErrorMessages\r\n} from \"../../utils/Constants\";\r\n\r\nexport class AppServiceWebAppAuthClient extends BaseAuthClient {\r\n\r\n\r\n    /**\r\n     * @param {AppSettings} appSettings\r\n     * @param {Configuration} msalConfig\r\n     * @constructor\r\n     */\r\n    constructor(appSettings: AppSettings, msalConfig: Configuration) {\r\n        super(appSettings, msalConfig);\r\n    }\r\n\r\n    /**\r\n     * Initialize AuthProvider and set default routes and handlers\r\n     * @param {InitializationOptions} options\r\n     * @returns {Router}\r\n     */\r\n    initialize(options?: InitializationOptions): Router {\r\n\r\n        const appRouter = express.Router();\r\n\r\n        // handle redirect\r\n        appRouter.get(UrlUtils.getPathFromUrl(this.appSettings.authRoutes.redirect), this.handleRedirect());\r\n        appRouter.post(UrlUtils.getPathFromUrl(this.appSettings.authRoutes.redirect), this.handleRedirect());\r\n        \r\n        appRouter.use((req: Request, res: Response, next: NextFunction): void => {\r\n\r\n            \r\n            if (!req.session.isAuthenticated) {\r\n                // check headers for id token\r\n                const rawIdToken = req.headers[AppServiceAuthenticationHeaders.APP_SERVICE_ID_TOKEN_HEADER.toLowerCase()] as string;\r\n\r\n                if (rawIdToken) {\r\n\r\n                    // parse the id token\r\n                    const idTokenClaims: IdTokenClaims = AuthToken.extractTokenClaims(rawIdToken, this.cryptoProvider);\r\n\r\n                    req.session.isAuthenticated = true;\r\n\r\n                    req.session.account = {\r\n                        tenantId: idTokenClaims.tid,\r\n                        homeAccountId: idTokenClaims.oid + \".\" + idTokenClaims.tid,\r\n                        localAccountId: idTokenClaims.oid,\r\n                        environment: idTokenClaims.iss.split(\"://\")[1].split(\"/\")[0],\r\n                        username: idTokenClaims.preferred_username,\r\n                        name: idTokenClaims.name,\r\n                        idTokenClaims: idTokenClaims\r\n                    } as AccountInfo;\r\n                }\r\n            }\r\n\r\n            next();\r\n        });\r\n\r\n        return appRouter;\r\n    }\r\n\r\n    /**\r\n     * Initiates sign in flow\r\n     * @param {SignInOptions} options: options to modify login request\r\n     * @returns {RequestHandler}\r\n     */\r\n    signIn(options?: SignInOptions): RequestHandler {\r\n        return (req: Request, res: Response, next: NextFunction): void => {\r\n            let loginUri;\r\n            const postLoginRedirectUri = UrlUtils.ensureAbsoluteUrl(req, options.postLoginRedirect);\r\n            loginUri = \"https://\" + process.env[AppServiceEnvironmentVariables.WEBSITE_HOSTNAME] + AppServiceAuthenticationEndpoints.AAD_SIGN_IN_ENDPOINT + AppServiceAuthenticationQueryParameters.POST_LOGIN_REDIRECT_QUERY_PARAM + postLoginRedirectUri;\r\n            res.redirect(loginUri);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Initiate sign out and destroy the session\r\n     * @param options: options to modify logout request \r\n     * @returns {RequestHandler}\r\n     */\r\n    signOut(options?: SignOutOptions): RequestHandler {\r\n        return (req: Request, res: Response, next: NextFunction): void => {\r\n            const postLogoutRedirectUri = UrlUtils.ensureAbsoluteUrl(req, options.postLogoutRedirect);\r\n            const logoutUri = \"https://\" + process.env[AppServiceEnvironmentVariables.WEBSITE_HOSTNAME] + AppServiceAuthenticationEndpoints.AAD_SIGN_OUT_ENDPOINT + AppServiceAuthenticationQueryParameters.POST_LOGOUT_REDIRECT_QUERY_PARAM + postLogoutRedirectUri;\r\n\r\n            req.session.destroy(() => {\r\n                res.redirect(logoutUri);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Middleware that handles redirect depending on request state\r\n     * There are basically 2 stages: sign-in and acquire token\r\n     * @param {HandleRedirectOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    private handleRedirect(options?: HandleRedirectOptions): RequestHandler {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n            next();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Middleware that gets tokens\r\n     * @param {TokenRequestOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    getToken(options: TokenRequestOptions): RequestHandler {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n\r\n            // get scopes for token request\r\n            const resourceName = ConfigHelper.getResourceNameFromScopes(options.resource.scopes, this.appSettings)\r\n\r\n            if (!req.session.protectedResources) {\r\n                req.session.protectedResources = {}\r\n            }\r\n\r\n            req.session.protectedResources = {\r\n                [resourceName]: {\r\n                    ...this.appSettings.protectedResources[resourceName],\r\n                    accessToken: null,\r\n                } as Resource\r\n            };\r\n\r\n            const rawAccessToken = req.headers[AppServiceAuthenticationHeaders.APP_SERVICE_ACCESS_TOKEN_HEADER.toLowerCase()] as string;\r\n\r\n            if (rawAccessToken) {\r\n\r\n                const accessTokenClaims: AccessTokenClaims = AuthToken.extractTokenClaims(rawAccessToken, this.cryptoProvider);\r\n\r\n                // get the name of the resource associated with scope\r\n                const scopes = accessTokenClaims.scp.split(\" \");\r\n                const effectiveScopes = ConfigHelper.getEffectiveScopes(scopes);\r\n\r\n                if (options.resource.scopes.every(elem => effectiveScopes.includes(elem))) {\r\n                    req.session.protectedResources[resourceName].accessToken = rawAccessToken;\r\n                    return next();\r\n                } else {\r\n                    return next(new Error(\"No tokens found for given scopes\"));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if authenticated in session\r\n     * @param {GuardOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    isAuthenticated(options?: GuardOptions): RequestHandler {\r\n        return (req: Request, res: Response, next: NextFunction): void => {\r\n            if (req.session) {\r\n                if (!req.session.isAuthenticated) {\r\n                    this.logger.error(ErrorMessages.NOT_PERMITTED);\r\n                    return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                }\r\n\r\n                next();\r\n            } else {\r\n                this.logger.error(ErrorMessages.SESSION_NOT_FOUND);\r\n                res.redirect(this.appSettings.authRoutes.unauthorized);\r\n            }\r\n        }\r\n    };\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { DefaultAzureCredential } from \"@azure/identity\";\r\nimport { CertificateClient, KeyVaultCertificate } from \"@azure/keyvault-certificates\";\r\nimport { KeyVaultSecret, SecretClient } from \"@azure/keyvault-secrets\";\r\n\r\nimport { KeyVaultCredential, ClientCertificate } from \"../config/AppSettings\";\r\nimport { KeyVaultCredentialTypes } from \"../utils/Constants\";\r\n\r\nexport type KeyVaultCredentialResponse = {\r\n    type: KeyVaultCredentialTypes.SECRET | KeyVaultCredentialTypes.CERTIFICATE,\r\n    value: string & ClientCertificate\r\n}\r\n\r\nexport class KeyVaultManager {\r\n\r\n    /**\r\n     * Fetches credentials from Key Vault and updates appSettings\r\n     * @param {AppSettings} appSettings \r\n     * @returns {Promise}\r\n     */\r\n    async getCredentialFromKeyVault(keyVaultCredential: KeyVaultCredential): Promise<KeyVaultCredentialResponse> {\r\n\r\n        const credential = new DefaultAzureCredential();\r\n\r\n        switch (keyVaultCredential.credentialType) {\r\n            case KeyVaultCredentialTypes.SECRET: {\r\n                try {\r\n                    const secretResponse = await this.getSecretCredential(keyVaultCredential, credential);\r\n\r\n                    return {\r\n                        type: KeyVaultCredentialTypes.SECRET,\r\n                        value: secretResponse.value,\r\n                    } as KeyVaultCredentialResponse;\r\n\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n                break;\r\n            }\r\n\r\n            case KeyVaultCredentialTypes.CERTIFICATE: {\r\n                try {\r\n                    const certificateResponse = await this.getCertificateCredential(keyVaultCredential, credential);\r\n                    const secretResponse = await this.getSecretCredential(keyVaultCredential, credential);\r\n\r\n                    return {\r\n                        type: KeyVaultCredentialTypes.CERTIFICATE,\r\n                        value: {\r\n                            thumbprint: certificateResponse.properties.x509Thumbprint.toString(),\r\n                            privateKey: secretResponse.value.split('-----BEGIN CERTIFICATE-----\\n')[0]\r\n                        }\r\n                    } as KeyVaultCredentialResponse;\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n                break;\r\n            }\r\n\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets a certificate credential from Key Vault\r\n     * @param {AppSettings} config \r\n     * @param {DefaultAzureCredential} credential \r\n     * @returns {Promise}\r\n     */\r\n    async getCertificateCredential(keyVaultCredential: KeyVaultCredential, credential: DefaultAzureCredential): Promise<KeyVaultCertificate> {\r\n\r\n        // Initialize secretClient with credentials\r\n        const secretClient = new CertificateClient(keyVaultCredential.keyVaultUrl, credential);\r\n\r\n        try {\r\n            const keyVaultCertificate = await secretClient.getCertificate(keyVaultCredential.credentialName);\r\n            return keyVaultCertificate;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets a secret credential from Key Vault\r\n     * @param {AppSettings} config \r\n     * @param {DefaultAzureCredential} credential \r\n     * @returns {Promise}\r\n     */\r\n    async getSecretCredential(keyVaultCredential: KeyVaultCredential, credential: DefaultAzureCredential): Promise<KeyVaultSecret> {\r\n\r\n        // Initialize secretClient with credentials\r\n        const secretClient = new SecretClient(keyVaultCredential.keyVaultUrl, credential);\r\n\r\n        try {\r\n            const keyVaultSecret = await secretClient.getSecret(keyVaultCredential.credentialName);\r\n            return keyVaultSecret;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return error;\r\n        }\r\n    }\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ICachePlugin } from \"@azure/msal-node\";\r\nimport { IDistributedPersistence } from \"./IDistributedPersistence\";\r\n\r\nexport class DistributedCachePlugin implements ICachePlugin {\r\n\r\n    private static instance: DistributedCachePlugin;\r\n\r\n    private persistenceManager: IDistributedPersistence;\r\n    private persistenceKey: string;\r\n\r\n    private constructor(persistenceManager: IDistributedPersistence, persistenceKey?: string) {\r\n        this.persistenceManager = persistenceManager;\r\n        this.persistenceKey = persistenceKey;\r\n    }\r\n\r\n    static getInstance(persistenceManager: IDistributedPersistence, persistenceKey?: string): DistributedCachePlugin {\r\n        if (!DistributedCachePlugin.instance) {\r\n            DistributedCachePlugin.instance = new DistributedCachePlugin(persistenceManager, persistenceKey);\r\n        }\r\n\r\n        return DistributedCachePlugin.instance;\r\n    }\r\n\r\n    async beforeCacheAccess(cacheContext): Promise<void> {\r\n        return new Promise(async (resolve, reject) => {\r\n            const sessionData = await this.persistenceManager.get(this.persistenceKey);\r\n            if (sessionData) {\r\n                const cacheData = await this.persistenceManager.get(JSON.parse(sessionData).account.homeAccountId);\r\n                cacheContext.tokenCache.deserialize(cacheData);\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    async afterCacheAccess(cacheContext): Promise<void> {\r\n        return new Promise(async (resolve, reject) => {\r\n            if (cacheContext.cacheHasChanged) {\r\n                const kvStore = cacheContext.tokenCache.getKVStore();\r\n                const homeAccountId = Object.values(kvStore)[1][\"homeAccountId\"];\r\n                await this.persistenceManager.set(homeAccountId, cacheContext.tokenCache.serialize());\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    UrlString,\r\n    Constants,\r\n} from \"@azure/msal-common\";\r\n\r\nimport {\r\n    ICachePlugin,\r\n    Configuration\r\n} from \"@azure/msal-node\";\r\n\r\nimport { AppSettings } from \"./AppSettings\";\r\n\r\nimport {\r\n    DEFAULT_LOGGER_OPTIONS\r\n} from \"../utils/Constants\"\r\n\r\nimport { IDistributedPersistence } from \"../cache/IDistributedPersistence\";\r\nimport { DistributedCachePlugin } from \"../cache/DistributedCachePlugin\";\r\n\r\nexport class MsalConfiguration {\r\n\r\n    /**\r\n     * Maps the custom configuration object to configuration\r\n     * object expected by MSAL Node ConfidentialClientApplication class\r\n     * @param {AppSettings} appSettings: configuration object\r\n     * @param {ICachePlugin} cachePlugin: custom cache plugin\r\n     * @param {IDistributedPersistence} distributedPersistence: distributed persistence client\r\n     * @returns {Configuration}\r\n     */\r\n    static getMsalConfiguration(appSettings: AppSettings, persistenceManager?: IDistributedPersistence): Configuration {\r\n        return {\r\n            auth: {\r\n                clientId: appSettings.appCredentials.clientId,\r\n                authority: appSettings.b2cPolicies ?\r\n                    Object.entries(appSettings.b2cPolicies)[0][1][\"authority\"] // the first policy/user-flow is the default authority\r\n                    :\r\n                    appSettings.appCredentials.instance ? `https://${appSettings.appCredentials.instance}/${appSettings.appCredentials.tenantId}` \r\n                    :\r\n                    `https://${Constants.DEFAULT_AUTHORITY_HOST}/${appSettings.appCredentials.tenantId}`,\r\n                ...(appSettings.appCredentials.hasOwnProperty(\"clientSecret\")) && { clientSecret: appSettings.appCredentials.clientSecret },\r\n                ...(appSettings.appCredentials.hasOwnProperty(\"clientCertificate\")) && { clientCertificate: appSettings.appCredentials.clientCertificate },\r\n                knownAuthorities: appSettings.b2cPolicies ?\r\n                    [UrlString.getDomainFromUrl(Object.entries(appSettings.b2cPolicies)[0][1][\"authority\"])] // in B2C scenarios\r\n                    :\r\n                    [],\r\n            },\r\n            cache: {\r\n                cachePlugin: persistenceManager ? DistributedCachePlugin.getInstance(persistenceManager) : null\r\n            },\r\n            system: {\r\n                loggerOptions: appSettings.loggerOptions ? appSettings.loggerOptions : DEFAULT_LOGGER_OPTIONS,\r\n            },\r\n        };\r\n    };\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    AppServiceEnvironmentVariables,\r\n} from \"./Constants\";\r\n\r\nexport class EnvironmentUtils {\r\n    static isProduction(): boolean {\r\n        return process.env.NODE_ENV === 'production';\r\n    }\r\n\r\n    static isDevelopment(): boolean {\r\n        return process.env.NODE_ENV === 'development';\r\n    }\r\n\r\n    static isAppServiceAuthEnabled(): boolean {\r\n        return process.env[AppServiceEnvironmentVariables.WEBSITE_AUTH_ENABLED] === \"True\";\r\n    }\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Configuration } from \"@azure/msal-node\";\r\n\r\nimport { BaseAuthClientBuilder } from \"../BaseAuthClientBuilder\";\r\nimport { MsalWebAppAuthClient } from \"./MsalWebAppAuthClient\";\r\nimport { AppServiceWebAppAuthClient } from \"./AppServiceWebAppAuthClient\";\r\nimport { KeyVaultManager } from \"../../network/KeyVaultManager\";\r\nimport { MsalConfiguration } from \"../../config/MsalConfiguration\";\r\nimport { AppSettings } from \"../../config/AppSettings\";\r\nimport { EnvironmentUtils } from \"../../utils/EnvironmentUtils\";\r\n\r\nexport class WebAppAuthClientBuilder extends BaseAuthClientBuilder {\r\n\r\n    appSettings: AppSettings;\r\n    private msalConfig: Configuration;\r\n\r\n    constructor(appSettings: AppSettings) {\r\n        super(appSettings)\r\n    };\r\n\r\n    build(): MsalWebAppAuthClient | AppServiceWebAppAuthClient {\r\n        // TODO: throw error if key vault credential is being built\r\n        \r\n        this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings, this.persistenceManager);\r\n        \r\n        if (EnvironmentUtils.isAppServiceAuthEnabled()) {\r\n            return new AppServiceWebAppAuthClient(this.appSettings, this.msalConfig);\r\n        } else {\r\n            return new MsalWebAppAuthClient(this.appSettings, this.msalConfig);\r\n        }\r\n    }\r\n\r\n    async buildAsync(): Promise<MsalWebAppAuthClient | AppServiceWebAppAuthClient> {\r\n        try {\r\n            if (this.keyVaultCredential) {\r\n                const keyVaultManager = new KeyVaultManager();\r\n                const credential = await keyVaultManager.getCredentialFromKeyVault(this.keyVaultCredential);\r\n                this.appSettings.appCredentials[credential.type] = credential.value;\r\n            }\r\n\r\n            if (this.persistenceManager) {\r\n                this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings, this.persistenceManager);\r\n            } else {\r\n                this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings);\r\n            }\r\n\r\n            if (EnvironmentUtils.isAppServiceAuthEnabled()) {\r\n                return new AppServiceWebAppAuthClient(this.appSettings, this.msalConfig);\r\n            } else {\r\n                return new MsalWebAppAuthClient(this.appSettings, this.msalConfig);\r\n            }\r\n        } catch (error) {\r\n            throw new Error(error);\r\n        }\r\n    }\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport express, {\r\n    RequestHandler,\r\n    Request,\r\n    Response,\r\n    NextFunction,\r\n    Router\r\n} from \"express\";\r\n\r\nimport {\r\n    AuthenticationResult,\r\n} from \"@azure/msal-common\";\r\n\r\nimport {\r\n    Configuration,\r\n    OnBehalfOfRequest,\r\n} from \"@azure/msal-node\";\r\n\r\nimport { BaseAuthClient } from \"../BaseAuthClient\";\r\n\r\nimport {\r\n    AppSettings,\r\n} from \"../../config/AppSettings\";\r\n\r\nimport {\r\n    InitializationOptions,\r\n    TokenRequestOptions,\r\n} from \"../MiddlewareOptions\";\r\n\r\nimport {\r\n    ErrorMessages,\r\n} from \"../../utils/Constants\";\r\n\r\n/**\r\n * A simple wrapper around MSAL Node ConfidentialClientApplication object.\r\n * It offers a collection of middleware and utility methods that automate\r\n * basic authentication and authorization tasks in RESTful APIs.\r\n */\r\nexport class MsalWebApiAuthClient extends BaseAuthClient {\r\n\r\n    /**\r\n     * @param {AppSettings} appSettings\r\n     * @param {Configuration} msalConfig\r\n     * @constructor\r\n     */\r\n    constructor(appSettings: AppSettings, msalConfig: Configuration) {\r\n        super(appSettings, msalConfig);\r\n    }\r\n\r\n    /**\r\n     * Initialize AuthProvider and set default routes and handlers\r\n     * @param {InitializationOptions} options\r\n     * @returns {Router}\r\n     */\r\n    initialize(options?: InitializationOptions): Router {\r\n        const appRouter = express.Router();\r\n\r\n        appRouter.use((req: Request, res: Response, next: NextFunction) => {\r\n            // TODO: add defaults\r\n            next();\r\n        });\r\n\r\n        return appRouter;\r\n    }\r\n\r\n    /**\r\n     * Middleware that gets tokens via OBO flow. Used in web API scenarios\r\n     * @param {TokenRequestOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    getTokenOnBehalf(options: TokenRequestOptions): RequestHandler {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n            const authHeader: string = req.headers.authorization;\r\n\r\n            // get scopes for token request\r\n            const scopes: string[] = options.resource.scopes;\r\n\r\n            // get the raw access token from authZ header\r\n            const rawAccessToken: string = authHeader.split(\" \")[1];\r\n            req.oboAssertion = rawAccessToken;\r\n\r\n            const oboRequest: OnBehalfOfRequest = {\r\n                oboAssertion: rawAccessToken,\r\n                scopes: scopes,\r\n            }\r\n\r\n            try {\r\n                // TODO: check cache first\r\n                const tokenResponse: AuthenticationResult = await this.msalClient.acquireTokenOnBehalfOf(oboRequest);\r\n                req.oboToken = tokenResponse.accessToken;\r\n                next();\r\n            } catch (error) {\r\n                next(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Receives access token in req authorization header\r\n     * @returns {RequestHandler}\r\n     */\r\n    isAuthorized(): RequestHandler {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n            if (req.headers.authorization) {\r\n                next();\r\n            } else {\r\n                this.logger.error(ErrorMessages.TOKEN_NOT_FOUND);\r\n                res.redirect(this.appSettings.authRoutes.unauthorized);\r\n            }\r\n        }\r\n    };\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Configuration } from \"@azure/msal-node\";\r\n\r\nimport { BaseAuthClientBuilder } from \"../BaseAuthClientBuilder\";\r\nimport { MsalWebApiAuthClient } from \"./MsalWebApiAuthClient\";\r\nimport { KeyVaultManager } from \"../../network/KeyVaultManager\";\r\nimport { MsalConfiguration } from \"../../config/MsalConfiguration\";\r\nimport { AppSettings } from \"../../config/AppSettings\";\r\n\r\nexport class WebApiAuthClientBuilder extends BaseAuthClientBuilder {\r\n\r\n    appSettings: AppSettings;\r\n    private msalConfig: Configuration;\r\n\r\n    constructor(appSettings: AppSettings) {\r\n        super(appSettings)\r\n    };\r\n\r\n    /**\r\n     * Synchronously builds the MSAL middleware with the provided configuration.\r\n     * @returns {MsalWebApiAuthClient}\r\n     */\r\n    build(): MsalWebApiAuthClient {\r\n        // TODO: throw error if key vault credential is being built\r\n        this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings, this.persistenceManager);\r\n        return new MsalWebApiAuthClient(this.appSettings, this.msalConfig);\r\n    }\r\n\r\n    /**\r\n     * Asynchronously builds the MSAL middleware with the provided configuration.\r\n     * @returns {Promise}\r\n     */\r\n    async buildAsync(): Promise<MsalWebApiAuthClient> {\r\n        try {\r\n            if (this.keyVaultCredential) {\r\n                const keyVaultManager = new KeyVaultManager();\r\n                const credential = await keyVaultManager.getCredentialFromKeyVault(this.keyVaultCredential);\r\n                this.appSettings.appCredentials[credential.type] = credential.value;\r\n            }\r\n\r\n            if (this.persistenceManager) {\r\n                this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings, this.persistenceManager);\r\n            } else {\r\n                this.msalConfig = MsalConfiguration.getMsalConfiguration(this.appSettings);\r\n            }\r\n\r\n            return new MsalWebApiAuthClient(this.appSettings, this.msalConfig);\r\n        } catch (error) {\r\n            throw new Error(error);\r\n        }\r\n    }\r\n}"],"names":["undefined","AppStages","AADAuthorityConstants","COMMON","ORGANIZATIONS","CONSUMERS","KeyVaultCredentialTypes","OIDC_SCOPES","OIDC_DEFAULT_SCOPES","AppServiceAuthenticationHeaders","APP_SERVICE_AUTHENTICATION_HEADER","APP_SERVICE_ACCESS_TOKEN_HEADER","APP_SERVICE_ID_TOKEN_HEADER","APP_SERVICE_REFRESH_TOKEN_HEADER","APP_SERVICE_ACCESS_TOKEN_EXPIRES_HEADER","APP_SERVICE_USER_OID_HEADER","APP_SERVICE_USER_UPN_HEADER","APP_SERVICE_IDP_X_HEADER","AppServiceAuthenticationEndpoints","ID_TOKEN_ENDPOINT","POST_LOGOUT_DEFAULT_ENDPOINT","POST_LOGIN_DEFAULT_ENDPOINT","AAD_SIGN_IN_ENDPOINT","AAD_SIGN_OUT_ENDPOINT","TOKEN_REFRESH_ENDPOINT","AAD_REDIRECT_ENDPOINT","AppServiceAuthenticationQueryParameters","POST_LOGIN_REDIRECT_QUERY_PARAM","POST_LOGOUT_REDIRECT_QUERY_PARAM","AppServiceEnvironmentVariables","WEBSITE_AUTH_ENABLED","WEBSITE_AUTH_ALLOWED_AUDIENCES","WEBSITE_AUTH_DEFAULT_PROVIDER","WEBSITE_AUTH_TOKEN_STORE","WEBSITE_AUTH_LOGIN_PARAMS","WEBSITE_AUTH_PRESERVE_URL_FRAGMENT","WEBSITE_AUTH_OPENID_ISSUER","WEBSITE_AUTH_CLIENT_ID","WEBSITE_HOSTNAME","WEBSITE_SITE_NAME","WEBSITE_AUTH_REQUIRE_HTTPS","WEBSITE_AUTH_UNAUTHENTICATED_ACTION","WEBSITE_AUTH_API_PREFIX","MICROSOFT_PROVIDER_AUTHENTICATION_SECRET","AccessControlConstants","GROUPS","ROLES","CLAIM_NAMES","CLAIM_SOURCES","PAGINATION_LINK","GRAPH_MEMBERS_ENDPOINT","GRAPH_MEMBER_SCOPES","InfoMessages","APP_SERVICE_AUTH_DETECTED","REQUEST_FOR_RESOURCE","OVERAGE_OCCURRED","ErrorMessages","NOT_PERMITTED","INVALID_TOKEN","CANNOT_DETERMINE_APP_STAGE","CANNOT_VALIDATE_TOKEN","NONCE_MISMATCH","INTERACTION_REQUIRED","TOKEN_ACQUISITION_FAILED","AUTH_CODE_NOT_OBTAINED","TOKEN_NOT_FOUND","TOKEN_NOT_DECODED","TOKEN_NOT_VERIFIED","KEYS_NOT_OBTAINED","STATE_NOT_FOUND","USER_HAS_NO_ROLE","USER_NOT_IN_ROLE","USER_HAS_NO_GROUP","USER_NOT_IN_GROUP","METHOD_NOT_ALLOWED","RULE_NOT_FOUND","SESSION_NOT_FOUND","KEY_VAULT_CONFIG_NOT_FOUND","ConfigurationErrorMessages","NO_CLIENT_ID","INVALID_CLIENT_ID","NO_TENANT_INFO","INVALID_TENANT_INFO","NO_CLIENT_CREDENTIAL","NO_REDIRECT_URI","NO_ERROR_ROUTE","NO_UNAUTHORIZED_ROUTE","DEFAULT_LOGGER_OPTIONS","loggerCallback","logLevel","message","containsPii","console","info","piiLoggingEnabled","LogLevel","Info","ConfigHelper","validateAppSettings","appSettings","StringUtils","isEmpty","appCredentials","clientId","Error","isGuid","tenantId","Object","values","includes","authRoutes","redirect","error","unauthorized","guid","regexGuid","test","getResourceNameFromScopes","scopes","index","protectedResources","ownedResources","findIndex","resource","JSON","stringify","resourceName","keys","getScopesFromResourceEndpoint","resourceEndpoint","find","endpoint","getEffectiveScopes","scopesList","effectiveScopesList","filter","scope","BaseAuthClientBuilder","withKeyVaultCredentials","keyVaultCredential","withCustomCachePlugin","cachePlugin","customCachePlugin","withDistributedTokenCache","persistenceManager","packageName","packageVersion","BaseAuthClient","msalConfig","cryptoProvider","CryptoProvider","logger","Logger","system","loggerOptions","msalClient","ConfidentialClientApplication","getMsalClient","getMsalConfig","getLogger","FetchManager","axios","get","response","data","accessToken","options","headers","Authorization","nextPage","callApiEndpointWithToken","graphResponse","map","v","push","id","handlePagination","UrlUtils","req","url","urlComponents","UrlString","getUrlComponents","Protocol","HostNameAndPort","startsWith","protocol","PathSegments","join","CryptoUtils","algorithm","generateSalt","crypto","toString","createKey","password","salt","encryptData","stringifiedData","key","iv","cipher","encryptedData","update","decryptData","split","encrypted","decipher","Buffer","from","MsalWebAppAuthClient","cryptoUtils","initialize","appRouter","express","Router","getPathFromUrl","handleRedirect","post","use","res","next","session","nonce","createNewGuid","frontChannelLogout","destroy","sendStatus","signIn","state","base64Encode","stage","SIGN_IN","path","postLoginRedirect","params","authority","auth","ensureAbsoluteUrl","getAuthCode","signOut","postLogoutRedirectUri","postLogoutRedirect","logoutUri","query","parse","base64Decode","ACQUIRE_TOKEN","tokenRequest","code","acquireTokenByCode","tokenResponse","isAuthenticated","account","getToken","silentRequest","acquireTokenSilent","InteractionRequiredAuthError","originalUrl","hasAccess","accessMatrix","checkFor","accessRule","hasOwnProperty","idTokenClaims","warning","handleOverage","groups","checkAccessRule","method","roles","authCodeRequest","redirectUri","prompt","getAuthCodeUrl","rule","_claim_names","newIdTokenClaims","userGroups","creds","credType","methods","elem","length","AppServiceWebAppAuthClient","rawIdToken","toLowerCase","AuthToken","extractTokenClaims","tid","homeAccountId","oid","localAccountId","environment","iss","username","preferred_username","name","loginUri","postLoginRedirectUri","process","env","rawAccessToken","accessTokenClaims","scp","effectiveScopes","every","KeyVaultManager","getCredentialFromKeyVault","credential","DefaultAzureCredential","credentialType","SECRET","CERTIFICATE","getSecretCredential","secretResponse","type","value","log","getCertificateCredential","certificateResponse","thumbprint","properties","x509Thumbprint","privateKey","secretClient","CertificateClient","keyVaultUrl","getCertificate","credentialName","keyVaultCertificate","SecretClient","getSecret","keyVaultSecret","DistributedCachePlugin","persistenceKey","getInstance","instance","beforeCacheAccess","cacheContext","Promise","resolve","reject","sessionData","cacheData","tokenCache","deserialize","afterCacheAccess","cacheHasChanged","kvStore","getKVStore","set","serialize","MsalConfiguration","getMsalConfiguration","b2cPolicies","entries","Constants","DEFAULT_AUTHORITY_HOST","clientSecret","clientCertificate","knownAuthorities","getDomainFromUrl","cache","EnvironmentUtils","isProduction","NODE_ENV","isDevelopment","isAppServiceAuthEnabled","WebAppAuthClientBuilder","build","buildAsync","keyVaultManager","MsalWebApiAuthClient","getTokenOnBehalf","authHeader","authorization","oboAssertion","oboRequest","acquireTokenOnBehalfOf","oboToken","isAuthorized","WebApiAuthClientBuilder"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,IAAI,UAAU,OAAO,EAAE;AAElC;AACA,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC;AAC5B,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC,cAAc,CAAC;AACjC,EAAE,IAAIA,WAAS,CAAC;AAChB,EAAE,IAAI,OAAO,GAAG,OAAO,MAAM,KAAK,UAAU,GAAG,MAAM,GAAG,EAAE,CAAC;AAC3D,EAAE,IAAI,cAAc,GAAG,OAAO,CAAC,QAAQ,IAAI,YAAY,CAAC;AACxD,EAAE,IAAI,mBAAmB,GAAG,OAAO,CAAC,aAAa,IAAI,iBAAiB,CAAC;AACvE,EAAE,IAAI,iBAAiB,GAAG,OAAO,CAAC,WAAW,IAAI,eAAe,CAAC;AACjE;AACA,EAAE,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACnC,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;AACpC,MAAM,KAAK,EAAE,KAAK;AAClB,MAAM,UAAU,EAAE,IAAI;AACtB,MAAM,YAAY,EAAE,IAAI;AACxB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;AACpB,GAAG;AACH,EAAE,IAAI;AACN;AACA,IAAI,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACnB,GAAG,CAAC,OAAO,GAAG,EAAE;AAChB,IAAI,MAAM,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACvC,MAAM,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC9B,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,SAAS,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE;AACrD;AACA,IAAI,IAAI,cAAc,GAAG,OAAO,IAAI,OAAO,CAAC,SAAS,YAAY,SAAS,GAAG,OAAO,GAAG,SAAS,CAAC;AACjG,IAAI,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AAC5D,IAAI,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;AACjD;AACA;AACA;AACA,IAAI,SAAS,CAAC,OAAO,GAAG,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACjE;AACA,IAAI,OAAO,SAAS,CAAC;AACrB,GAAG;AACH,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,QAAQ,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;AAClC,IAAI,IAAI;AACR,MAAM,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC;AACxD,KAAK,CAAC,OAAO,GAAG,EAAE;AAClB,MAAM,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AACzC,KAAK;AACL,GAAG;AACH;AACA,EAAE,IAAI,sBAAsB,GAAG,gBAAgB,CAAC;AAChD,EAAE,IAAI,sBAAsB,GAAG,gBAAgB,CAAC;AAChD,EAAE,IAAI,iBAAiB,GAAG,WAAW,CAAC;AACtC,EAAE,IAAI,iBAAiB,GAAG,WAAW,CAAC;AACtC;AACA;AACA;AACA,EAAE,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,SAAS,GAAG,EAAE;AACzB,EAAE,SAAS,iBAAiB,GAAG,EAAE;AACjC,EAAE,SAAS,0BAA0B,GAAG,EAAE;AAC1C;AACA;AACA;AACA,EAAE,IAAI,iBAAiB,GAAG,EAAE,CAAC;AAC7B,EAAE,MAAM,CAAC,iBAAiB,EAAE,cAAc,EAAE,YAAY;AACxD,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC,CAAC;AACL;AACA,EAAE,IAAI,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC;AACvC,EAAE,IAAI,uBAAuB,GAAG,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3E,EAAE,IAAI,uBAAuB;AAC7B,MAAM,uBAAuB,KAAK,EAAE;AACpC,MAAM,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,cAAc,CAAC,EAAE;AAC5D;AACA;AACA,IAAI,iBAAiB,GAAG,uBAAuB,CAAC;AAChD,GAAG;AACH;AACA,EAAE,IAAI,EAAE,GAAG,0BAA0B,CAAC,SAAS;AAC/C,IAAI,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;AAC3D,EAAE,iBAAiB,CAAC,SAAS,GAAG,0BAA0B,CAAC;AAC3D,EAAE,MAAM,CAAC,EAAE,EAAE,aAAa,EAAE,0BAA0B,CAAC,CAAC;AACxD,EAAE,MAAM,CAAC,0BAA0B,EAAE,aAAa,EAAE,iBAAiB,CAAC,CAAC;AACvE,EAAE,iBAAiB,CAAC,WAAW,GAAG,MAAM;AACxC,IAAI,0BAA0B;AAC9B,IAAI,iBAAiB;AACrB,IAAI,mBAAmB;AACvB,GAAG,CAAC;AACJ;AACA;AACA;AACA,EAAE,SAAS,qBAAqB,CAAC,SAAS,EAAE;AAC5C,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,SAAS,MAAM,EAAE;AACzD,MAAM,MAAM,CAAC,SAAS,EAAE,MAAM,EAAE,SAAS,GAAG,EAAE;AAC9C,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACzC,OAAO,CAAC,CAAC;AACT,KAAK,CAAC,CAAC;AACP,GAAG;AACH;AACA,EAAE,OAAO,CAAC,mBAAmB,GAAG,SAAS,MAAM,EAAE;AACjD,IAAI,IAAI,IAAI,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,WAAW,CAAC;AAClE,IAAI,OAAO,IAAI;AACf,QAAQ,IAAI,KAAK,iBAAiB;AAClC;AACA;AACA,QAAQ,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,MAAM,mBAAmB;AAC/D,QAAQ,KAAK,CAAC;AACd,GAAG,CAAC;AACJ;AACA,EAAE,OAAO,CAAC,IAAI,GAAG,SAAS,MAAM,EAAE;AAClC,IAAI,IAAI,MAAM,CAAC,cAAc,EAAE;AAC/B,MAAM,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,0BAA0B,CAAC,CAAC;AAChE,KAAK,MAAM;AACX,MAAM,MAAM,CAAC,SAAS,GAAG,0BAA0B,CAAC;AACpD,MAAM,MAAM,CAAC,MAAM,EAAE,iBAAiB,EAAE,mBAAmB,CAAC,CAAC;AAC7D,KAAK;AACL,IAAI,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AACzC,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,CAAC,KAAK,GAAG,SAAS,GAAG,EAAE;AAChC,IAAI,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;AAC5B,GAAG,CAAC;AACJ;AACA,EAAE,SAAS,aAAa,CAAC,SAAS,EAAE,WAAW,EAAE;AACjD,IAAI,SAAS,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE;AAClD,MAAM,IAAI,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;AAC/D,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACnC,QAAQ,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3B,OAAO,MAAM;AACb,QAAQ,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;AAChC,QAAQ,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AACjC,QAAQ,IAAI,KAAK;AACjB,YAAY,OAAO,KAAK,KAAK,QAAQ;AACrC,YAAY,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;AAC3C,UAAU,OAAO,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,EAAE;AACzE,YAAY,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACnD,WAAW,EAAE,SAAS,GAAG,EAAE;AAC3B,YAAY,MAAM,CAAC,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAClD,WAAW,CAAC,CAAC;AACb,SAAS;AACT;AACA,QAAQ,OAAO,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,SAAS,EAAE;AACnE;AACA;AACA;AACA,UAAU,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC;AACnC,UAAU,OAAO,CAAC,MAAM,CAAC,CAAC;AAC1B,SAAS,EAAE,SAAS,KAAK,EAAE;AAC3B;AACA;AACA,UAAU,OAAO,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACzD,SAAS,CAAC,CAAC;AACX,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,eAAe,CAAC;AACxB;AACA,IAAI,SAAS,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE;AAClC,MAAM,SAAS,0BAA0B,GAAG;AAC5C,QAAQ,OAAO,IAAI,WAAW,CAAC,SAAS,OAAO,EAAE,MAAM,EAAE;AACzD,UAAU,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAC/C,SAAS,CAAC,CAAC;AACX,OAAO;AACP;AACA,MAAM,OAAO,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,eAAe,GAAG,eAAe,CAAC,IAAI;AAC9C,UAAU,0BAA0B;AACpC;AACA;AACA,UAAU,0BAA0B;AACpC,SAAS,GAAG,0BAA0B,EAAE,CAAC;AACzC,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,GAAG;AACH;AACA,EAAE,qBAAqB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACjD,EAAE,MAAM,CAAC,aAAa,CAAC,SAAS,EAAE,mBAAmB,EAAE,YAAY;AACnE,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC,CAAC;AACL,EAAE,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC;AACxC;AACA;AACA;AACA;AACA,EAAE,OAAO,CAAC,KAAK,GAAG,SAAS,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE;AAC7E,IAAI,IAAI,WAAW,KAAK,KAAK,CAAC,EAAE,WAAW,GAAG,OAAO,CAAC;AACtD;AACA,IAAI,IAAI,IAAI,GAAG,IAAI,aAAa;AAChC,MAAM,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,CAAC;AAC/C,MAAM,WAAW;AACjB,KAAK,CAAC;AACN;AACA,IAAI,OAAO,OAAO,CAAC,mBAAmB,CAAC,OAAO,CAAC;AAC/C,QAAQ,IAAI;AACZ,QAAQ,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,MAAM,EAAE;AAC1C,UAAU,OAAO,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;AAC1D,SAAS,CAAC,CAAC;AACX,GAAG,CAAC;AACJ;AACA,EAAE,SAAS,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;AACpD,IAAI,IAAI,KAAK,GAAG,sBAAsB,CAAC;AACvC;AACA,IAAI,OAAO,SAAS,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE;AACxC,MAAM,IAAI,KAAK,KAAK,iBAAiB,EAAE;AACvC,QAAQ,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;AACxD,OAAO;AACP;AACA,MAAM,IAAI,KAAK,KAAK,iBAAiB,EAAE;AACvC,QAAQ,IAAI,MAAM,KAAK,OAAO,EAAE;AAChC,UAAU,MAAM,GAAG,CAAC;AACpB,SAAS;AACT;AACA;AACA;AACA,QAAQ,OAAO,UAAU,EAAE,CAAC;AAC5B,OAAO;AACP;AACA,MAAM,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAC9B,MAAM,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AACxB;AACA,MAAM,OAAO,IAAI,EAAE;AACnB,QAAQ,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACxC,QAAQ,IAAI,QAAQ,EAAE;AACtB,UAAU,IAAI,cAAc,GAAG,mBAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACtE,UAAU,IAAI,cAAc,EAAE;AAC9B,YAAY,IAAI,cAAc,KAAK,gBAAgB,EAAE,SAAS;AAC9D,YAAY,OAAO,cAAc,CAAC;AAClC,WAAW;AACX,SAAS;AACT;AACA,QAAQ,IAAI,OAAO,CAAC,MAAM,KAAK,MAAM,EAAE;AACvC;AACA;AACA,UAAU,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC;AACrD;AACA,SAAS,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,EAAE;AAC/C,UAAU,IAAI,KAAK,KAAK,sBAAsB,EAAE;AAChD,YAAY,KAAK,GAAG,iBAAiB,CAAC;AACtC,YAAY,MAAM,OAAO,CAAC,GAAG,CAAC;AAC9B,WAAW;AACX;AACA,UAAU,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACjD;AACA,SAAS,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,QAAQ,EAAE;AAChD,UAAU,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;AAChD,SAAS;AACT;AACA,QAAQ,KAAK,GAAG,iBAAiB,CAAC;AAClC;AACA,QAAQ,IAAI,MAAM,GAAG,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACtD,QAAQ,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AACtC;AACA;AACA,UAAU,KAAK,GAAG,OAAO,CAAC,IAAI;AAC9B,cAAc,iBAAiB;AAC/B,cAAc,sBAAsB,CAAC;AACrC;AACA,UAAU,IAAI,MAAM,CAAC,GAAG,KAAK,gBAAgB,EAAE;AAC/C,YAAY,SAAS;AACrB,WAAW;AACX;AACA,UAAU,OAAO;AACjB,YAAY,KAAK,EAAE,MAAM,CAAC,GAAG;AAC7B,YAAY,IAAI,EAAE,OAAO,CAAC,IAAI;AAC9B,WAAW,CAAC;AACZ;AACA,SAAS,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AAC5C,UAAU,KAAK,GAAG,iBAAiB,CAAC;AACpC;AACA;AACA,UAAU,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AACnC,UAAU,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AACnC,SAAS;AACT,OAAO;AACP,KAAK,CAAC;AACN,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,mBAAmB,CAAC,QAAQ,EAAE,OAAO,EAAE;AAClD,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACnD,IAAI,IAAI,MAAM,KAAKA,WAAS,EAAE;AAC9B;AACA;AACA,MAAM,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC9B;AACA,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,EAAE;AACtC;AACA,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AACzC;AACA;AACA,UAAU,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;AACpC,UAAU,OAAO,CAAC,GAAG,GAAGA,WAAS,CAAC;AAClC,UAAU,mBAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACjD;AACA,UAAU,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,EAAE;AAC1C;AACA;AACA,YAAY,OAAO,gBAAgB,CAAC;AACpC,WAAW;AACX,SAAS;AACT;AACA,QAAQ,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AACjC,QAAQ,OAAO,CAAC,GAAG,GAAG,IAAI,SAAS;AACnC,UAAU,gDAAgD,CAAC,CAAC;AAC5D,OAAO;AACP;AACA,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;AAClE;AACA,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACjC,MAAM,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AAC/B,MAAM,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AAC/B,MAAM,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC9B,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;AAC1B;AACA,IAAI,IAAI,EAAE,IAAI,EAAE;AAChB,MAAM,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AAC/B,MAAM,OAAO,CAAC,GAAG,GAAG,IAAI,SAAS,CAAC,kCAAkC,CAAC,CAAC;AACtE,MAAM,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC9B,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;AACnB;AACA;AACA,MAAM,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;AAChD;AACA;AACA,MAAM,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,QAAQ,EAAE;AACvC,QAAQ,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAChC,QAAQ,OAAO,CAAC,GAAG,GAAGA,WAAS,CAAC;AAChC,OAAO;AACP;AACA,KAAK,MAAM;AACX;AACA,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK;AACL;AACA;AACA;AACA,IAAI,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC5B,IAAI,OAAO,gBAAgB,CAAC;AAC5B,GAAG;AACH;AACA;AACA;AACA,EAAE,qBAAqB,CAAC,EAAE,CAAC,CAAC;AAC5B;AACA,EAAE,MAAM,CAAC,EAAE,EAAE,iBAAiB,EAAE,WAAW,CAAC,CAAC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,MAAM,CAAC,EAAE,EAAE,cAAc,EAAE,WAAW;AACxC,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC,CAAC;AACL;AACA,EAAE,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE,WAAW;AACpC,IAAI,OAAO,oBAAoB,CAAC;AAChC,GAAG,CAAC,CAAC;AACL;AACA,EAAE,SAAS,YAAY,CAAC,IAAI,EAAE;AAC9B,IAAI,IAAI,KAAK,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;AACpC;AACA,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;AACnB,MAAM,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,KAAK;AACL;AACA,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;AACnB,MAAM,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACjC,MAAM,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,KAAK;AACL;AACA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChC,GAAG;AACH;AACA,EAAE,SAAS,aAAa,CAAC,KAAK,EAAE;AAChC,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,IAAI,EAAE,CAAC;AACxC,IAAI,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;AAC3B,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC;AACtB,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC;AAC9B,GAAG;AACH;AACA,EAAE,SAAS,OAAO,CAAC,WAAW,EAAE;AAChC;AACA;AACA;AACA,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;AAC3C,IAAI,WAAW,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACrB,GAAG;AACH;AACA,EAAE,OAAO,CAAC,IAAI,GAAG,SAAS,MAAM,EAAE;AAClC,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;AAClB,IAAI,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;AAC5B,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrB,KAAK;AACL,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;AACnB;AACA;AACA;AACA,IAAI,OAAO,SAAS,IAAI,GAAG;AAC3B,MAAM,OAAO,IAAI,CAAC,MAAM,EAAE;AAC1B,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAC7B,QAAQ,IAAI,GAAG,IAAI,MAAM,EAAE;AAC3B,UAAU,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;AAC3B,UAAU,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC5B,UAAU,OAAO,IAAI,CAAC;AACtB,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACvB,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK,CAAC;AACN,GAAG,CAAC;AACJ;AACA,EAAE,SAAS,MAAM,CAAC,QAAQ,EAAE;AAC5B,IAAI,IAAI,QAAQ,EAAE;AAClB,MAAM,IAAI,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC;AACpD,MAAM,IAAI,cAAc,EAAE;AAC1B,QAAQ,OAAO,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7C,OAAO;AACP;AACA,MAAM,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE;AAC/C,QAAQ,OAAO,QAAQ,CAAC;AACxB,OAAO;AACP;AACA,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACnC,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,SAAS,IAAI,GAAG;AAC3C,UAAU,OAAO,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE;AACxC,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE;AAC1C,cAAc,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AACvC,cAAc,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAChC,cAAc,OAAO,IAAI,CAAC;AAC1B,aAAa;AACb,WAAW;AACX;AACA,UAAU,IAAI,CAAC,KAAK,GAAGA,WAAS,CAAC;AACjC,UAAU,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAC3B;AACA,UAAU,OAAO,IAAI,CAAC;AACtB,SAAS,CAAC;AACV;AACA,QAAQ,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAChC,OAAO;AACP,KAAK;AACL;AACA;AACA,IAAI,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;AAChC,GAAG;AACH,EAAE,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAC1B;AACA,EAAE,SAAS,UAAU,GAAG;AACxB,IAAI,OAAO,EAAE,KAAK,EAAEA,WAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;AAC5C,GAAG;AACH;AACA,EAAE,OAAO,CAAC,SAAS,GAAG;AACtB,IAAI,WAAW,EAAE,OAAO;AACxB;AACA,IAAI,KAAK,EAAE,SAAS,aAAa,EAAE;AACnC,MAAM,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACpB,MAAM,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACpB;AACA;AACA,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAGA,WAAS,CAAC;AACzC,MAAM,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AACxB,MAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC3B;AACA,MAAM,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC3B,MAAM,IAAI,CAAC,GAAG,GAAGA,WAAS,CAAC;AAC3B;AACA,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC7C;AACA,MAAM,IAAI,CAAC,aAAa,EAAE;AAC1B,QAAQ,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;AAC/B;AACA,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;AACpC,cAAc,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;AACrC,cAAc,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;AACtC,YAAY,IAAI,CAAC,IAAI,CAAC,GAAGA,WAAS,CAAC;AACnC,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,EAAE,WAAW;AACrB,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACvB;AACA,MAAM,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACzC,MAAM,IAAI,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;AAC5C,MAAM,IAAI,UAAU,CAAC,IAAI,KAAK,OAAO,EAAE;AACvC,QAAQ,MAAM,UAAU,CAAC,GAAG,CAAC;AAC7B,OAAO;AACP;AACA,MAAM,OAAO,IAAI,CAAC,IAAI,CAAC;AACvB,KAAK;AACL;AACA,IAAI,iBAAiB,EAAE,SAAS,SAAS,EAAE;AAC3C,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE;AACrB,QAAQ,MAAM,SAAS,CAAC;AACxB,OAAO;AACP;AACA,MAAM,IAAI,OAAO,GAAG,IAAI,CAAC;AACzB,MAAM,SAAS,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE;AACnC,QAAQ,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC;AAC9B,QAAQ,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC;AAC/B,QAAQ,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC;AAC3B;AACA,QAAQ,IAAI,MAAM,EAAE;AACpB;AACA;AACA,UAAU,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAClC,UAAU,OAAO,CAAC,GAAG,GAAGA,WAAS,CAAC;AAClC,SAAS;AACT;AACA,QAAQ,OAAO,CAAC,EAAE,MAAM,CAAC;AACzB,OAAO;AACP;AACA,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;AACtC;AACA,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,MAAM,EAAE;AACrC;AACA;AACA;AACA,UAAU,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;AAC/B,SAAS;AACT;AACA,QAAQ,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE;AACvC,UAAU,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;AACxD,UAAU,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;AAC5D;AACA,UAAU,IAAI,QAAQ,IAAI,UAAU,EAAE;AACtC,YAAY,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE;AAC5C,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAClD,aAAa,MAAM,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE;AACrD,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAC9C,aAAa;AACb;AACA,WAAW,MAAM,IAAI,QAAQ,EAAE;AAC/B,YAAY,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE;AAC5C,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAClD,aAAa;AACb;AACA,WAAW,MAAM,IAAI,UAAU,EAAE;AACjC,YAAY,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE;AAC9C,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAC9C,aAAa;AACb;AACA,WAAW,MAAM;AACjB,YAAY,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;AACtE,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,MAAM,EAAE,SAAS,IAAI,EAAE,GAAG,EAAE;AAChC,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI;AACrC,YAAY,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC;AAC5C,YAAY,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE;AAC1C,UAAU,IAAI,YAAY,GAAG,KAAK,CAAC;AACnC,UAAU,MAAM;AAChB,SAAS;AACT,OAAO;AACP;AACA,MAAM,IAAI,YAAY;AACtB,WAAW,IAAI,KAAK,OAAO;AAC3B,WAAW,IAAI,KAAK,UAAU,CAAC;AAC/B,UAAU,YAAY,CAAC,MAAM,IAAI,GAAG;AACpC,UAAU,GAAG,IAAI,YAAY,CAAC,UAAU,EAAE;AAC1C;AACA;AACA,QAAQ,YAAY,GAAG,IAAI,CAAC;AAC5B,OAAO;AACP;AACA,MAAM,IAAI,MAAM,GAAG,YAAY,GAAG,YAAY,CAAC,UAAU,GAAG,EAAE,CAAC;AAC/D,MAAM,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,MAAM,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;AACvB;AACA,MAAM,IAAI,YAAY,EAAE;AACxB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC;AAC5C,QAAQ,OAAO,gBAAgB,CAAC;AAChC,OAAO;AACP;AACA,MAAM,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnC,KAAK;AACL;AACA,IAAI,QAAQ,EAAE,SAAS,MAAM,EAAE,QAAQ,EAAE;AACzC,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACnC,QAAQ,MAAM,MAAM,CAAC,GAAG,CAAC;AACzB,OAAO;AACP;AACA,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO;AACjC,UAAU,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;AACtC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;AAC/B,OAAO,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC3C,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AAC1C,QAAQ,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B,QAAQ,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC1B,OAAO,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,IAAI,QAAQ,EAAE;AACvD,QAAQ,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;AAC7B,OAAO;AACP;AACA,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,MAAM,EAAE,SAAS,UAAU,EAAE;AACjC,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,KAAK,CAAC,UAAU,KAAK,UAAU,EAAE;AAC7C,UAAU,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC1D,UAAU,aAAa,CAAC,KAAK,CAAC,CAAC;AAC/B,UAAU,OAAO,gBAAgB,CAAC;AAClC,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,OAAO,EAAE,SAAS,MAAM,EAAE;AAC9B,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,MAAM,EAAE;AACrC,UAAU,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;AACxC,UAAU,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACvC,YAAY,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;AACpC,YAAY,aAAa,CAAC,KAAK,CAAC,CAAC;AACjC,WAAW;AACX,UAAU,OAAO,MAAM,CAAC;AACxB,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,MAAM,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;AAC/C,KAAK;AACL;AACA,IAAI,aAAa,EAAE,SAAS,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE;AAC3D,MAAM,IAAI,CAAC,QAAQ,GAAG;AACtB,QAAQ,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC;AAClC,QAAQ,UAAU,EAAE,UAAU;AAC9B,QAAQ,OAAO,EAAE,OAAO;AACxB,OAAO,CAAC;AACR;AACA,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE;AAClC;AACA;AACA,QAAQ,IAAI,CAAC,GAAG,GAAGA,WAAS,CAAC;AAC7B,OAAO;AACP;AACA,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL,GAAG,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,OAAO,CAAC;AACjB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,GAA+B,MAAM,CAAC,OAAO,CAAK;AAClD,CAAC,CAAC,CAAC;AACH;AACA,IAAI;AACJ,EAAE,kBAAkB,GAAG,OAAO,CAAC;AAC/B,CAAC,CAAC,OAAO,oBAAoB,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;AACtC,IAAI,UAAU,CAAC,kBAAkB,GAAG,OAAO,CAAC;AAC5C,GAAG,MAAM;AACT,IAAI,QAAQ,CAAC,GAAG,EAAE,wBAAwB,CAAC,CAAC,OAAO,CAAC,CAAC;AACrD,GAAG;AACH;;;ACjvBA;;;;AAKA,AAMA;;;;;AAIA,AAAA,IAAYC,SAAZ;;AAAA,WAAYA;AACRA,EAAAA,oBAAA,YAAA;AACAA,EAAAA,qBAAA,aAAA;AACAA,EAAAA,0BAAA,kBAAA;AACH,CAJD,EAAYA,SAAS,KAATA,SAAS,KAAA,CAArB;AAMA;;;;AAGA,AAAO,IAAMC,qBAAqB,GAAG;AACjCC,EAAAA,MAAM,EAAE,QADyB;AAEjCC,EAAAA,aAAa,EAAE,eAFkB;AAGjCC,EAAAA,SAAS,EAAE;AAHsB,CAA9B;AAMP;;;;AAGA,AAAA,IAAYC,uBAAZ;;AAAA,WAAYA;AACRA,EAAAA,iCAAA,iBAAA;AACAA,EAAAA,sCAAA,sBAAA;AACH,CAHD,EAAYA,uBAAuB,KAAvBA,uBAAuB,KAAA,CAAnC;;AAKA,AAAO,IAAMC,WAAW,0BACjBC,mBADiB,GAEpB,OAFoB,EAAjB;AAKP;;;;AAGA,AAAO,IAAMC,+BAA+B,GAAG;AAC3CC,EAAAA,iCAAiC,EAAE,mCADQ;AAE3CC,EAAAA,+BAA+B,EAAE,6BAFU;AAG3CC,EAAAA,2BAA2B,EAAE,yBAHc;AAI3CC,EAAAA,gCAAgC,EAAE,8BAJS;AAK3CC,EAAAA,uCAAuC,EAAE,2BALE;AAM3CC,EAAAA,2BAA2B,EAAE,0BANc;AAO3CC,EAAAA,2BAA2B,EAAE,4BAPc;AAQ3CC,EAAAA,wBAAwB,EAAE;AARiB,CAAxC;AAWP;;;;AAGA,AAAO,IAAMC,iCAAiC,GAAG;AAC7CC,EAAAA,iBAAiB,EAAE,WAD0B;AAE7CC,EAAAA,4BAA4B,EAAE,oBAFe;AAG7CC,EAAAA,2BAA2B,EAAE,mBAHgB;AAI7CC,EAAAA,oBAAoB,EAAE,kBAJuB;AAK7CC,EAAAA,qBAAqB,EAAE,eALsB;AAM7CC,EAAAA,sBAAsB,EAAE,gBANqB;AAO7CC,EAAAA,qBAAqB,EAAE;AAPsB,CAA1C;AAUP;;;;AAGA,AAAO,IAAMC,uCAAuC,GAAG;AACnDC,EAAAA,+BAA+B,EAAE,2BADkB;AAEnDC,EAAAA,gCAAgC,EAAE;AAFiB,CAAhD;AAKP;;;;AAGA,AAAO,IAAMC,8BAA8B,GAAG;AAC1CC,EAAAA,oBAAoB,EAAE,sBADoB;AAE1CC,EAAAA,8BAA8B,EAAE,gCAFU;AAG1CC,EAAAA,6BAA6B,EAAE,+BAHW;AAI1CC,EAAAA,wBAAwB,EAAE,0BAJgB;AAK1CC,EAAAA,yBAAyB,EAAE,2BALe;AAM1CC,EAAAA,kCAAkC,EAAE,oCANM;AAO1CC,EAAAA,0BAA0B,EAAE,4BAPc;AAQ1CC,EAAAA,sBAAsB,EAAE,wBARkB;AAS1CC,EAAAA,gBAAgB,EAAE,kBATwB;AAU1CC,EAAAA,iBAAiB,EAAE,mBAVuB;AAW1CC,EAAAA,0BAA0B,EAAE,4BAXc;AAY1CC,EAAAA,mCAAmC,EAAE,qCAZK;AAa1CC,EAAAA,uBAAuB,EAAE,yBAbiB;AAc1CC,EAAAA,wCAAwC,EAAE;AAdA,CAAvC;AAiBP;;;;AAGA,AAAO,IAAMC,sBAAsB,GAAG;AAClCC,EAAAA,MAAM,EAAE,QAD0B;AAElCC,EAAAA,KAAK,EAAE,OAF2B;AAGlCC,EAAAA,WAAW,EAAE,aAHqB;AAIlCC,EAAAA,aAAa,EAAE,gBAJmB;AAKlCC,EAAAA,eAAe,EAAE,iBALiB;AAMlCC,EAAAA,sBAAsB,EAAE,8CANU;AAOlCC,EAAAA,mBAAmB,EAAE;AAPa,CAA/B;AAUP;;;;AAGA,AAAO,IAAMC,YAAY,GAAG;AACxBC,EAAAA,yBAAyB,EAAE,qCADH;AAExBC,EAAAA,oBAAoB,EAAE,yBAFE;AAGxBC,EAAAA,gBAAgB,EAAE;AAHM,CAArB;AAMP;;;;AAGA,AAAO,IAAMC,aAAa,GAAG;AACzBC,EAAAA,aAAa,EAAE,eADU;AAEzBC,EAAAA,aAAa,EAAE,eAFU;AAGzBC,EAAAA,0BAA0B,EAAE,oCAHH;AAIzBC,EAAAA,qBAAqB,EAAE,uBAJE;AAKzBC,EAAAA,cAAc,EAAE,sBALS;AAMzBC,EAAAA,oBAAoB,EAAE,sBANG;AAOzBC,EAAAA,wBAAwB,EAAE,0BAPD;AAQzBC,EAAAA,sBAAsB,EAAE,uCARC;AASzBC,EAAAA,eAAe,EAAE,gBATQ;AAUzBC,EAAAA,iBAAiB,EAAE,yBAVM;AAWzBC,EAAAA,kBAAkB,EAAE,0BAXK;AAYzBC,EAAAA,iBAAiB,EAAE,iCAZM;AAazBC,EAAAA,eAAe,EAAE,iBAbQ;AAczBC,EAAAA,gBAAgB,EAAE,8BAdO;AAezBC,EAAAA,gBAAgB,EAAE,8BAfO;AAgBzBC,EAAAA,iBAAiB,EAAE,+BAhBM;AAiBzBC,EAAAA,iBAAiB,EAAE,+BAjBM;AAkBzBC,EAAAA,kBAAkB,EAAE,mCAlBK;AAmBzBC,EAAAA,cAAc,EAAE,8BAnBS;AAoBzBC,EAAAA,iBAAiB,EAAE,mCApBM;AAqBzBC,EAAAA,0BAA0B,EAAE;AArBH,CAAtB;AAwBP;;;;AAGA,AAAO,IAAMC,0BAA0B,GAAG;AACtCC,EAAAA,YAAY,EAAE,uBADwB;AAEtCC,EAAAA,iBAAiB,EAAE,mBAFmB;AAGtCC,EAAAA,cAAc,EAAE,0BAHsB;AAItCC,EAAAA,mBAAmB,EAAE,sBAJiB;AAKtCC,EAAAA,oBAAoB,EAAE,gCALgB;AAMtCC,EAAAA,eAAe,EAAE,2BANqB;AAOtCC,EAAAA,cAAc,EAAE,0BAPsB;AAQtCC,EAAAA,qBAAqB,EAAE;AARe,CAAnC;AAWP,AAeO,IAAMC,sBAAsB,GAAkB;AACjDC,EAAAA,cAAc,EAAE,wBAACC,QAAD,EAAWC,OAAX,EAAoBC,WAApB;AACZ,QAAIA,WAAJ,EAAiB;AACb;AACH;;AACDC,IAAAA,OAAO,CAACC,IAAR,CAAaH,OAAb;AACH,GANgD;AAOjDI,EAAAA,iBAAiB,EAAE,KAP8B;AAQjDL,EAAAA,QAAQ,EAAEM,QAAQ,CAACC;AAR8B,CAA9C;;ICtKMC,YAAb;AAAA;;AAEI;;;;;AAFJ,eAOWC,mBAPX,GAOI,6BAA2BC,WAA3B;AACI,QAAIC,WAAW,CAACC,OAAZ,CAAoBF,WAAW,CAACG,cAAZ,CAA2BC,QAA/C,CAAJ,EAA8D;AAC1D,YAAM,IAAIC,KAAJ,CAAU1B,0BAA0B,CAACC,YAArC,CAAN;AACH,KAFD,MAEO,IAAI,CAACkB,YAAY,CAACQ,MAAb,CAAoBN,WAAW,CAACG,cAAZ,CAA2BC,QAA/C,CAAL,EAA+D;AAClE,YAAM,IAAIC,KAAJ,CAAU1B,0BAA0B,CAACE,iBAArC,CAAN;AACH;;AAED,QAAIoB,WAAW,CAACC,OAAZ,CAAoBF,WAAW,CAACG,cAAZ,CAA2BI,QAA/C,CAAJ,EAA8D;AAC1D,YAAM,IAAIF,KAAJ,CAAU1B,0BAA0B,CAACG,cAArC,CAAN;AACH,KAFD,MAEO,IAAI,CAACgB,YAAY,CAACQ,MAAb,CAAoBN,WAAW,CAACG,cAAZ,CAA2BI,QAA/C,CAAD,IAA6D,CAACC,MAAM,CAACC,MAAP,CAAc1G,qBAAd,EAAqC2G,QAArC,CAA8CV,WAAW,CAACG,cAAZ,CAA2BI,QAAzE,CAAlE,EAAsJ;AACzJ,YAAM,IAAIF,KAAJ,CAAU1B,0BAA0B,CAACI,mBAArC,CAAN;AACH;;AAED,QAAIkB,WAAW,CAACC,OAAZ,CAAoBF,WAAW,CAACW,UAAZ,CAAuBC,QAA3C,CAAJ,EAA0D;AACtD,YAAM,IAAIP,KAAJ,CAAU1B,0BAA0B,CAACM,eAArC,CAAN;AACH;;AAED,QAAIgB,WAAW,CAACC,OAAZ,CAAoBF,WAAW,CAACW,UAAZ,CAAuBE,KAA3C,CAAJ,EAAuD;AACnD,YAAM,IAAIR,KAAJ,CAAU1B,0BAA0B,CAACO,cAArC,CAAN;AACH;;AAED,QAAIe,WAAW,CAACC,OAAZ,CAAoBF,WAAW,CAACW,UAAZ,CAAuBG,YAA3C,CAAJ,EAA8D;AAC1D,YAAM,IAAIT,KAAJ,CAAU1B,0BAA0B,CAACQ,qBAArC,CAAN;AACH;AACJ,GA/BL;;AAiCI;;;;;AAjCJ,eAsCWmB,MAtCX,GAsCI,gBAAcS,IAAd;AACI,QAAMC,SAAS,GAAG,4EAAlB;AACA,WAAOA,SAAS,CAACC,IAAV,CAAeF,IAAf,CAAP;AACH;AAED;;;;;;AA3CJ;;AAAA,eAiDWG,yBAjDX,GAiDI,mCAAiCC,MAAjC,EAAmDnB,WAAnD;AACI,QAAMoB,KAAK,GAAGZ,MAAM,CAACC,MAAP,cAAmBT,WAAW,CAACqB,kBAA/B,EAAsDrB,WAAW,CAACsB,cAAlE,GACTC,SADS,CACC,UAACC,QAAD;AAAA,aAAwBC,IAAI,CAACC,SAAL,CAAeF,QAAQ,CAACL,MAAxB,MAAoCM,IAAI,CAACC,SAAL,CAAeP,MAAf,CAA5D;AAAA,KADD,CAAd;AAGA,QAAMQ,YAAY,GAAGnB,MAAM,CAACoB,IAAP,cAAiB5B,WAAW,CAACqB,kBAA7B,EAAoDrB,WAAW,CAACsB,cAAhE,GAAkFF,KAAlF,CAArB;AAEA,WAAOO,YAAP;AACH,GAxDL;;AA0DI;;;;;;AA1DJ,eAgEWE,6BAhEX,GAgEI,uCAAqCC,gBAArC,EAA+D9B,WAA/D;AACI,QAAMmB,MAAM,GAAGX,MAAM,CAACC,MAAP,cAAmBT,WAAW,CAACqB,kBAA/B,EAAsDrB,WAAW,CAACsB,cAAlE,GACVS,IADU,CACL,UAACP,QAAD;AAAA,aAAwBA,QAAQ,CAACQ,QAAT,KAAsBF,gBAA9C;AAAA,KADK,EAC2DX,MAD1E;AAGA,WAAOA,MAAP;AACH,GArEL;;AAAA,eAuEWc,kBAvEX,GAuEI,4BAA0BC,UAA1B;AACI,QAAMC,mBAAmB,GAAGD,UAAU,CAACE,MAAX,CAAkB,UAAAC,KAAK;AAAA,aAAI,CAACjI,WAAW,CAACsG,QAAZ,CAAqB2B,KAArB,CAAL;AAAA,KAAvB,CAA5B;AACA,WAAOF,mBAAP;AACH,GA1EL;;AAAA;AAAA;;ACVA;;;;AAQA,IAGsBG,qBAAtB;AAOI,iCAAsBtC,WAAtB;AACIF,IAAAA,YAAY,CAACC,mBAAb,CAAiCC,WAAjC;AACA,SAAKA,WAAL,GAAmBA,WAAnB;AACH;;AAVL;;AAAA,SAYIuC,uBAZJ,GAYI,iCAAwBC,kBAAxB;AACI,SAAKA,kBAAL,GAA0BA,kBAA1B;AACA,WAAO,IAAP;AACH,GAfL;;AAAA,SAiBIC,qBAjBJ,GAiBI,+BAAsBC,WAAtB;AACI,SAAKC,iBAAL,GAAyBD,WAAzB;AACA,WAAO,IAAP;AACH,GApBL;;AAAA,SAsBIE,yBAtBJ,GAsBI,mCAA0BC,kBAA1B;AACI,SAAKA,kBAAL,GAA0BA,kBAA1B;AACA,WAAO,IAAP;AACH,GAzBL;;AAAA;AAAA;;ACXO,IAAMC,WAAW,GAAG,2CAApB;AACP,IAAaC,cAAc,GAAG,MAAvB;;ACDP;;;;AAKA,IAesBC,cAAtB;AAQI,0BAAsBhD,WAAtB,EAAgDiD,UAAhD;AACI,SAAKjD,WAAL,GAAmBA,WAAnB;AACA,SAAKiD,UAAL,GAAkBA,UAAlB;AACA,SAAKC,cAAL,GAAsB,IAAIC,cAAJ,EAAtB;AACA,SAAKC,MAAL,GAAc,IAAIC,MAAJ,CAAW,KAAKJ,UAAL,CAAgBK,MAAhB,CAAuBC,aAAlC,EAAiDT,WAAjD,EAA8DC,cAA9D,CAAd;AACA,SAAKS,UAAL,GAAkB,IAAIC,6BAAJ,CAAkC,KAAKR,UAAvC,CAAlB;AACH;;AAdL;;AAAA,SAgBIS,aAhBJ,GAgBI;AACI,WAAO,KAAKF,UAAZ;AACH,GAlBL;;AAAA,SAoBIG,aApBJ,GAoBI;AACI,WAAO,KAAKV,UAAZ;AACH,GAtBL;;AAAA,SAwBIW,SAxBJ,GAwBI;AACI,WAAO,KAAKR,MAAZ;AACH,GA1BL;;AAAA;AAAA;;ICPaS,YAAb;AAEI;;;;;;AAKOA,4BAAA;AAAA,yEAAkB,iBAAO7B,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEqB8B,KAAK,CAACC,GAAN,CAAU/B,QAAV,CAFrB;;AAAA;AAEXgC,YAAAA,QAFW;AAAA,6CAGVA,QAAQ,CAACC,IAHC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AASP;;;;;;;;;AAOOJ,qCAAA;AAAA,0EAA2B,kBAAO7B,QAAP,EAAyBkC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAE1BjE,WAAW,CAACC,OAAZ,CAAoBgE,WAApB,CAF0B;AAAA;AAAA;AAAA;;AAAA,kBAGpB,IAAI7D,KAAJ,CAAUhD,aAAa,CAACS,eAAxB,CAHoB;;AAAA;AAMxBqG,YAAAA,OANwB,GAMM;AAChCC,cAAAA,OAAO,EAAE;AACLC,gBAAAA,aAAa,cAAYH;AADpB;AADuB,aANN;AAAA;AAAA;AAAA,mBAaYJ,KAAK,CAACC,GAAN,CAAU/B,QAAV,EAAoBmC,OAApB,CAbZ;;AAAA;AAapBH,YAAAA,QAboB;AAAA,8CAcnBA,QAAQ,CAACC,IAdU;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;AAoBP;;;;;;;;;AAOOJ,6BAAA;AAAA,0EAAmB,kBAAOK,WAAP,EAA4BI,QAA5B,EAA8CL,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA8CA,IAA9C;AAA8CA,cAAAA,IAA9C,GAA+D,EAA/D;AAAA;;AAAA;AAAA;AAAA,mBAGUJ,YAAY,CAACU,wBAAb,CAAsCD,QAAtC,EAAgDJ,WAAhD,CAHV;;AAAA;AAGZM,YAAAA,aAHY;AAIlBA,YAAAA,aAAa,CAAC,OAAD,CAAb,CAAuBC,GAAvB,CAA2B,UAACC,CAAD;AAAA,qBAAOT,IAAI,CAACU,IAAL,CAAUD,CAAC,CAACE,EAAZ,CAAP;AAAA,aAA3B;;AAJkB,iBAMdJ,aAAa,CAAC/H,sBAAsB,CAACK,eAAxB,CANC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAOD+G,YAAY,CAACgB,gBAAb,CAA8BX,WAA9B,EAA2CM,aAAa,CAAC/H,sBAAsB,CAACK,eAAxB,CAAxD,EAAkGmH,IAAlG,CAPC;;AAAA;AAAA;;AAAA;AAAA,8CASPA,IATO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;;AC/DX;;;;AAMA,IAEaa,QAAb;AACI;;;;;;;AAMOA,0BAAA,GAAoB,UAACC,GAAD,EAAeC,GAAf;AACvB,MAAMC,aAAa,GAAS,IAAIC,SAAJ,CAAcF,GAAd,EAAmBG,gBAAnB,EAA5B;;AAEA,MAAI,CAACF,aAAa,CAACG,QAAnB,EAA6B;AACzB,QAAI,CAACH,aAAa,CAACI,eAAf,IAAkC,CAACL,GAAG,CAACM,UAAJ,CAAe,KAAf,CAAvC,EAA8D;AAC1D,UAAI,CAACN,GAAG,CAACM,UAAJ,CAAe,GAAf,CAAL,EAA0B;AACtB,eAAOP,GAAG,CAACQ,QAAJ,GAAe,KAAf,GAAuBR,GAAG,CAAChB,GAAJ,CAAQ,MAAR,CAAvB,GAAyC,GAAzC,GAA+CiB,GAAtD;AACH;;AACD,aAAOD,GAAG,CAACQ,QAAJ,GAAe,KAAf,GAAuBR,GAAG,CAAChB,GAAJ,CAAQ,MAAR,CAAvB,GAAyCiB,GAAhD;AACH;;AACD,WAAOD,GAAG,CAACQ,QAAJ,GAAe,KAAf,GAAuBP,GAA9B;AACH,GARD,MAQO;AACH,WAAOA,GAAP;AACH;AACJ,CAdM;AAgBP;;;;;;;AAKOF,uBAAA,GAAiB,UAACE,GAAD;AACpB,MAAMC,aAAa,GAAS,IAAIC,SAAJ,CAAcF,GAAd,EAAmBG,gBAAnB,EAA5B;AACA,eAAWF,aAAa,CAACO,YAAd,CAA2BC,IAA3B,CAAgC,GAAhC,CAAX;AACH,CAHM;;ACpCX;;;;AAMA,IAIaC,WAAb;AAII,uBAAYC,SAAZ;QAAYA;AAAAA,MAAAA,YAAoB;;;AAC5B,SAAKA,SAAL,GAAiBA,SAAjB;AACH;;AANL;;AAAA,SAQIC,YARJ,GAQI;AACI,WAAOC,WAAA,CAAmB,EAAnB,EAAuBC,QAAvB,CAAgC,KAAhC,CAAP;AACH,GAVL;;AAAA,SAYIC,SAZJ,GAYI,mBAAUC,QAAV,EAAoBC,IAApB;AACI,WAAOJ,UAAA,CAAkBG,QAAlB,EAA4BC,IAA5B,EAAkC,EAAlC,CAAP;AACH,GAdL;;AAAA,SAgBIC,WAhBJ,GAgBI,qBAAYC,eAAZ,EAA6BC,GAA7B;AACI,QAAMC,EAAE,GAAGR,WAAA,CAAmB,EAAnB,CAAX;AACA,QAAMS,MAAM,GAAGT,cAAA,CAAsB,KAAKF,SAA3B,EAAsCS,GAAtC,EAA2CC,EAA3C,CAAf;AACA,QAAME,aAAa,GAAGD,MAAM,CAACE,MAAP,CAAcL,eAAd,EAA+B,MAA/B,EAAuC,KAAvC,CAAtB;AAEA,WAAO,CAACE,EAAE,CAACP,QAAH,CAAY,KAAZ,CAAD,EAAqBS,aAAa,GAAGD,MAAM,SAAN,CAAa,KAAb,CAArC,EAA0Db,IAA1D,CAA+D,GAA/D,CAAP;AACH,GAtBL;;AAAA,SAwBIgB,WAxBJ,GAwBI,qBAAYF,aAAZ,EAA2BH,GAA3B;AACI,+BAAwBG,aAAa,CAACG,KAAd,CAAoB,GAApB,CAAxB;AAAA,QAAOL,EAAP;AAAA,QAAWM,SAAX;;AACA,QAAMC,QAAQ,GAAGf,gBAAA,CAAwB,KAAKF,SAA7B,EAAwCS,GAAxC,EAA6CS,MAAM,CAACC,IAAP,CAAYT,EAAZ,EAAgB,KAAhB,CAA7C,CAAjB;AACA,WAAOO,QAAQ,CAACJ,MAAT,CAAgBG,SAAhB,EAA2B,KAA3B,EAAkC,MAAlC,IAA4CC,QAAQ,SAAR,CAAe,MAAf,CAAnD;AACH,GA5BL;;AAAA;AAAA;;;ACgDA;;;;;;AAKA,IAAaG,oBAAb;AAAA;;AAII;;;;;AAKA,gCAAY/G,WAAZ,EAAsCiD,UAAtC;;;AACI,uCAAMjD,WAAN,EAAmBiD,UAAnB;AACA,UAAK+D,WAAL,GAAmB,IAAItB,WAAJ,EAAnB;;AACH;AAED;;;;;;;AAdJ;;AAAA,SAmBIuB,UAnBJ,GAmBI,oBAAW9C,OAAX;;;AAEI,QAAM+C,SAAS,GAAGC,OAAO,CAACC,MAAR,EAAlB;;AAGAF,IAAAA,SAAS,CAACnD,GAAV,CAAce,QAAQ,CAACuC,cAAT,CAAwB,KAAKrH,WAAL,CAAiBW,UAAjB,CAA4BC,QAApD,CAAd,EAA6E,KAAK0G,cAAL,EAA7E;AACAJ,IAAAA,SAAS,CAACK,IAAV,CAAezC,QAAQ,CAACuC,cAAT,CAAwB,KAAKrH,WAAL,CAAiBW,UAAjB,CAA4BC,QAApD,CAAf,EAA8E,KAAK0G,cAAL,EAA9E;AAEAJ,IAAAA,SAAS,CAACM,GAAV,CAAc,UAACzC,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AAEV,UAAI,CAAC3C,GAAG,CAAC4C,OAAT,EAAkB;AACd;AACA,cAAM,IAAItH,KAAJ,CAAUhD,aAAa,CAACoB,iBAAxB,CAAN;AACH;;;AAGDsG,MAAAA,GAAG,CAAC4C,OAAJ,CAAYC,KAAZ,GAAoB,MAAI,CAAC1E,cAAL,CAAoB2E,aAApB,EAApB;AACAH,MAAAA,IAAI;AACP,KAVD;;AAYA,QAAI,KAAK1H,WAAL,CAAiBW,UAAjB,CAA4BmH,kBAAhC,EAAoD;AAChD;;;;AAIAZ,MAAAA,SAAS,CAACnD,GAAV,CAAc,KAAK/D,WAAL,CAAiBW,UAAjB,CAA4BmH,kBAA1C,EAA8D,UAAC/C,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AAC1D3C,QAAAA,GAAG,CAAC4C,OAAJ,CAAYI,OAAZ,CAAoB;AAChBN,UAAAA,GAAG,CAACO,UAAJ,CAAe,GAAf;AACH,SAFD;AAGH,OAJD;AAKH;;AAED,WAAOd,SAAP;AACH;AAED;;;;;AAtDJ;;AAAA,SA2DIe,MA3DJ,GA2DI,gBAAO9D,OAAP;;;AACI,WAAO,UAACY,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AAEH,UAAMtB,GAAG,GAAG,MAAI,CAACY,WAAL,CAAiBjB,SAAjB,CAA2BhB,GAAG,CAAC4C,OAAJ,CAAYC,KAAvC,EAA8C,MAAI,CAACZ,WAAL,CAAiBpB,YAAjB,EAA9C,CAAZ;;AACAb,MAAAA,GAAG,CAAC4C,OAAJ,CAAYvB,GAAZ,GAAkBA,GAAG,CAACN,QAAJ,CAAa,KAAb,CAAlB;;AAEA,UAAMoC,KAAK,GAAG,MAAI,CAAChF,cAAL,CAAoBiF,YAApB,CACV,MAAI,CAACnB,WAAL,CAAiBd,WAAjB,CAA6BzE,IAAI,CAACC,SAAL,CAAe;AACxC0G,QAAAA,KAAK,EAAEtO,SAAS,CAACuO,OADuB;AAExCC,QAAAA,IAAI,EAAEnE,OAAO,CAACoE,iBAF0B;AAGxCX,QAAAA,KAAK,EAAE7C,GAAG,CAAC4C,OAAJ,CAAYC;AAHqB,OAAf,CAA7B,EAIIxB,GAJJ,CADU,CAAd;;AAQA,UAAMoC,MAAM,GAAmB;AAC3BC,QAAAA,SAAS,EAAE,MAAI,CAACxF,UAAL,CAAgByF,IAAhB,CAAqBD,SADL;AAE3BtH,QAAAA,MAAM,EAAE9G,mBAFmB;AAG3B6N,QAAAA,KAAK,EAAEA,KAHoB;AAI3BtH,QAAAA,QAAQ,EAAEkE,QAAQ,CAAC6D,iBAAT,CAA2B5D,GAA3B,EAAgC,MAAI,CAAC/E,WAAL,CAAiBW,UAAjB,CAA4BC,QAA5D;AAJiB,OAA/B;;AAQA,aAAO,MAAI,CAACgI,WAAL,CAAiB7D,GAAjB,EAAsB0C,GAAtB,EAA2BC,IAA3B,EAAiCc,MAAjC,CAAP;AAEH,KAvBD;AAwBH,GApFL;;AAsFI;;;;;AAtFJ,SA2FIK,OA3FJ,GA2FI,iBAAQ1E,OAAR;;;AACI,WAAO,UAACY,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AAEH,UAAMoB,qBAAqB,GAAGhE,QAAQ,CAAC6D,iBAAT,CAA2B5D,GAA3B,EAAgCZ,OAAO,CAAC4E,kBAAxC,CAA9B;AAEA;;;;;;;AAMA,UAAMC,SAAS,GAAM,MAAI,CAAC/F,UAAL,CAAgByF,IAAhB,CAAqBD,SAA3B,qDAAoFK,qBAAnG;AAEA/D,MAAAA,GAAG,CAAC4C,OAAJ,CAAYI,OAAZ,CAAoB;AAChBN,QAAAA,GAAG,CAAC7G,QAAJ,CAAaoI,SAAb;AACH,OAFD;AAGH,KAfD;AAgBH,GA5GL;;AA8GI;;;;;;AA9GJ,SAoHY1B,cApHZ,GAoHY,wBAAenD,OAAf;;;AACJ;AAAA,gEAAO,iBAAOY,GAAP,EAAqB0C,GAArB,EAAoCC,IAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGC3C,GAAG,CAACkE,KAAJ,CAAUf,KAHX;AAAA;AAAA;AAAA;;AAIOA,gBAAAA,KAJP,GAIezG,IAAI,CAACyH,KAAL,CAAW,MAAI,CAAClC,WAAL,CAAiBP,WAAjB,CAA6B,MAAI,CAACvD,cAAL,CAAoBiG,YAApB,CAAiCpE,GAAG,CAACkE,KAAJ,CAAUf,KAA3C,CAA7B,EAA0FrB,MAAM,CAACC,IAAP,CAAY/B,GAAG,CAAC4C,OAAJ,CAAYvB,GAAxB,EAA6B,KAA7B,CAA1F,CAAX,CAJf;;AAAA,sBAOK8B,KAAK,CAACN,KAAN,KAAgB7C,GAAG,CAAC4C,OAAJ,CAAYC,KAPjC;AAAA;AAAA;AAAA;;AAAA,8BAQaM,KAAK,CAACE,KARnB;AAAA,gDASctO,SAAS,CAACuO,OATxB,uBA0BcvO,SAAS,CAACsP,aA1BxB;AAAA;;AAAA;AAUa;AACArE,gBAAAA,GAAG,CAAC4C,OAAJ,CAAY0B,YAAZ,CAAyBC,IAAzB,GAAgCvE,GAAG,CAACkE,KAAJ,CAAUK,IAA1C;AAXb;AAAA;AAAA,uBAemE,MAAI,CAAC9F,UAAL,CAAgB+F,kBAAhB,CAAmCxE,GAAG,CAAC4C,OAAJ,CAAY0B,YAA/C,CAfnE;;AAAA;AAeuBG,gBAAAA,aAfvB;AAgBiBzE,gBAAAA,GAAG,CAAC4C,OAAJ,CAAY8B,eAAZ,GAA8B,IAA9B;AACA1E,gBAAAA,GAAG,CAAC4C,OAAJ,CAAY+B,OAAZ,GAAsBF,aAAa,CAACE,OAApC;AACAjC,gBAAAA,GAAG,CAAC7G,QAAJ,CAAasH,KAAK,CAACI,IAAnB;AAlBjB;AAAA;;AAAA;AAAA;AAAA;;AAoBiB,gBAAA,MAAI,CAAClF,MAAL,CAAYvC,KAAZ,CAAkBxD,aAAa,CAACO,wBAAhC;;AACA8J,gBAAAA,IAAI,aAAJ;;AArBjB;AAAA;;AAAA;AA2Ba;AACM/F,gBAAAA,YA5BnB,GA4BkC7B,YAAY,CAACoB,yBAAb,CAAuC6D,GAAG,CAAC4C,OAAJ,CAAY0B,YAAZ,CAAyBlI,MAAhE,EAAwE,MAAI,CAACnB,WAA7E,CA5BlC;AA8Ba+E,gBAAAA,GAAG,CAAC4C,OAAJ,CAAY0B,YAAZ,CAAyBC,IAAzB,GAAgCvE,GAAG,CAACkE,KAAJ,CAAUK,IAA1C;AA9Bb;AAAA;AAAA,uBAiCmE,MAAI,CAAC9F,UAAL,CAAgB+F,kBAAhB,CAAmCxE,GAAG,CAAC4C,OAAJ,CAAY0B,YAA/C,CAjCnE;;AAAA;AAiCuBG,gBAAAA,cAjCvB;AAkCiBzE,gBAAAA,GAAG,CAAC4C,OAAJ,CAAYtG,kBAAZ,CAA+BM,YAA/B,EAA6CuC,WAA7C,GAA2DsF,cAAa,CAACtF,WAAzE;AACAuD,gBAAAA,GAAG,CAAC7G,QAAJ,CAAasH,KAAK,CAACI,IAAnB;AAnCjB;AAAA;;AAAA;AAAA;AAAA;;AAqCiB,gBAAA,MAAI,CAAClF,MAAL,CAAYvC,KAAZ,CAAkBxD,aAAa,CAACO,wBAAhC;;AACA8J,gBAAAA,IAAI,aAAJ;;AAtCjB;AAAA;;AAAA;AA4Ca,gBAAA,MAAI,CAACtE,MAAL,CAAYvC,KAAZ,CAAkBxD,aAAa,CAACG,0BAAhC;;AACAiK,gBAAAA,GAAG,CAAC7G,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BE,KAAzC;AA7Cb;;AAAA;AAAA;AAAA;;AAAA;AAiDK,gBAAA,MAAI,CAACuC,MAAL,CAAYvC,KAAZ,CAAkBxD,aAAa,CAACK,cAAhC;;AACA+J,gBAAAA,GAAG,CAAC7G,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC;;AAlDL;AAAA;AAAA;;AAAA;AAqDC,gBAAA,MAAI,CAACsC,MAAL,CAAYvC,KAAZ,CAAkBxD,aAAa,CAACa,eAAhC;;AACAuJ,gBAAAA,GAAG,CAAC7G,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC;;AAtDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAyDH,GA9KL;;AAgLI;;;;;AAhLJ,SAqLI6I,QArLJ,GAqLI,kBAASxF,OAAT;;;AACI;AAAA,iEAAO,kBAAOY,GAAP,EAAqB0C,GAArB,EAAoCC,IAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH;AACMvG,gBAAAA,MAHH,GAGYgD,OAAO,CAAC3C,QAAR,CAAiBL,MAH7B;AAIGQ,gBAAAA,YAJH,GAIkB7B,YAAY,CAACoB,yBAAb,CAAuCC,MAAvC,EAA+C,MAAI,CAACnB,WAApD,CAJlB;;AAMH,oBAAI,CAAC+E,GAAG,CAAC4C,OAAJ,CAAYtG,kBAAjB,EAAqC;AACjC0D,kBAAAA,GAAG,CAAC4C,OAAJ,CAAYtG,kBAAZ,GAAiC,EAAjC;AACH;;AAED0D,gBAAAA,GAAG,CAAC4C,OAAJ,CAAYtG,kBAAZ,sDACKM,YADL,iBAEW,MAAI,CAAC3B,WAAL,CAAiBqB,kBAAjB,CAAoCM,YAApC,CAFX;AAGQuC,kBAAAA,WAAW,EAAE;AAHrB;AAVG;AAkBO0F,gBAAAA,aAlBP,GAkB0C;AACrCF,kBAAAA,OAAO,EAAE3E,GAAG,CAAC4C,OAAJ,CAAY+B,OADgB;AAErCvI,kBAAAA,MAAM,EAAEA;AAF6B,iBAlB1C;;AAAA;AAAA,uBAwBmD,MAAI,CAACqC,UAAL,CAAgBqG,kBAAhB,CAAmCD,aAAnC,CAxBnD;;AAAA;AAwBOJ,gBAAAA,aAxBP;;AAAA,qBA4BKvJ,WAAW,CAACC,OAAZ,CAAoBsJ,aAAa,CAACtF,WAAlC,CA5BL;AAAA;AAAA;AAAA;;AA6BK,gBAAA,MAAI,CAACd,MAAL,CAAYvC,KAAZ,CAAkBxD,aAAa,CAACS,eAAhC;;AA7BL,sBA8BW,IAAIgM,4BAAJ,CAAiCzM,aAAa,CAACM,oBAA/C,CA9BX;;AAAA;AAiCCoH,gBAAAA,GAAG,CAAC4C,OAAJ,CAAYtG,kBAAZ,CAA+BM,YAA/B,EAA6CuC,WAA7C,GAA2DsF,aAAa,CAACtF,WAAzE;AACAwD,gBAAAA,IAAI;AAlCL;AAAA;;AAAA;AAAA;AAAA;;AAAA,sBAqCK,wBAAiBoC,4BArCtB;AAAA;AAAA;AAAA;;AAuCW1D,gBAAAA,GAvCX,GAuCiB,MAAI,CAACY,WAAL,CAAiBjB,SAAjB,CAA2BhB,GAAG,CAAC4C,OAAJ,CAAYC,KAAvC,EAA8C,MAAI,CAACZ,WAAL,CAAiBpB,YAAjB,EAA9C,CAvCjB;AAwCKb,gBAAAA,GAAG,CAAC4C,OAAJ,CAAYvB,GAAZ,GAAkBA,GAAG,CAACN,QAAJ,CAAa,KAAb,CAAlB;AAEMoC,gBAAAA,KA1CX,GA0CmB,MAAI,CAAChF,cAAL,CAAoBiF,YAApB,CACV,MAAI,CAACnB,WAAL,CAAiBd,WAAjB,CAA6BzE,IAAI,CAACC,SAAL,CAAe;AACxC0G,kBAAAA,KAAK,EAAEtO,SAAS,CAACsP,aADuB;AAExCd,kBAAAA,IAAI,EAAEvD,GAAG,CAACgF,WAF8B;AAGxCnC,kBAAAA,KAAK,EAAE7C,GAAG,CAAC4C,OAAJ,CAAYC;AAHqB,iBAAf,CAA7B,EAIIxB,GAJJ,CADU,CA1CnB;AAkDWoC,gBAAAA,MAlDX,GAkDoC;AAC3BC,kBAAAA,SAAS,EAAE,MAAI,CAACxF,UAAL,CAAgByF,IAAhB,CAAqBD,SADL;AAE3BtH,kBAAAA,MAAM,EAAEA,MAFmB;AAG3B+G,kBAAAA,KAAK,EAAEA,KAHoB;AAI3BtH,kBAAAA,QAAQ,EAAEkE,QAAQ,CAAC6D,iBAAT,CAA2B5D,GAA3B,EAAgC,MAAI,CAAC/E,WAAL,CAAiBW,UAAjB,CAA4BC,QAA5D,CAJiB;AAK3B8I,kBAAAA,OAAO,EAAE3E,GAAG,CAAC4C,OAAJ,CAAY+B;AALM,iBAlDpC;;AAAA,kDA2DY,MAAI,CAACd,WAAL,CAAiB7D,GAAjB,EAAsB0C,GAAtB,EAA2BC,IAA3B,EAAiCc,MAAjC,CA3DZ;;AAAA;AA6DKd,gBAAAA,IAAI,cAAJ;;AA7DL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAiEH,GAvPL;;AAyPI;;;;;AAzPJ,SA8PI+B,eA9PJ,GA8PI,yBAAgBtF,OAAhB;;;AACI,WAAO,UAACY,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AACH,UAAI3C,GAAG,CAAC4C,OAAR,EAAiB;AACb,YAAI,CAAC5C,GAAG,CAAC4C,OAAJ,CAAY8B,eAAjB,EAAkC;AAC9B,UAAA,MAAI,CAACrG,MAAL,CAAYvC,KAAZ,CAAkBxD,aAAa,CAACC,aAAhC;;AACA,iBAAOmK,GAAG,CAAC7G,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC,CAAP;AACH;;AAED4G,QAAAA,IAAI;AACP,OAPD,MAOO;AACH,QAAA,MAAI,CAACtE,MAAL,CAAYvC,KAAZ,CAAkBxD,aAAa,CAACoB,iBAAhC;;AACAgJ,QAAAA,GAAG,CAAC7G,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC;AACH;AACJ,KAZD;AAaH,GA5QL;;AA8QI;;;;;AA9QJ,SAmRIkJ,SAnRJ,GAmRI,mBAAU7F,OAAV;;;AACI;AAAA,iEAAO,kBAAOY,GAAP,EAAqB0C,GAArB,EAAoCC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC3C,GAAG,CAAC4C,OAAJ,IAAe,MAAI,CAAC3H,WAAL,CAAiBiK,YADjC;AAAA;AAAA;AAAA;;AAGOC,gBAAAA,QAHP,GAGkB/F,OAAO,CAACgG,UAAR,CAAmBC,cAAnB,CAAkC3N,sBAAsB,CAACC,MAAzD,IAAmED,sBAAsB,CAACC,MAA1F,GAAmGD,sBAAsB,CAACE,KAH5I;AAAA,+BAKSuN,QALT;AAAA,kDAMUzN,sBAAsB,CAACC,MANjC,wBA4BUD,sBAAsB,CAACE,KA5BjC;AAAA;;AAAA;AAAA,sBAQaoI,GAAG,CAAC4C,OAAJ,CAAY+B,OAAZ,CAAoBW,aAApB,CAAkC5N,sBAAsB,CAACC,MAAzD,MAAqE7C,SARlF;AAAA;AAAA;AAAA;;AAAA,sBASiBkL,GAAG,CAAC4C,OAAJ,CAAY+B,OAAZ,CAAoBW,aAApB,CAAkC5N,sBAAsB,CAACG,WAAzD,KACGmI,GAAG,CAAC4C,OAAJ,CAAY+B,OAAZ,CAAoBW,aAApB,CAAkC5N,sBAAsB,CAACI,aAAzD,CAVpB;AAAA;AAAA;AAAA;;AAWiB,gBAAA,MAAI,CAACuG,MAAL,CAAYkH,OAAZ,CAAoBrN,YAAY,CAACG,gBAAjC;;AAXjB;AAAA,uBAY8B,MAAI,CAACmN,aAAL,CAAmBxF,GAAnB,EAAwB0C,GAAxB,EAA6BC,IAA7B,EAAmCvD,OAAO,CAACgG,UAA3C,CAZ9B;;AAAA;AAAA;;AAAA;AAciB,gBAAA,MAAI,CAAC/G,MAAL,CAAYvC,KAAZ,CAAkBxD,aAAa,CAACgB,iBAAhC;;AAdjB,kDAewBoJ,GAAG,CAAC7G,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC,CAfxB;;AAAA;AAAA;AAAA;;AAAA;AAkBmB0J,gBAAAA,MAlBnB,GAkB4BzF,GAAG,CAAC4C,OAAJ,CAAY+B,OAAZ,CAAoBW,aAApB,CAAkC5N,sBAAsB,CAACC,MAAzD,CAlB5B;;AAAA,oBAoBkB,MAAI,CAAC+N,eAAL,CAAqB1F,GAAG,CAAC2F,MAAzB,EAAiCvG,OAAO,CAACgG,UAAzC,EAAqDK,MAArD,EAA6D/N,sBAAsB,CAACC,MAApF,CApBlB;AAAA;AAAA;AAAA;;AAAA,kDAqBwB+K,GAAG,CAAC7G,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC,CArBxB;;AAAA;AAyBS4G,gBAAAA,IAAI;AAzBb;;AAAA;AAAA,sBA6Ba3C,GAAG,CAAC4C,OAAJ,CAAY+B,OAAZ,CAAoBW,aAApB,CAAkC5N,sBAAsB,CAACE,KAAzD,MAAoE9C,SA7BjF;AAAA;AAAA;AAAA;;AA8Ba,gBAAA,MAAI,CAACuJ,MAAL,CAAYvC,KAAZ,CAAkBxD,aAAa,CAACc,gBAAhC;;AA9Bb,kDA+BoBsJ,GAAG,CAAC7G,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC,CA/BpB;;AAAA;AAiCmB6J,gBAAAA,KAjCnB,GAiC2B5F,GAAG,CAAC4C,OAAJ,CAAY+B,OAAZ,CAAoBW,aAApB,CAAkC5N,sBAAsB,CAACE,KAAzD,CAjC3B;;AAAA,oBAmCkB,MAAI,CAAC8N,eAAL,CAAqB1F,GAAG,CAAC2F,MAAzB,EAAiCvG,OAAO,CAACgG,UAAzC,EAAqDQ,KAArD,EAA4DlO,sBAAsB,CAACE,KAAnF,CAnClB;AAAA;AAAA;AAAA;;AAAA,kDAoCwB8K,GAAG,CAAC7G,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC,CApCxB;;AAAA;AAwCS4G,gBAAAA,IAAI;AAxCb;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AA+CCD,gBAAAA,GAAG,CAAC7G,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC;;AA/CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAkDH,GAtUL;;AA0UI;;;;;;;;AA1UJ;;AAAA,SAkVkB8H,WAlVlB;AAAA;AAAA;AAAA,mFAkVY,kBAAkB7D,GAAlB,EAAgC0C,GAAhC,EAA+CC,IAA/C,EAAmEc,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAEJ;AACAzD,cAAAA,GAAG,CAAC4C,OAAJ,CAAYiD,eAAZ,GAA8B;AAC1BnC,gBAAAA,SAAS,EAAED,MAAM,CAACC,SADQ;AAE1BtH,gBAAAA,MAAM,EAAEqH,MAAM,CAACrH,MAFW;AAG1B+G,gBAAAA,KAAK,EAAEM,MAAM,CAACN,KAHY;AAI1B2C,gBAAAA,WAAW,EAAErC,MAAM,CAAC5H,QAJM;AAK1BkK,gBAAAA,MAAM,EAAEtC,MAAM,CAACsC,MALW;AAM1BpB,gBAAAA,OAAO,EAAElB,MAAM,CAACkB;AANU,eAA9B;AASA3E,cAAAA,GAAG,CAAC4C,OAAJ,CAAY0B,YAAZ,GAA2B;AACvBZ,gBAAAA,SAAS,EAAED,MAAM,CAACC,SADK;AAEvBtH,gBAAAA,MAAM,EAAEqH,MAAM,CAACrH,MAFQ;AAGvB0J,gBAAAA,WAAW,EAAErC,MAAM,CAAC5H,QAHG;AAIvB0I,gBAAAA,IAAI,EAAEzP;AAJiB,eAA3B,CAZI;;AAAA;AAAA;AAAA,qBAqBuB,KAAK2J,UAAL,CAAgBuH,cAAhB,CAA+BhG,GAAG,CAAC4C,OAAJ,CAAYiD,eAA3C,CArBvB;;AAAA;AAqBM5G,cAAAA,QArBN;AAsBAyD,cAAAA,GAAG,CAAC7G,QAAJ,CAAaoD,QAAb;AAtBA;AAAA;;AAAA;AAAA;AAAA;AAwBA,mBAAKZ,MAAL,CAAYvC,KAAZ,CAAkBxD,aAAa,CAACQ,sBAAhC;AACA6J,cAAAA,IAAI,cAAJ;;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlVZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA+WI;;;;;;;;AA/WJ,SAuXkB6C,aAvXlB;AAAA;AAAA;AAAA,qFAuXY,kBAAoBxF,GAApB,EAAkC0C,GAAlC,EAAiDC,IAAjD,EAAqEsD,IAArE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sCACyEjG,GAAG,CAAC4C,OAAJ,CAAY+B,OAAZ,CAAoBW,aAD7F,EACIY,AAAiCC,gBADrC;AAGEtB,cAAAA,aAHF,GAGqC;AACrCF,gBAAAA,OAAO,EAAE3E,GAAG,CAAC4C,OAAJ,CAAY+B,OADgB;AAErCvI,gBAAAA,MAAM,EAAE1E,sBAAsB,CAACO,mBAAvB,CAA2C0J,KAA3C,CAAiD,GAAjD;AAF6B,eAHrC;AAAA;AAAA;AAAA,qBAU4B,KAAKlD,UAAL,CAAgBqG,kBAAhB,CAAmCD,aAAnC,CAV5B;;AAAA;AAUMJ,cAAAA,aAVN;AAAA;AAAA;AAAA,qBAYgC3F,YAAY,CAACU,wBAAb,CAAsC9H,sBAAsB,CAACM,sBAA7D,EAAqFyM,aAAa,CAACtF,WAAnG,CAZhC;;AAAA;AAYUM,cAAAA,aAZV;;AAAA,mBAoBQA,aAAa,CAAC/H,sBAAsB,CAACK,eAAxB,CApBrB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAsBqC+G,YAAY,CAACgB,gBAAb,CAA8B2E,aAAa,CAACtF,WAA5C,EAAyDM,aAAa,CAAC/H,sBAAsB,CAACK,eAAxB,CAAtE,CAtBrC;;AAAA;AAsBkBqO,cAAAA,UAtBlB;AAwBYpG,cAAAA,GAAG,CAAC4C,OAAJ,CAAY+B,OAAZ,CAAoBW,aAApB,gBACOa,gBADP;AAEIV,gBAAAA,MAAM,EAAEW;AAFZ;;AAxBZ,kBA6BiB,KAAKV,eAAL,CAAqB1F,GAAG,CAAC2F,MAAzB,EAAiCM,IAAjC,EAAuCjG,GAAG,CAAC4C,OAAJ,CAAY+B,OAAZ,CAAoBW,aAApB,CAAkC5N,sBAAsB,CAACC,MAAzD,CAAvC,EAAyGD,sBAAsB,CAACC,MAAhI,CA7BjB;AAAA;AAAA;AAAA;;AAAA,gDA8BuB+K,GAAG,CAAC7G,QAAJ,CAAa,KAAKZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC,CA9BvB;;AAAA;AAAA,gDAgCuB4G,IAAI,EAhC3B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmCYA,cAAAA,IAAI,cAAJ;;AAnCZ;AAAA;AAAA;;AAAA;AAsCQ3C,cAAAA,GAAG,CAAC4C,OAAJ,CAAY+B,OAAZ,CAAoBW,aAApB,gBACOa,gBADP;AAEIV,gBAAAA,MAAM,EAAEhG,aAAa,CAAC,OAAD,CAAb,CAAuBC,GAAvB,CAA2B,UAACC,CAAD;AAAA,yBAAOA,CAAC,CAACE,EAAT;AAAA,iBAA3B;AAFZ;;AAtCR,kBA2Ca,KAAK6F,eAAL,CAAqB1F,GAAG,CAAC2F,MAAzB,EAAiCM,IAAjC,EAAuCjG,GAAG,CAAC4C,OAAJ,CAAY+B,OAAZ,CAAoBW,aAApB,CAAkC5N,sBAAsB,CAACC,MAAzD,CAAvC,EAAyGD,sBAAsB,CAACC,MAAhI,CA3Cb;AAAA;AAAA;AAAA;;AAAA,gDA4CmB+K,GAAG,CAAC7G,QAAJ,CAAa,KAAKZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC,CA5CnB;;AAAA;AAAA,gDA8CmB4G,IAAI,EA9CvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkDIA,cAAAA,IAAI,cAAJ;;AAlDJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqDA;AACAA,cAAAA,IAAI,cAAJ;;AAtDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvXZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAibI;;;;;;;;AAjbJ,SAybY+C,eAzbZ,GAybY,yBAAgBC,MAAhB,EAAgCM,IAAhC,EAAkDI,KAAlD,EAAmEC,QAAnE;AACJ,QAAIL,IAAI,CAACM,OAAL,CAAa5K,QAAb,CAAsBgK,MAAtB,CAAJ,EAAmC;AAC/B,cAAQW,QAAR;AACI,aAAK5O,sBAAsB,CAACC,MAA5B;AACI,cAAIsO,IAAI,CAACR,MAAL,CAAYpI,MAAZ,CAAmB,UAAAmJ,IAAI;AAAA,mBAAIH,KAAK,CAAC1K,QAAN,CAAe6K,IAAf,CAAJ;AAAA,WAAvB,EAAiDC,MAAjD,GAA0D,CAA9D,EAAiE;AAC7D,iBAAKpI,MAAL,CAAYvC,KAAZ,CAAkBxD,aAAa,CAACiB,iBAAhC;AACA,mBAAO,KAAP;AACH;;AACD;;AAEJ,aAAK7B,sBAAsB,CAACE,KAA5B;AACI,cAAIqO,IAAI,CAACL,KAAL,CAAWvI,MAAX,CAAkB,UAAAmJ,IAAI;AAAA,mBAAIH,KAAK,CAAC1K,QAAN,CAAe6K,IAAf,CAAJ;AAAA,WAAtB,EAAgDC,MAAhD,GAAyD,CAA7D,EAAgE;AAC5D,iBAAKpI,MAAL,CAAYvC,KAAZ,CAAkBxD,aAAa,CAACe,gBAAhC;AACA,mBAAO,KAAP;AACH;;AACD;AAbR;AAkBH,KAnBD,MAmBO;AACH,WAAKgF,MAAL,CAAYvC,KAAZ,CAAkBxD,aAAa,CAACkB,kBAAhC;AACA,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH,GAndL;;AAAA;AAAA,EAA0CyE,cAA1C;;ICpBayI,0BAAb;AAAA;;AAGI;;;;;AAKA,sCAAYzL,WAAZ,EAAsCiD,UAAtC;WACI,2BAAMjD,WAAN,EAAmBiD,UAAnB;AACH;AAED;;;;;;;AAZJ;;AAAA,SAiBIgE,UAjBJ,GAiBI,oBAAW9C,OAAX;;;AAEI,QAAM+C,SAAS,GAAGC,OAAO,CAACC,MAAR,EAAlB;;AAGAF,IAAAA,SAAS,CAACnD,GAAV,CAAce,QAAQ,CAACuC,cAAT,CAAwB,KAAKrH,WAAL,CAAiBW,UAAjB,CAA4BC,QAApD,CAAd,EAA6E,KAAK0G,cAAL,EAA7E;AACAJ,IAAAA,SAAS,CAACK,IAAV,CAAezC,QAAQ,CAACuC,cAAT,CAAwB,KAAKrH,WAAL,CAAiBW,UAAjB,CAA4BC,QAApD,CAAf,EAA8E,KAAK0G,cAAL,EAA9E;AAEAJ,IAAAA,SAAS,CAACM,GAAV,CAAc,UAACzC,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AAGV,UAAI,CAAC3C,GAAG,CAAC4C,OAAJ,CAAY8B,eAAjB,EAAkC;AAC9B;AACA,YAAMiC,UAAU,GAAG3G,GAAG,CAACX,OAAJ,CAAY9J,+BAA+B,CAACG,2BAAhC,CAA4DkR,WAA5D,EAAZ,CAAnB;;AAEA,YAAID,UAAJ,EAAgB;AAEZ;AACA,cAAMrB,aAAa,GAAkBuB,SAAS,CAACC,kBAAV,CAA6BH,UAA7B,EAAyC,KAAI,CAACxI,cAA9C,CAArC;AAEA6B,UAAAA,GAAG,CAAC4C,OAAJ,CAAY8B,eAAZ,GAA8B,IAA9B;AAEA1E,UAAAA,GAAG,CAAC4C,OAAJ,CAAY+B,OAAZ,GAAsB;AAClBnJ,YAAAA,QAAQ,EAAE8J,aAAa,CAACyB,GADN;AAElBC,YAAAA,aAAa,EAAE1B,aAAa,CAAC2B,GAAd,GAAoB,GAApB,GAA0B3B,aAAa,CAACyB,GAFrC;AAGlBG,YAAAA,cAAc,EAAE5B,aAAa,CAAC2B,GAHZ;AAIlBE,YAAAA,WAAW,EAAE7B,aAAa,CAAC8B,GAAd,CAAkBzF,KAAlB,CAAwB,KAAxB,EAA+B,CAA/B,EAAkCA,KAAlC,CAAwC,GAAxC,EAA6C,CAA7C,CAJK;AAKlB0F,YAAAA,QAAQ,EAAE/B,aAAa,CAACgC,kBALN;AAMlBC,YAAAA,IAAI,EAAEjC,aAAa,CAACiC,IANF;AAOlBjC,YAAAA,aAAa,EAAEA;AAPG,WAAtB;AASH;AACJ;;AAED3C,MAAAA,IAAI;AACP,KA3BD;AA6BA,WAAOR,SAAP;AACH;AAED;;;;;AAzDJ;;AAAA,SA8DIe,MA9DJ,GA8DI,gBAAO9D,OAAP;AACI,WAAO,UAACY,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AACH,UAAI6E,QAAJ;AACA,UAAMC,oBAAoB,GAAG1H,QAAQ,CAAC6D,iBAAT,CAA2B5D,GAA3B,EAAgCZ,OAAO,CAACoE,iBAAxC,CAA7B;AACAgE,MAAAA,QAAQ,GAAG,aAAaE,OAAO,CAACC,GAAR,CAAYhR,8BAA8B,CAACS,gBAA3C,CAAb,GAA4EpB,iCAAiC,CAACI,oBAA9G,GAAqII,uCAAuC,CAACC,+BAA7K,GAA+MgR,oBAA1N;AACA/E,MAAAA,GAAG,CAAC7G,QAAJ,CAAa2L,QAAb;AACH,KALD;AAMH;AAGD;;;;;AAxEJ;;AAAA,SA6EI1D,OA7EJ,GA6EI,iBAAQ1E,OAAR;AACI,WAAO,UAACY,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AACH,UAAMoB,qBAAqB,GAAGhE,QAAQ,CAAC6D,iBAAT,CAA2B5D,GAA3B,EAAgCZ,OAAO,CAAC4E,kBAAxC,CAA9B;AACA,UAAMC,SAAS,GAAG,aAAayD,OAAO,CAACC,GAAR,CAAYhR,8BAA8B,CAACS,gBAA3C,CAAb,GAA4EpB,iCAAiC,CAACK,qBAA9G,GAAsIG,uCAAuC,CAACE,gCAA9K,GAAiNqN,qBAAnO;AAEA/D,MAAAA,GAAG,CAAC4C,OAAJ,CAAYI,OAAZ,CAAoB;AAChBN,QAAAA,GAAG,CAAC7G,QAAJ,CAAaoI,SAAb;AACH,OAFD;AAGH,KAPD;AAQH;AAED;;;;;;AAxFJ;;AAAA,SA8FY1B,cA9FZ,GA8FY,wBAAenD,OAAf;AACJ;AAAA,gEAAO,iBAAOY,GAAP,EAAqB0C,GAArB,EAAoCC,IAApC;AAAA;AAAA;AAAA;AAAA;AACHA,gBAAAA,IAAI;;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAGH;AAED;;;;;AApGJ;;AAAA,SAyGIiC,QAzGJ,GAyGI,kBAASxF,OAAT;;;AACI;AAAA,iEAAO,kBAAOY,GAAP,EAAqB0C,GAArB,EAAoCC,IAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH;AACM/F,gBAAAA,YAHH,GAGkB7B,YAAY,CAACoB,yBAAb,CAAuCiD,OAAO,CAAC3C,QAAR,CAAiBL,MAAxD,EAAgE,MAAI,CAACnB,WAArE,CAHlB;;AAKH,oBAAI,CAAC+E,GAAG,CAAC4C,OAAJ,CAAYtG,kBAAjB,EAAqC;AACjC0D,kBAAAA,GAAG,CAAC4C,OAAJ,CAAYtG,kBAAZ,GAAiC,EAAjC;AACH;;AAED0D,gBAAAA,GAAG,CAAC4C,OAAJ,CAAYtG,kBAAZ,sDACKM,YADL,iBAEW,MAAI,CAAC3B,WAAL,CAAiBqB,kBAAjB,CAAoCM,YAApC,CAFX;AAGQuC,kBAAAA,WAAW,EAAE;AAHrB;AAOMyI,gBAAAA,cAhBH,GAgBoB5H,GAAG,CAACX,OAAJ,CAAY9J,+BAA+B,CAACE,+BAAhC,CAAgEmR,WAAhE,EAAZ,CAhBpB;;AAAA,qBAkBCgB,cAlBD;AAAA;AAAA;AAAA;;AAoBOC,gBAAAA,iBApBP,GAoB8ChB,SAAS,CAACC,kBAAV,CAA6Bc,cAA7B,EAA6C,MAAI,CAACzJ,cAAlD,CApB9C;;AAuBO/B,gBAAAA,MAvBP,GAuBgByL,iBAAiB,CAACC,GAAlB,CAAsBnG,KAAtB,CAA4B,GAA5B,CAvBhB;AAwBOoG,gBAAAA,eAxBP,GAwByBhN,YAAY,CAACmC,kBAAb,CAAgCd,MAAhC,CAxBzB;;AAAA,qBA0BKgD,OAAO,CAAC3C,QAAR,CAAiBL,MAAjB,CAAwB4L,KAAxB,CAA8B,UAAAxB,IAAI;AAAA,yBAAIuB,eAAe,CAACpM,QAAhB,CAAyB6K,IAAzB,CAAJ;AAAA,iBAAlC,CA1BL;AAAA;AAAA;AAAA;;AA2BKxG,gBAAAA,GAAG,CAAC4C,OAAJ,CAAYtG,kBAAZ,CAA+BM,YAA/B,EAA6CuC,WAA7C,GAA2DyI,cAA3D;AA3BL,kDA4BYjF,IAAI,EA5BhB;;AAAA;AAAA,kDA8BYA,IAAI,CAAC,IAAIrH,KAAJ,CAAU,kCAAV,CAAD,CA9BhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAkCH;AAED;;;;;AA9IJ;;AAAA,SAmJIoJ,eAnJJ,GAmJI,yBAAgBtF,OAAhB;;;AACI,WAAO,UAACY,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AACH,UAAI3C,GAAG,CAAC4C,OAAR,EAAiB;AACb,YAAI,CAAC5C,GAAG,CAAC4C,OAAJ,CAAY8B,eAAjB,EAAkC;AAC9B,UAAA,MAAI,CAACrG,MAAL,CAAYvC,KAAZ,CAAkBxD,aAAa,CAACC,aAAhC;;AACA,iBAAOmK,GAAG,CAAC7G,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC,CAAP;AACH;;AAED4G,QAAAA,IAAI;AACP,OAPD,MAOO;AACH,QAAA,MAAI,CAACtE,MAAL,CAAYvC,KAAZ,CAAkBxD,aAAa,CAACoB,iBAAhC;;AACAgJ,QAAAA,GAAG,CAAC7G,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC;AACH;AACJ,KAZD;AAaH,GAjKL;;AAAA;AAAA,EAAgDkC,cAAhD;;IC1BagK,eAAb;AAAA;;AAAA;;AAEI;;;;;AAFJ,SAOUC,yBAPV;AAAA;AAAA;AAAA,iGAOI,iBAAgCzK,kBAAhC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEU0K,cAAAA,UAFV,GAEuB,IAAIC,sBAAJ,EAFvB;AAAA,4BAIY3K,kBAAkB,CAAC4K,cAJ/B;AAAA,8CAKajT,uBAAuB,CAACkT,MALrC,uBAoBalT,uBAAuB,CAACmT,WApBrC;AAAA;;AAAA;AAAA;AAAA;AAAA,qBAO6C,KAAKC,mBAAL,CAAyB/K,kBAAzB,EAA6C0K,UAA7C,CAP7C;;AAAA;AAOsBM,cAAAA,cAPtB;AAAA,+CASuB;AACHC,gBAAAA,IAAI,EAAEtT,uBAAuB,CAACkT,MAD3B;AAEHK,gBAAAA,KAAK,EAAEF,cAAc,CAACE;AAFnB,eATvB;;AAAA;AAAA;AAAA;AAegBjO,cAAAA,OAAO,CAACkO,GAAR;;AAfhB;AAAA;;AAAA;AAAA;AAAA;AAAA,qBAsBkD,KAAKC,wBAAL,CAA8BpL,kBAA9B,EAAkD0K,UAAlD,CAtBlD;;AAAA;AAsBsBW,cAAAA,mBAtBtB;AAAA;AAAA,qBAuB6C,KAAKN,mBAAL,CAAyB/K,kBAAzB,EAA6C0K,UAA7C,CAvB7C;;AAAA;AAuBsBM,cAAAA,eAvBtB;AAAA,+CAyBuB;AACHC,gBAAAA,IAAI,EAAEtT,uBAAuB,CAACmT,WAD3B;AAEHI,gBAAAA,KAAK,EAAE;AACHI,kBAAAA,UAAU,EAAED,mBAAmB,CAACE,UAApB,CAA+BC,cAA/B,CAA8ClI,QAA9C,EADT;AAEHmI,kBAAAA,UAAU,EAAET,eAAc,CAACE,KAAf,CAAqBhH,KAArB,CAA2B,+BAA3B,EAA4D,CAA5D;AAFT;AAFJ,eAzBvB;;AAAA;AAAA;AAAA;AAiCgBjH,cAAAA,OAAO,CAACkO,GAAR;;AAjChB;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAkDI;;;;;;AAlDJ,SAwDUC,wBAxDV;AAAA;AAAA;AAAA,gGAwDI,kBAA+BpL,kBAA/B,EAAuE0K,UAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI;AACMgB,cAAAA,YAHV,GAGyB,IAAIC,iBAAJ,CAAsB3L,kBAAkB,CAAC4L,WAAzC,EAAsDlB,UAAtD,CAHzB;AAAA;AAAA;AAAA,qBAM0CgB,YAAY,CAACG,cAAb,CAA4B7L,kBAAkB,CAAC8L,cAA/C,CAN1C;;AAAA;AAMcC,cAAAA,mBANd;AAAA,gDAOeA,mBAPf;;AAAA;AAAA;AAAA;AASQ9O,cAAAA,OAAO,CAACkO,GAAR;AATR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxDJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsEI;;;;;;AAtEJ;;AAAA,SA4EUJ,mBA5EV;AAAA;AAAA;AAAA,2FA4EI,kBAA0B/K,kBAA1B,EAAkE0K,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI;AACMgB,cAAAA,YAHV,GAGyB,IAAIM,YAAJ,CAAiBhM,kBAAkB,CAAC4L,WAApC,EAAiDlB,UAAjD,CAHzB;AAAA;AAAA;AAAA,qBAMqCgB,YAAY,CAACO,SAAb,CAAuBjM,kBAAkB,CAAC8L,cAA1C,CANrC;;AAAA;AAMcI,cAAAA,cANd;AAAA,gDAOeA,cAPf;;AAAA;AAAA;AAAA;AASQjP,cAAAA,OAAO,CAACkO,GAAR;AATR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5EJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;ACjBA;;;;AAQA,IAAagB,sBAAb;AAOI,kCAAoB9L,kBAApB,EAAiE+L,cAAjE;AACI,SAAK/L,kBAAL,GAA0BA,kBAA1B;AACA,SAAK+L,cAAL,GAAsBA,cAAtB;AACH;;AAVL,yBAYWC,WAZX,GAYI,qBAAmBhM,kBAAnB,EAAgE+L,cAAhE;AACI,QAAI,CAACD,sBAAsB,CAACG,QAA5B,EAAsC;AAClCH,MAAAA,sBAAsB,CAACG,QAAvB,GAAkC,IAAIH,sBAAJ,CAA2B9L,kBAA3B,EAA+C+L,cAA/C,CAAlC;AACH;;AAED,WAAOD,sBAAsB,CAACG,QAA9B;AACH,GAlBL;;AAAA;;AAAA,SAoBUC,iBApBV;AAAA,yFAoBI,kBAAwBC,YAAxB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gDACW,IAAIC,OAAJ;AAAA,0EAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACW,KAAI,CAACtM,kBAAL,CAAwBkB,GAAxB,CAA4B,KAAI,CAAC6K,cAAjC,CADX;;AAAA;AACTQ,0BAAAA,WADS;;AAAA,+BAEXA,WAFW;AAAA;AAAA;AAAA;;AAAA;AAAA,iCAGa,KAAI,CAACvM,kBAAL,CAAwBkB,GAAxB,CAA4BtC,IAAI,CAACyH,KAAL,CAAWkG,WAAX,EAAwB1F,OAAxB,CAAgCqC,aAA5D,CAHb;;AAAA;AAGLsD,0BAAAA,SAHK;AAIXL,0BAAAA,YAAY,CAACM,UAAb,CAAwBC,WAAxB,CAAoCF,SAApC;;AAJW;AAMfH,0BAAAA,OAAO;;AANQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAZ;;AAAA;AAAA;AAAA;AAAA,kBADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KApBJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,SA+BUM,gBA/BV;AAAA,wFA+BI,kBAAuBR,YAAvB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gDACW,IAAIC,OAAJ;AAAA,2EAAY,kBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACXH,YAAY,CAACS,eADF;AAAA;AAAA;AAAA;;AAELC,0BAAAA,OAFK,GAEKV,YAAY,CAACM,UAAb,CAAwBK,UAAxB,EAFL;AAGL5D,0BAAAA,aAHK,GAGWvL,MAAM,CAACC,MAAP,CAAciP,OAAd,EAAuB,CAAvB,EAA0B,eAA1B,CAHX;AAAA;AAAA,iCAIL,MAAI,CAAC7M,kBAAL,CAAwB+M,GAAxB,CAA4B7D,aAA5B,EAA2CiD,YAAY,CAACM,UAAb,CAAwBO,SAAxB,EAA3C,CAJK;;AAAA;AAMfX,0BAAAA,OAAO;;AANQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAZ;;AAAA;AAAA;AAAA;AAAA,kBADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA/BJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;ICgBaY,iBAAb;AAAA;;AAEI;;;;;;;;AAFJ,oBAUWC,oBAVX,GAUI,8BAA4B/P,WAA5B,EAAsD6C,kBAAtD;AACI,WAAO;AACH6F,MAAAA,IAAI;AACAtI,QAAAA,QAAQ,EAAEJ,WAAW,CAACG,cAAZ,CAA2BC,QADrC;AAEAqI,QAAAA,SAAS,EAAEzI,WAAW,CAACgQ,WAAZ,GACPxP,MAAM,CAACyP,OAAP,CAAejQ,WAAW,CAACgQ,WAA3B,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,WAA9C,CADO;AAAA,UAGPhQ,WAAW,CAACG,cAAZ,CAA2B2O,QAA3B,gBAAiD9O,WAAW,CAACG,cAAZ,CAA2B2O,QAA5E,SAAwF9O,WAAW,CAACG,cAAZ,CAA2BI,QAAnH,gBAEW2P,SAAS,CAACC,sBAFrB,SAE+CnQ,WAAW,CAACG,cAAZ,CAA2BI;AAP9E,SAQIP,WAAW,CAACG,cAAZ,CAA2BiK,cAA3B,CAA0C,cAA1C,CAAD,IAA+D;AAAEgG,QAAAA,YAAY,EAAEpQ,WAAW,CAACG,cAAZ,CAA2BiQ;AAA3C,OARlE,EASIpQ,WAAW,CAACG,cAAZ,CAA2BiK,cAA3B,CAA0C,mBAA1C,CAAD,IAAoE;AAAEiG,QAAAA,iBAAiB,EAAErQ,WAAW,CAACG,cAAZ,CAA2BkQ;AAAhD,OATvE;AAUAC,QAAAA,gBAAgB,EAAEtQ,WAAW,CAACgQ,WAAZ,GACd,CAAC9K,SAAS,CAACqL,gBAAV,CAA2B/P,MAAM,CAACyP,OAAP,CAAejQ,WAAW,CAACgQ,WAA3B,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,WAA9C,CAA3B,CAAD,CADc;AAAA,UAGd;AAbJ,QADD;AAgBHQ,MAAAA,KAAK,EAAE;AACH9N,QAAAA,WAAW,EAAEG,kBAAkB,GAAG8L,sBAAsB,CAACE,WAAvB,CAAmChM,kBAAnC,CAAH,GAA4D;AADxF,OAhBJ;AAmBHS,MAAAA,MAAM,EAAE;AACJC,QAAAA,aAAa,EAAEvD,WAAW,CAACuD,aAAZ,GAA4BvD,WAAW,CAACuD,aAAxC,GAAwDnE;AADnE;AAnBL,KAAP;AAuBH,GAlCL;;AAAA;AAAA;;ACxBA;;;;AAKA,IAIaqR,gBAAb;AAAA;;AAAA,mBACWC,YADX,GACI;AACI,WAAOjE,OAAO,CAACC,GAAR,CAAYiE,QAAZ,KAAyB,YAAhC;AACH,GAHL;;AAAA,mBAKWC,aALX,GAKI;AACI,WAAOnE,OAAO,CAACC,GAAR,CAAYiE,QAAZ,KAAyB,aAAhC;AACH,GAPL;;AAAA,mBASWE,uBATX,GASI;AACI,WAAOpE,OAAO,CAACC,GAAR,CAAYhR,8BAA8B,CAACC,oBAA3C,MAAqE,MAA5E;AACH,GAXL;;AAAA;AAAA;;ICMamV,uBAAb;AAAA;;AAKI,mCAAY9Q,WAAZ;WACI,iCAAMA,WAAN;AACH;;AAPL;;AAAA,SASI+Q,KATJ,GASI;AACI;AAEA,SAAK9N,UAAL,GAAkB6M,iBAAiB,CAACC,oBAAlB,CAAuC,KAAK/P,WAA5C,EAAyD,KAAK6C,kBAA9D,CAAlB;;AAEA,QAAI4N,gBAAgB,CAACI,uBAAjB,EAAJ,EAAgD;AAC5C,aAAO,IAAIpF,0BAAJ,CAA+B,KAAKzL,WAApC,EAAiD,KAAKiD,UAAtD,CAAP;AACH,KAFD,MAEO;AACH,aAAO,IAAI8D,oBAAJ,CAAyB,KAAK/G,WAA9B,EAA2C,KAAKiD,UAAhD,CAAP;AACH;AACJ,GAnBL;;AAAA,SAqBU+N,UArBV;AAAA,kFAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,mBAEY,KAAKxO,kBAFjB;AAAA;AAAA;AAAA;;AAGkByO,cAAAA,eAHlB,GAGoC,IAAIjE,eAAJ,EAHpC;AAAA;AAAA,qBAIqCiE,eAAe,CAAChE,yBAAhB,CAA0C,KAAKzK,kBAA/C,CAJrC;;AAAA;AAIkB0K,cAAAA,UAJlB;AAKY,mBAAKlN,WAAL,CAAiBG,cAAjB,CAAgC+M,UAAU,CAACO,IAA3C,IAAmDP,UAAU,CAACQ,KAA9D;;AALZ;AAQQ,kBAAI,KAAK7K,kBAAT,EAA6B;AACzB,qBAAKI,UAAL,GAAkB6M,iBAAiB,CAACC,oBAAlB,CAAuC,KAAK/P,WAA5C,EAAyD,KAAK6C,kBAA9D,CAAlB;AACH,eAFD,MAEO;AACH,qBAAKI,UAAL,GAAkB6M,iBAAiB,CAACC,oBAAlB,CAAuC,KAAK/P,WAA5C,CAAlB;AACH;;AAZT,mBAcYyQ,gBAAgB,CAACI,uBAAjB,EAdZ;AAAA;AAAA;AAAA;;AAAA,+CAemB,IAAIpF,0BAAJ,CAA+B,KAAKzL,WAApC,EAAiD,KAAKiD,UAAtD,CAfnB;;AAAA;AAAA,+CAiBmB,IAAI8D,oBAAJ,CAAyB,KAAK/G,WAA9B,EAA2C,KAAKiD,UAAhD,CAjBnB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,oBAoBc,IAAI5C,KAAJ,aApBd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KArBJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAA6CiC,qBAA7C;;ACsBA;;;;;;AAKA,IAAa4O,oBAAb;AAAA;;AAEI;;;;;AAKA,gCAAYlR,WAAZ,EAAsCiD,UAAtC;WACI,2BAAMjD,WAAN,EAAmBiD,UAAnB;AACH;AAED;;;;;;;AAXJ;;AAAA,SAgBIgE,UAhBJ,GAgBI,oBAAW9C,OAAX;AACI,QAAM+C,SAAS,GAAGC,OAAO,CAACC,MAAR,EAAlB;AAEAF,IAAAA,SAAS,CAACM,GAAV,CAAc,UAACzC,GAAD,EAAe0C,GAAf,EAA8BC,IAA9B;AACV;AACAA,MAAAA,IAAI;AACP,KAHD;AAKA,WAAOR,SAAP;AACH;AAED;;;;;AA3BJ;;AAAA,SAgCIiK,gBAhCJ,GAgCI,0BAAiBhN,OAAjB;;;AACI;AAAA,gEAAO,iBAAOY,GAAP,EAAqB0C,GAArB,EAAoCC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AACG0J,gBAAAA,UADH,GACwBrM,GAAG,CAACX,OAAJ,CAAYiN,aADpC;;AAIGlQ,gBAAAA,MAJH,GAIsBgD,OAAO,CAAC3C,QAAR,CAAiBL,MAJvC;;AAOGwL,gBAAAA,cAPH,GAO4ByE,UAAU,CAAC1K,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAP5B;AAQH3B,gBAAAA,GAAG,CAACuM,YAAJ,GAAmB3E,cAAnB;AAEM4E,gBAAAA,UAVH,GAUmC;AAClCD,kBAAAA,YAAY,EAAE3E,cADoB;AAElCxL,kBAAAA,MAAM,EAAEA;AAF0B,iBAVnC;AAAA;AAAA;AAAA,uBAiBmD,KAAI,CAACqC,UAAL,CAAgBgO,sBAAhB,CAAuCD,UAAvC,CAjBnD;;AAAA;AAiBO/H,gBAAAA,aAjBP;AAkBCzE,gBAAAA,GAAG,CAAC0M,QAAJ,GAAejI,aAAa,CAACtF,WAA7B;AACAwD,gBAAAA,IAAI;AAnBL;AAAA;;AAAA;AAAA;AAAA;AAqBCA,gBAAAA,IAAI,aAAJ;;AArBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAwBH;AAED;;;;AA3DJ;;AAAA,SA+DIgK,YA/DJ,GA+DI;;;AACI;AAAA,iEAAO,kBAAO3M,GAAP,EAAqB0C,GAArB,EAAoCC,IAApC;AAAA;AAAA;AAAA;AAAA;AACH,oBAAI3C,GAAG,CAACX,OAAJ,CAAYiN,aAAhB,EAA+B;AAC3B3J,kBAAAA,IAAI;AACP,iBAFD,MAEO;AACH,kBAAA,MAAI,CAACtE,MAAL,CAAYvC,KAAZ,CAAkBxD,aAAa,CAACS,eAAhC;;AACA2J,kBAAAA,GAAG,CAAC7G,QAAJ,CAAa,MAAI,CAACZ,WAAL,CAAiBW,UAAjB,CAA4BG,YAAzC;AACH;;AANE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAQH,GAxEL;;AAAA;AAAA,EAA0CkC,cAA1C;;IC7Ba2O,uBAAb;AAAA;;AAKI,mCAAY3R,WAAZ;WACI,iCAAMA,WAAN;AACH;;AAPL;;AASI;;;;AATJ,SAaI+Q,KAbJ,GAaI;AACI;AACA,SAAK9N,UAAL,GAAkB6M,iBAAiB,CAACC,oBAAlB,CAAuC,KAAK/P,WAA5C,EAAyD,KAAK6C,kBAA9D,CAAlB;AACA,WAAO,IAAIqO,oBAAJ,CAAyB,KAAKlR,WAA9B,EAA2C,KAAKiD,UAAhD,CAAP;AACH;AAED;;;;AAnBJ;;AAAA,SAuBU+N,UAvBV;AAAA;AAAA;AAAA,kFAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,mBAEY,KAAKxO,kBAFjB;AAAA;AAAA;AAAA;;AAGkByO,cAAAA,eAHlB,GAGoC,IAAIjE,eAAJ,EAHpC;AAAA;AAAA,qBAIqCiE,eAAe,CAAChE,yBAAhB,CAA0C,KAAKzK,kBAA/C,CAJrC;;AAAA;AAIkB0K,cAAAA,UAJlB;AAKY,mBAAKlN,WAAL,CAAiBG,cAAjB,CAAgC+M,UAAU,CAACO,IAA3C,IAAmDP,UAAU,CAACQ,KAA9D;;AALZ;AAQQ,kBAAI,KAAK7K,kBAAT,EAA6B;AACzB,qBAAKI,UAAL,GAAkB6M,iBAAiB,CAACC,oBAAlB,CAAuC,KAAK/P,WAA5C,EAAyD,KAAK6C,kBAA9D,CAAlB;AACH,eAFD,MAEO;AACH,qBAAKI,UAAL,GAAkB6M,iBAAiB,CAACC,oBAAlB,CAAuC,KAAK/P,WAA5C,CAAlB;AACH;;AAZT,+CAce,IAAIkR,oBAAJ,CAAyB,KAAKlR,WAA9B,EAA2C,KAAKiD,UAAhD,CAdf;;AAAA;AAAA;AAAA;AAAA,oBAgBc,IAAI5C,KAAJ,aAhBd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvBJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAA6CiC,qBAA7C;;;;"}