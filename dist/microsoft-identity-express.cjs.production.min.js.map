{"version":3,"file":"microsoft-identity-express.cjs.production.min.js","sources":["../src/utils/Constants.ts","../node_modules/regenerator-runtime/runtime.js","../src/config/AppSettingsTypes.ts","../src/provider/BaseAuthProvider.ts","../src/packageMetadata.ts","../src/config/AppSettingsHelper.ts","../src/network/FetchManager.ts","../src/utils/UrlUtils.ts","../src/middleware/handlers/loginHandler.ts","../src/middleware/handlers/logoutHandler.ts","../src/error/InteractionRequiredError.ts","../src/middleware/handlers/acquireTokenHandler.ts","../src/middleware/context/AuthContext.ts","../src/middleware/handlers/redirectHandler.ts","../src/middleware/authenticateMiddleware.ts","../src/middleware/guardMiddleware.ts","../src/middleware/errorMiddlewarer.ts","../src/provider/WebAppAuthProvider.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { LoggerOptions, LogLevel, OIDC_DEFAULT_SCOPES } from \"@azure/msal-common\";\r\n\r\n/**\r\n * Basic authentication stages used to determine\r\n * appropriate action after redirect occurs\r\n */\r\nexport enum AppStages {\r\n    SIGN_IN = \"sign_in\",\r\n    SIGN_OUT = \"sign_out\",\r\n    ACQUIRE_TOKEN = \"acquire_token\",\r\n}\r\n\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nexport const AADAuthorityConstants = {\r\n    COMMON: \"common\",\r\n    ORGANIZATIONS: \"organizations\",\r\n    CONSUMERS: \"consumers\",\r\n};\r\n\r\nexport const OIDC_SCOPES = [...OIDC_DEFAULT_SCOPES, \"email\"];\r\n\r\n/**\r\n * Constants used in access control scenarios\r\n */\r\nexport const AccessControlConstants = {\r\n    GROUPS: \"groups\",\r\n    ROLES: \"roles\",\r\n    CLAIM_NAMES: \"_claim_name\",\r\n    CLAIM_SOURCES: \"_claim_sources\",\r\n    PAGINATION_LINK: \"@odata.nextLink\",\r\n    GRAPH_MEMBERS_ENDPOINT: \"https://graph.microsoft.com/v1.0/me/memberOf\",\r\n    GRAPH_MEMBER_SCOPES: \"User.Read GroupMember.Read.All\",\r\n};\r\n\r\n/**\r\n * Various information constants\r\n */\r\nexport const InfoMessages = {\r\n    REQUEST_FOR_RESOURCE: \"Request made to web API\",\r\n    OVERAGE_OCCURRED: \"User has too many groups. Groups overage claim occurred\",\r\n};\r\n\r\n/**\r\n * Various error constants\r\n */\r\nexport const ErrorMessages = {\r\n    NOT_PERMITTED: \"Not permitted\",\r\n    INVALID_TOKEN: \"Invalid token\",\r\n    CANNOT_DETERMINE_APP_STAGE: \"Cannot determine application stage\",\r\n    CANNOT_VALIDATE_TOKEN: \"Cannot validate token\",\r\n    CSRF_TOKEN_MISMATCH: \"CSRF token in response does not match to original request\",\r\n    INTERACTION_REQUIRED: \"interaction_required\",\r\n    TOKEN_ACQUISITION_FAILED: \"Token acquisition failed\",\r\n    TOKEN_RESPONSE_NULL: \"Token response is null\",\r\n    AUTH_CODE_URL_NOT_OBTAINED: \"Authorization code url cannot be obtained\",\r\n    TOKEN_NOT_FOUND: \"No token found\",\r\n    TOKEN_NOT_DECODED: \"Token cannot be decoded\",\r\n    TOKEN_NOT_VERIFIED: \"Token cannot be verified\",\r\n    KEYS_NOT_OBTAINED: \"Signing keys cannot be obtained\",\r\n    STATE_NOT_FOUND: \"State not found\",\r\n    USER_HAS_NO_ROLE: \"User does not have any roles\",\r\n    USER_NOT_IN_ROLE: \"User does not have this role\",\r\n    USER_HAS_NO_GROUP: \"User does not have any groups\",\r\n    USER_NOT_IN_GROUP: \"User does not have this group\",\r\n    METHOD_NOT_ALLOWED: \"Method not allowed for this route\",\r\n    RULE_NOT_FOUND: \"No rule found for this route\",\r\n    SESSION_NOT_FOUND: \"No session found for this request\",\r\n    KEY_VAULT_CONFIG_NOT_FOUND: \"No coordinates found for Key Vault\",\r\n    CANNOT_OBTAIN_CREDENTIALS_FROM_KEY_VAULT: \"Cannot obtain credentials from Key Vault\",\r\n    SESSION_KEY_NOT_FOUND: \"No session key found in session. Cannot encrypt state data\",\r\n    AUTH_CODE_REQUEST_OBJECT_NOT_FOUND: \"No auth code request object found in session\",\r\n    ID_TOKEN_CLAIMS_NOT_FOUND: \"No id token claims found in session\",\r\n};\r\n\r\n/**\r\n * Various configuration error constants\r\n */\r\nexport const ConfigurationErrorMessages = {\r\n    AUTH_ROUTES_NOT_CONFIGURED: \"Authentication routes are not defined. Ensure that the application settings are configured properly.\",\r\n    NO_PROTECTED_RESOURCE_CONFIGURED: \"No protected resource is configured to acquire a token for. Ensure that the application settings are configured properly.\",\r\n    NO_ACCESS_MATRIX_CONFIGURED: \"No access matrix is configured to control access for. Ensure that the application settings are configured properly.\",\r\n    NO_CLIENT_ID: \"No clientId provided!\",\r\n    INVALID_CLIENT_ID: \"Invalid clientId!\",\r\n    NO_TENANT_INFO: \"No tenant info provided!\",\r\n    INVALID_TENANT_INFO: \"Invalid tenant info!\",\r\n    NO_CLIENT_CREDENTIAL: \"No client credential provided!\",\r\n    NO_REDIRECT_URI: \"No redirect URI provided!\",\r\n    NO_UNAUTHORIZED_ROUTE: \"No unauthorized route provided!\",\r\n};\r\n\r\n/**\r\n * For more information, visit: https://login.microsoftonline.com/error\r\n */\r\nexport const ErrorCodes = {\r\n    65001: \"AADSTS65001\", // consent required\r\n    50076: \"AADSTS50076\", // mfa required\r\n    50079: \"AADSTS50079\", // mfa enrollment required\r\n    50001: \"AADSTS50001\", // invalid resource uri\r\n    65004: \"AADSTS65004\", // user declined consent\r\n    70011: \"AADSTS70011\", // invalid scope\r\n    700022: \"AADSTS700022\", // multiple resources\r\n    700020: \"AADSTS700020\", // interaction required\r\n    90118: \"AADB2C90118\", // password forgotten (B2C)\r\n};\r\n\r\n/**\r\n * Default logger options\r\n */\r\nexport const DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\r\n    loggerCallback: (logLevel, message, containsPii) => {\r\n        if (containsPii) {\r\n            return;\r\n        }\r\n        // eslint-disable-next-line no-console\r\n        console.info(message);\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info,\r\n};\r\n\r\nexport const HttpMethods = {\r\n    GET: \"GET\",\r\n    POST: \"POST\",\r\n    PUT: \"PUT\",\r\n    PATCH: \"PATCH\",\r\n    DELETE: \"DELETE\",\r\n    OPTIONS: \"OPTIONS\",\r\n};\r\n\r\nexport const EMPTY_STRING = \"\";\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { NodeAuthOptions, NodeSystemOptions } from \"@azure/msal-node\";\r\n\r\nexport type AppSettings = {\r\n    authOptions: AuthOptions;\r\n    systemOptions?: NodeSystemOptions;\r\n};\r\n\r\nexport type WebAppSettings = AppSettings & {\r\n    authRoutes: AuthRoutes;\r\n    protectedResources?: ProtectedResourcesMap\r\n};\r\n\r\nexport type AuthOptions = NodeAuthOptions & {\r\n    instance?: string;\r\n    tenantId: string;\r\n};\r\n\r\nexport type AuthRoutes = {\r\n    redirectUri: string;\r\n    frontChannelLogoutUri?: string;\r\n    postLogoutRedirectUri?: string;\r\n};\r\n\r\nexport type ProtectedResourcesMap = Record<string, ProtectedResourceParams>;\r\n\r\nexport type ProtectedResourceParams = {\r\n    scopes: Array<string>,\r\n    routes: Array<string>,\r\n    methods?: Array<string>,\r\n};\r\n\r\nexport enum AppType {\r\n    WebApp\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Logger } from \"@azure/msal-common\";\r\nimport { ConfidentialClientApplication, Configuration, CryptoProvider } from \"@azure/msal-node\";\r\nimport { AppSettings } from \"../config/AppSettingsTypes\";\r\nimport { DEFAULT_LOGGER_OPTIONS } from \"../utils/Constants\";\r\nimport { packageName, packageVersion } from \"../packageMetadata\";\r\n\r\nexport abstract class BaseAuthProvider {\r\n    protected appSettings: AppSettings; // TODO: probably don't need this\r\n    protected msalConfig: Configuration;\r\n    protected cryptoProvider: CryptoProvider;\r\n    protected logger: Logger;\r\n\r\n    protected constructor(appSettings: AppSettings, msalConfig: Configuration) {\r\n        this.appSettings = appSettings;\r\n        this.msalConfig = msalConfig;\r\n        this.cryptoProvider = new CryptoProvider();\r\n        this.logger = new Logger(\r\n            this.msalConfig.system?.loggerOptions || DEFAULT_LOGGER_OPTIONS,\r\n            packageName,\r\n            packageVersion\r\n        );\r\n    }\r\n\r\n    getAppSettings(): AppSettings {\r\n        return this.appSettings;\r\n    }\r\n\r\n    getMsalConfig(): Configuration {\r\n        return this.msalConfig;\r\n    }\r\n\r\n    getMsalClient(): ConfidentialClientApplication {\r\n        return new ConfidentialClientApplication(this.msalConfig);\r\n    }\r\n\r\n    getCryptoProvider(): CryptoProvider {\r\n        return this.cryptoProvider;\r\n    }\r\n\r\n    getLogger(): Logger {\r\n        return this.logger;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nexport const packageName = \"microsoft-identity-express\";\r\nexport const packageVersion = \"beta\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { StringUtils, Constants } from \"@azure/msal-common\";\r\nimport { Configuration } from \"@azure/msal-node\";\r\nimport { AADAuthorityConstants, ConfigurationErrorMessages, OIDC_SCOPES, DEFAULT_LOGGER_OPTIONS } from \"../utils/Constants\";\r\nimport { AppSettings, AppType, ProtectedResourceParams, ProtectedResourcesMap, WebAppSettings } from \"./AppSettingsTypes\";\r\n\r\nexport class AppSettingsHelper {\r\n    /**\r\n     * Maps the custom configuration object to configuration\r\n     * object expected by MSAL Node ConfidentialClientApplication class\r\n     * @param {AppSettings} appSettings: configuration object\r\n     * @returns {Configuration}\r\n     */\r\n    static getMsalConfiguration(appSettings: AppSettings): Configuration {\r\n        return {\r\n            auth: {\r\n                clientId: appSettings.authOptions.clientId,\r\n                authority: appSettings.authOptions.instance\r\n                    ? `https://${appSettings.authOptions.instance}/${appSettings.authOptions.tenantId}`\r\n                    : `https://${Constants.DEFAULT_AUTHORITY_HOST}/${appSettings.authOptions.tenantId}`,\r\n                ...(appSettings.authOptions.hasOwnProperty(\"clientSecret\") && {\r\n                    clientSecret: appSettings.authOptions.clientSecret,\r\n                }),\r\n                ...(appSettings.authOptions.hasOwnProperty(\"clientCertificate\") && {\r\n                    clientCertificate: appSettings.authOptions.clientCertificate,\r\n                }),\r\n            },\r\n            system: {\r\n                loggerOptions: appSettings.systemOptions?.loggerOptions ? appSettings.systemOptions.loggerOptions : DEFAULT_LOGGER_OPTIONS,\r\n                proxyUrl: appSettings.systemOptions?.proxyUrl\r\n            },\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Validates the fields in the configuration file\r\n     * @param {AppSettings} appSettings: configuration object\r\n     */\r\n    static validateAppSettings(appSettings: AppSettings, appType: AppType): void {\r\n        if (StringUtils.isEmpty(appSettings.authOptions.clientId)) {\r\n            throw new Error(ConfigurationErrorMessages.NO_CLIENT_ID);\r\n        } else if (!AppSettingsHelper.isGuid(appSettings.authOptions.clientId)) {\r\n            throw new Error(ConfigurationErrorMessages.INVALID_CLIENT_ID);\r\n        }\r\n\r\n        if (StringUtils.isEmpty(appSettings.authOptions.tenantId)) {\r\n            throw new Error(ConfigurationErrorMessages.NO_TENANT_INFO);\r\n        } else if (\r\n            !AppSettingsHelper.isGuid(appSettings.authOptions.tenantId) &&\r\n            !Object.values(AADAuthorityConstants).includes(appSettings.authOptions.tenantId)\r\n        ) {\r\n            throw new Error(ConfigurationErrorMessages.INVALID_TENANT_INFO);\r\n        }\r\n\r\n        switch (appType) {\r\n            case AppType.WebApp:\r\n                if (StringUtils.isEmpty((<WebAppSettings>appSettings).authRoutes.redirectUri)) {\r\n                    throw new Error(ConfigurationErrorMessages.NO_REDIRECT_URI);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Util method to get the resource name for a given scope(s)\r\n     * @param {Array} scopes: an array of scopes from the token response\r\n     * @param {ProtectedResourcesMap} protectedResources: application authentication parameters\r\n     * @returns {string}\r\n     */\r\n    static getResourceNameFromScopes(scopes: string[], protectedResources: ProtectedResourcesMap): string {\r\n        const effectiveScopes = this.getEffectiveScopes(scopes).map((scope) => scope.toLowerCase());\r\n\r\n        const index = Object.values(protectedResources)\r\n            .findIndex((resourceParams: ProtectedResourceParams) =>\r\n                resourceParams.scopes.every((scope) => effectiveScopes.includes(scope.toLowerCase()))\r\n            );\r\n\r\n        const resourceName = Object.keys(protectedResources)[index];\r\n        return resourceName;\r\n    }\r\n\r\n    /**\r\n     * Util method to strip the default OIDC scopes from the scopes array\r\n     * @param {Array} scopesList: full list of scopes for this resource\r\n     * @returns {Array}\r\n     */\r\n    static getEffectiveScopes(scopesList: string[]): string[] {\r\n        const effectiveScopesList = scopesList.filter(scope => !OIDC_SCOPES.includes(scope));\r\n        return effectiveScopesList;\r\n    }\r\n\r\n    /**\r\n     * Verifies if a given string is GUID\r\n     * @param {string} guid\r\n     * @returns {boolean}\r\n     */\r\n    static isGuid(guid: string): boolean {\r\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n        return regexGuid.test(guid);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport axios, { AxiosResponse, AxiosRequestConfig } from \"axios\";\r\nimport { StringUtils } from \"@azure/msal-common\";\r\nimport { AccessControlConstants, ErrorMessages } from \"../utils/Constants\";\r\n\r\nexport class FetchManager {\r\n    /**\r\n     * Calls a resource endpoint\r\n     * @param {string} endpoint: URL of the endpoint to be called\r\n     * @returns {Promise<any>}\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\r\n    static callApiEndpoint = async (endpoint: string, options?: AxiosRequestConfig): Promise<any> => {\r\n        try {\r\n            const response: AxiosResponse = await axios.get(endpoint, options);\r\n            return response;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Calls a resource endpoint with a raw access token\r\n     * using the authorization bearer token scheme\r\n     * @param {string} endpoint: URL of the endpoint to be called\r\n     * @param {string} accessToken: Raw access token\r\n     * @returns {Promise<any>}\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\r\n    static callApiEndpointWithToken = async (endpoint: string, accessToken: string): Promise<any> => {\r\n        if (StringUtils.isEmpty(accessToken)) {\r\n            throw new Error(ErrorMessages.TOKEN_NOT_FOUND);\r\n        }\r\n\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n            },\r\n        };\r\n\r\n        try {\r\n            const response = await FetchManager.callApiEndpoint(endpoint, options);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    static async fetchCloudDiscoveryMetadata(tenantId: string): Promise<string> {\r\n        const endpoint = \"https://login.microsoftonline.com/common/discovery/instance\";\r\n\r\n        try {\r\n            const response = await FetchManager.callApiEndpoint(endpoint, {\r\n                params: {\r\n                    \"api-version\": \"1.1\",\r\n                    \"authorization_endpoint\": `https://login.microsoftonline.com/${tenantId}/oauth2/v2.0/authorize`\r\n                }\r\n            });\r\n            const cloudDiscoveryMetadata = JSON.stringify(response.data);\r\n            return cloudDiscoveryMetadata;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async fetchAuthorityMetadata(tenantId: string): Promise<string> {\r\n        const endpoint = `https://login.microsoftonline.com/${tenantId}/v2.0/.well-known/openid-configuration`;\r\n\r\n        try {\r\n            const response = await FetchManager.callApiEndpoint(endpoint);\r\n            const authorityMetadata = JSON.stringify(response.data);\r\n            return authorityMetadata;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles queries against Microsoft Graph that return multiple pages of data\r\n     * @param {string} accessToken: access token required by endpoint\r\n     * @param {string} nextPage: next page link\r\n     * @param {Array} data: stores data from each page\r\n     * @returns {Promise<string[]>}\r\n     */\r\n    static handlePagination = async (accessToken: string, nextPage: string, data: string[] = []): Promise<string[]> => {\r\n        try {\r\n            const graphResponse = await (await FetchManager.callApiEndpointWithToken(nextPage, accessToken)).data;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\r\n            graphResponse[\"value\"].map((v: any) => data.push(v.id));\r\n\r\n            if (graphResponse[AccessControlConstants.PAGINATION_LINK]) {\r\n                return await FetchManager.handlePagination(\r\n                    accessToken,\r\n                    graphResponse[AccessControlConstants.PAGINATION_LINK],\r\n                    data\r\n                );\r\n            } else {\r\n                return data;\r\n            }\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    };\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { IUri, UrlString } from \"@azure/msal-common\";\r\nimport { Request } from \"../middleware/MiddlewareTypes\";\r\n\r\nexport class UrlUtils {\r\n    /**\r\n     * Returns the absolute URL from a given request and path string\r\n     * @param {string} url: a given URL\r\n     * @param {string} protocol: protocol of the request\r\n     * @param {string} host: host of the request\r\n     * @returns {string}\r\n     */\r\n    static ensureAbsoluteUrl = (url: string, protocol: string, host: string): string => {\r\n        const urlComponents: IUri = new UrlString(url).getUrlComponents();\r\n\r\n        if (!urlComponents.Protocol) {\r\n            if (!urlComponents.HostNameAndPort && !url.startsWith(\"www\")) {\r\n                if (!url.startsWith(\"/\")) {\r\n                    return protocol + \"://\" + host + \"/\" + url;\r\n                }\r\n                return protocol + \"://\" + host + url;\r\n            }\r\n            return protocol + \"://\" + url;\r\n        } else {\r\n            return url;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param req \r\n     * @param url \r\n     * @returns \r\n     */\r\n    static ensureAbsoluteUrlFromRequest = (req: Request, url?: string): string => {\r\n        if (url) {\r\n            return UrlUtils.ensureAbsoluteUrl(url, req.protocol, req.get(\"host\") || req.hostname);\r\n        } else {\r\n            return UrlUtils.ensureAbsoluteUrl(req.originalUrl, req.protocol, req.get(\"host\") || req.hostname);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param req \r\n     * @param url \r\n     * @returns \r\n     */\r\n    static checkIfRequestsMatch = (req: Request, url: string): boolean => {\r\n        return UrlUtils.ensureAbsoluteUrlFromRequest(req) === UrlUtils.ensureAbsoluteUrlFromRequest(req, url);\r\n    };\r\n\r\n    /**\r\n     * Returns the path segment from a given URL\r\n     * @param {string} url: a given URL\r\n     * @returns {string}\r\n     */\r\n    static getPathFromUrl = (url: string): string => {\r\n        const urlComponents: IUri = new UrlString(url).getUrlComponents();\r\n        return `/${urlComponents.PathSegments.join(\"/\")}`;\r\n    };\r\n\r\n    /**\r\n     * Ensures that the URL contains a trailing slash at the end\r\n     * @param {string} path: a given path\r\n     * @returns {string}\r\n     */\r\n    static enforceLeadingSlash = (path: string): string => {\r\n        return path.split(\"\")[0] === \"/\" ? path : \"/\" + path;\r\n    };\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ResponseMode } from \"@azure/msal-common\";\r\nimport { AuthorizationCodeRequest, AuthorizationUrlRequest } from \"@azure/msal-node\";\r\nimport { WebAppAuthProvider } from \"../../provider/WebAppAuthProvider\";\r\nimport { LoginOptions, AppState } from \"../MiddlewareOptions\";\r\nimport { Request, Response, NextFunction, RequestHandler } from \"../MiddlewareTypes\";\r\nimport { UrlUtils } from \"../../utils/UrlUtils\";\r\nimport { EMPTY_STRING } from \"../../utils/Constants\";\r\n\r\nfunction loginHandler(this: WebAppAuthProvider, options: LoginOptions): RequestHandler {\r\n    return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n        this.getLogger().trace(\"LoginHandler called\");\r\n\r\n        const state: AppState = {\r\n            redirectTo: options.postLoginRedirectUri || \"/\",\r\n            customState: options.state\r\n        };\r\n\r\n        const authUrlParams: AuthorizationUrlRequest = {\r\n            scopes: options.scopes,\r\n            state: this.getCryptoProvider().base64Encode(JSON.stringify(state)),\r\n            redirectUri: UrlUtils.ensureAbsoluteUrl(\r\n                this.webAppSettings.authRoutes.redirectUri,\r\n                req.protocol,\r\n                req.get(\"host\") || req.hostname\r\n            ),\r\n            responseMode: ResponseMode.FORM_POST,\r\n            prompt: options.prompt || undefined,\r\n        };\r\n\r\n        const authCodeParams: AuthorizationCodeRequest = {\r\n            scopes: authUrlParams.scopes,\r\n            state: authUrlParams.state,\r\n            redirectUri: authUrlParams.redirectUri,\r\n            code: EMPTY_STRING,\r\n        };\r\n\r\n        req.session.tokenRequestParams = {\r\n            ...authCodeParams,\r\n        };\r\n\r\n        try {\r\n            // request an authorization code to exchange for tokens\r\n            const response = await this.getMsalClient().getAuthCodeUrl(authUrlParams);\r\n            res.redirect(response);\r\n        } catch (error) {\r\n            next(error);\r\n        }\r\n    };\r\n}\r\n\r\nexport default loginHandler;\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { WebAppAuthProvider } from \"../../provider/WebAppAuthProvider\";\r\nimport { LogoutOptions } from \"../MiddlewareOptions\";\r\nimport { Request, Response, RequestHandler } from \"../MiddlewareTypes\";\r\nimport { UrlUtils } from \"../../utils/UrlUtils\";\r\n\r\nfunction logoutHandler(this: WebAppAuthProvider, options: LogoutOptions): RequestHandler {\r\n    return async (req: Request, res: Response): Promise<void> => {\r\n        this.getLogger().trace(\"logoutHandler called\");\r\n        \r\n        let logoutUri = options.postLogoutRedirectUri || \"/\";\r\n\r\n        try {\r\n            const tokenCache = this.getMsalClient().getTokenCache();\r\n            const account = await tokenCache.getAccountByHomeId(req.authContext.getAccount().homeAccountId);\r\n\r\n            if (account) {\r\n                await tokenCache.removeAccount(account);\r\n            }\r\n        } catch (error) {\r\n            this.logger.error(`Error occurred while clearing cache for user: ${JSON.stringify(error)}`);\r\n        }\r\n\r\n        // TODO: should be default\r\n        if (options.idpLogout) {\r\n            /**\r\n             * Construct a logout URI and redirect the user to end the\r\n             * session with Azure AD. For more information, visit:\r\n             * (AAD) https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc#send-a-sign-out-request\r\n             */\r\n\r\n            const postLogoutRedirectUri = UrlUtils.ensureAbsoluteUrl(\r\n                options.postLogoutRedirectUri || \"/\",\r\n                req.protocol,\r\n                req.get(\"host\") || req.hostname\r\n            );\r\n\r\n            // FIXME: need the canonical uri (ending with slash) && esnure absolute url\r\n            logoutUri = `${this.getMsalConfig().auth.authority}/oauth2/v2.0/logout?post_logout_redirect_uri=${postLogoutRedirectUri}`;\r\n        }\r\n\r\n        req.session.destroy(() => {\r\n            // TODO: remove/expire cookie?\r\n            res.redirect(logoutUri);\r\n        });\r\n    };\r\n}\r\n\r\nexport default logoutHandler;\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { InteractionRequiredAuthError } from \"@azure/msal-node\";\r\n\r\n/**\r\n * Token Validation library error class thrown for configuration errors\r\n */\r\nexport class InteractionRequiredError extends InteractionRequiredAuthError {\r\n    scopes: Array<string> = [];\r\n\r\n    constructor(errorCode: string, errorMessage?: string, subError?: string, scopes?: Array<string>, claims?: string) {\r\n        super(errorCode, errorMessage, subError);\r\n        this.name = \"InteractionRequiredError\";\r\n        this.scopes = scopes || [];\r\n        this.claims = claims || \"\";\r\n        \r\n        Object.setPrototypeOf(this, InteractionRequiredError.prototype);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthenticationResult, InteractionRequiredAuthError, SilentFlowRequest } from \"@azure/msal-node\";\r\nimport { WebAppAuthProvider } from \"../../provider/WebAppAuthProvider\";\r\nimport { Request, Response, NextFunction, RequestHandler } from \"../MiddlewareTypes\";\r\nimport { TokenRequestOptions } from \"../MiddlewareOptions\";\r\nimport { InteractionRequiredError } from \"../../error/InteractionRequiredError\";\r\nimport { AppSettingsHelper } from \"../../config/AppSettingsHelper\";\r\n\r\nfunction acquireTokenHandler(this: WebAppAuthProvider, options: TokenRequestOptions, useAsMiddleware?: boolean): RequestHandler {\r\n    return async (req: Request, res: Response, next: NextFunction): Promise<AuthenticationResult | void> => {\r\n        this.getLogger().trace(\"acquireTokenHandler called\");\r\n\r\n        try {\r\n            const account = options.account || req.session.account;\r\n\r\n            if (!account) {\r\n                throw new InteractionRequiredError(\"no_account_found\", \"No account found either in options or in session\", undefined, options.scopes);\r\n            }\r\n    \r\n            const silentRequest: SilentFlowRequest = {\r\n                account: account,\r\n                scopes: options.scopes,\r\n            };\r\n\r\n            const msalInstance = this.getMsalClient();\r\n            msalInstance.getTokenCache().deserialize(req.session.tokenCache || \"\");\r\n            const tokenResponse = await msalInstance.acquireTokenSilent(silentRequest);\r\n            req.session.tokenCache = msalInstance.getTokenCache().serialize();\r\n\r\n            if (!tokenResponse) {\r\n                throw new InteractionRequiredError(\"null_response\", \"AcquireTokenSilent return null response\", undefined, options.scopes);\r\n            }\r\n\r\n            if (useAsMiddleware) {\r\n                if (this.webAppSettings.protectedResources) {\r\n                    const resource = AppSettingsHelper.getResourceNameFromScopes(\r\n                        tokenResponse.scopes,\r\n                        this.webAppSettings.protectedResources\r\n                    );\r\n\r\n                    if (!req.session.protectedResources) {\r\n                        req.session.protectedResources = {\r\n                            [resource]: tokenResponse\r\n                        };\r\n                    } else {\r\n                        req.session.protectedResources[resource] = tokenResponse;\r\n                    }\r\n                }\r\n\r\n                return next();\r\n            }\r\n\r\n            return tokenResponse;\r\n        } catch (error) {\r\n            if (error instanceof InteractionRequiredAuthError) {\r\n                return next(new InteractionRequiredError(\r\n                    error.errorCode,\r\n                    error.errorMessage,\r\n                    error.subError,\r\n                    options.scopes,\r\n                    error.claims)\r\n                ); // TODO: consider useAsMiddleware enabled\r\n            }\r\n\r\n            next(error);\r\n        }\r\n    };\r\n}\r\n\r\nexport default acquireTokenHandler;\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { TimeUtils } from \"@azure/msal-common\";\r\nimport { AccountInfo } from \"@azure/msal-node\";\r\nimport { WebAppAuthProvider } from \"../../provider/WebAppAuthProvider\";\r\nimport { RequestContext, RequestHandler } from \"../MiddlewareTypes\";\r\nimport { LoginOptions, LogoutOptions, TokenRequestOptions } from \"../MiddlewareOptions\";\r\nimport loginHandler from \"../handlers/loginHandler\";\r\nimport logoutHandler from \"../handlers/logoutHandler\";\r\nimport acquireTokenHandler from \"../handlers/acquireTokenHandler\";\r\nexport class AuthContext {\r\n    private provider: WebAppAuthProvider;\r\n    private context: RequestContext;\r\n\r\n    constructor(provider: WebAppAuthProvider, context: RequestContext) {\r\n        this.provider = provider;\r\n        this.context = context;\r\n    }\r\n\r\n    /**\r\n     * Initiates login flow\r\n     * @param {LoginOptions} options: options to modify login request\r\n     * @returns {RequestHandler}\r\n     */\r\n    login(\r\n        options: LoginOptions = {\r\n            postLoginRedirectUri: \"/\",\r\n            postFailureRedirectUri: \"/\",\r\n            scopes: [],\r\n        }\r\n    ): RequestHandler {\r\n        return loginHandler.call(this.provider, options);\r\n    }\r\n\r\n    /**\r\n     * Initiates logout flow and destroys the current session\r\n     * @param {LogoutOptions} options: options to modify logout request\r\n     * @returns {RequestHandler}\r\n     */\r\n    logout(\r\n        options: LogoutOptions = {\r\n            postLogoutRedirectUri: \"/\",\r\n            idpLogout: true\r\n        }\r\n    ): RequestHandler {\r\n        return logoutHandler.call(this.provider, options);\r\n    }\r\n\r\n    /**\r\n     * Acquires an access token for given scopes\r\n     * @param {TokenRequestOptions} options: options to modify token request\r\n     * @returns {RequestHandler}\r\n     */\r\n    acquireToken(options: TokenRequestOptions = {\r\n        scopes: [],\r\n    }): RequestHandler {\r\n        return acquireTokenHandler.call(this.provider, options);\r\n    }\r\n\r\n    /**\r\n     * Returns the account object from the session\r\n     * @returns {AccountInfo} account object\r\n     */\r\n    getAccount(): AccountInfo {\r\n        return this.context.req.session.account;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the account object is not null\r\n     * @returns {boolean} authentication status\r\n     */\r\n    isAuthenticated(): boolean {\r\n        return !!this.getAccount();\r\n    }\r\n\r\n    /**\r\n     * Returns the cached token for a given resource\r\n     * @param {string} resourceName: name of resource to retrieve token for \r\n     * @returns {string | null} cached access token\r\n     */\r\n    getCachedTokenForResource(resourceName: string): string | null {\r\n        if (this.context.req.session.protectedResources && this.context.req.session.protectedResources[resourceName]) {\r\n            \r\n            const expiresOn = new Date(\r\n                this.context.req.session.protectedResources[resourceName].expiresOn as unknown as string\r\n            );\r\n            \r\n            if (!expiresOn) {\r\n                return null; // would this ever happen?\r\n            }\r\n\r\n            const isTokenExpired = TimeUtils.isTokenExpired(\r\n                Math.floor(expiresOn.getTime() / 1000).toString(),\r\n                300 // offset in seconds TODO: should get from config\r\n            );\r\n\r\n            if (!isTokenExpired) {\r\n                return this.context.req.session.protectedResources[resourceName].accessToken;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthorizationCodePayload, AuthorizationCodeRequest } from \"@azure/msal-node\";\r\nimport { WebAppAuthProvider } from \"../../provider/WebAppAuthProvider\";\r\nimport { Request, Response, NextFunction, RequestHandler } from \"../MiddlewareTypes\";\r\nimport { AppState } from \"../MiddlewareOptions\";\r\nimport { AppSettingsHelper } from \"../../config/AppSettingsHelper\";\r\n\r\nfunction redirectHandler(this: WebAppAuthProvider): RequestHandler {\r\n    return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n        this.getLogger().verbose(\"redirectHandler called\");\r\n\r\n        if (!req.body || !req.body.code) {\r\n            this.logger.error(\"Authorization code not found in the response\");\r\n            return next(new Error(\"AUTH_CODE_NOT_FOUND\")); // TODO: need to create a custom error for this\r\n        }\r\n\r\n        const tokenRequest: AuthorizationCodeRequest = {\r\n            ...req.session.tokenRequestParams,\r\n            code: req.body.code as string\r\n        };\r\n\r\n        try {\r\n            const msalInstance = this.getMsalClient();\r\n            msalInstance.getTokenCache().deserialize(req.session.tokenCache || \"\");\r\n\r\n            const tokenResponse = await msalInstance.acquireTokenByCode(\r\n                tokenRequest,\r\n                req.body as AuthorizationCodePayload\r\n            );\r\n\r\n            req.session.tokenCache = msalInstance.getTokenCache().serialize();\r\n\r\n            if (!tokenResponse) {\r\n                return res.status(403).send(\"No token response found\");\r\n            }\r\n\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            req.session.account = tokenResponse.account!; // account will never be null in this grant type\r\n            req.session.isAuthenticated = true;\r\n            \r\n            if (this.webAppSettings.protectedResources) {\r\n                // TODO: what if just acquiring a token without configuring protectedResources?\r\n                const resource = AppSettingsHelper.getResourceNameFromScopes(\r\n                    tokenResponse.scopes,\r\n                    this.webAppSettings.protectedResources\r\n                );\r\n\r\n                if (!req.session.protectedResources) {\r\n                    req.session.protectedResources = {\r\n                        [resource]: tokenResponse\r\n                    };\r\n                } else {\r\n                    req.session.protectedResources[resource] = tokenResponse;\r\n                }\r\n            }\r\n\r\n            const { redirectTo } = req.body.state ?\r\n                JSON.parse(this.getCryptoProvider().base64Decode(req.body.state as string)) as AppState\r\n                :\r\n                { redirectTo: \"/\" };\r\n\r\n            res.redirect(redirectTo);\r\n        } catch (error) {\r\n            next(error);\r\n        }\r\n    };\r\n}\r\n\r\nexport default redirectHandler;\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { WebAppAuthProvider } from \"../provider/WebAppAuthProvider\";\r\nimport { AuthenticateMiddlewareOptions } from \"./MiddlewareOptions\";\r\nimport { Request, Response, NextFunction, RequestHandler } from \"./MiddlewareTypes\";\r\nimport { UrlUtils } from \"../utils/UrlUtils\";\r\nimport { ErrorMessages, HttpMethods } from \"../utils/Constants\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\nimport redirectHandler from \"./handlers/redirectHandler\";\r\nimport { ProtectedResourceParams } from \"../config/AppSettingsTypes\";\r\nimport acquireTokenHandler from \"./handlers/acquireTokenHandler\";\r\n\r\n/**\r\n * Authenticates incoming requests using the WebAppAuthProvider\r\n * @param {WebAppAuthProvider} this \r\n * @param {AuthenticateMiddlewareOptions} options \r\n * @returns {RequestHandler}\r\n */\r\nfunction authenticateMiddleware(this: WebAppAuthProvider, options: AuthenticateMiddlewareOptions): RequestHandler {\r\n    return (req: Request, res: Response, next: NextFunction): void | RequestHandler => {\r\n        this.getLogger().trace(\"Authenticating request\");\r\n\r\n        if (options.useSession && !req.session) {\r\n            throw new Error(ErrorMessages.SESSION_NOT_FOUND);\r\n        }\r\n\r\n        req.authContext = new AuthContext(this, { req, res, next });\r\n\r\n        if (req.method === HttpMethods.POST) {\r\n            if (UrlUtils.ensureAbsoluteUrlFromRequest(req) === UrlUtils.ensureAbsoluteUrlFromRequest(req, this.webAppSettings.authRoutes.redirectUri)) {\r\n                this.getLogger().trace(\"Handling redirect\");\r\n                return redirectHandler.call(this)(req, res, next);\r\n            }\r\n        }\r\n\r\n        if (this.webAppSettings.authRoutes.frontChannelLogoutUri) {\r\n            if (req.method === HttpMethods.GET) {\r\n                if (UrlUtils.ensureAbsoluteUrlFromRequest(req) === UrlUtils.ensureAbsoluteUrlFromRequest(req, this.webAppSettings.authRoutes.frontChannelLogoutUri)) {\r\n                    this.getLogger().trace(\"frontChannelLogoutUri called\");\r\n\r\n                    if (req.session.isAuthenticated) {\r\n                        return req.authContext.logout({\r\n                            postLogoutRedirectUri: \"/\",\r\n                            idpLogout: false\r\n                        })(req, res, next);\r\n                    }\r\n\r\n                    return res.status(401).send(\"Unauthorized\");\r\n                }\r\n            }\r\n        }\r\n\r\n        if (options.protectAllRoutes) {\r\n            if (!req.authContext.isAuthenticated()) {\r\n                return req.authContext.login({\r\n                    scopes: [],\r\n                    postLoginRedirectUri: req.originalUrl\r\n                })(req, res, next);\r\n            }\r\n        }\r\n\r\n        if (options.acquireTokenForResources) {\r\n            // acquire token for routes calling protected resources\r\n            Object.entries(options.acquireTokenForResources).forEach((params: [string, ProtectedResourceParams]) => {\r\n                const [resourceName, resourceParams] = params;\r\n\r\n                if (req.authContext.getCachedTokenForResource(resourceName)) {\r\n                    this.getLogger().trace(\"Cached token found for resource endpoint\");\r\n                    return;\r\n                }\r\n\r\n                if (resourceParams.routes.includes(req.originalUrl)) {\r\n                    if ((resourceParams.methods?.length && resourceParams.methods.includes(req.method)) || req.method === HttpMethods.GET) {\r\n                        this.getLogger().trace(\"Acquiring token for resource endpoint\");\r\n                        return acquireTokenHandler.call(this, { scopes: resourceParams.scopes }, true)(req, res, next);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        next();\r\n    };\r\n}\r\n\r\nexport default authenticateMiddleware;\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { WebAppAuthProvider } from \"../provider/WebAppAuthProvider\";\r\nimport { Request, Response, NextFunction, RequestHandler } from \"./MiddlewareTypes\";\r\nimport { RouteGuardOptions } from \"./MiddlewareOptions\";\r\n\r\nfunction guardMiddleware(this: WebAppAuthProvider, options: RouteGuardOptions): RequestHandler {\r\n    return (req: Request, res: Response, next: NextFunction): void | Response => {\r\n        if (!req.authContext.isAuthenticated()) {\r\n            if (options.forceLogin) {\r\n                return req.authContext.login({\r\n                    scopes: [],\r\n                    postLoginRedirectUri: req.originalUrl,\r\n                })(req, res, next);\r\n            }\r\n\r\n            return res.status(401).send(\"Unauthorized\");\r\n        }\r\n\r\n        if (options.idTokenClaims) {\r\n            const tokenClaims = req.authContext.getAccount()?.idTokenClaims || {};\r\n            const requiredClaims = options.idTokenClaims;\r\n\r\n            const hasClaims = Object.keys(requiredClaims).every((claim: string) => {\r\n\r\n                if (requiredClaims[claim] && tokenClaims[claim]) {\r\n\r\n                    switch (typeof requiredClaims[claim]) {\r\n                        case \"string\" || \"number\":\r\n                            return requiredClaims[claim] === tokenClaims[claim];\r\n                        case \"object\":\r\n                            if (Array.isArray(requiredClaims[claim])) {\r\n                                const requiredClaimsArray = requiredClaims[claim] as [];\r\n                                const tokenClaimsArray = tokenClaims[claim] as [];\r\n\r\n                                return requiredClaimsArray.some(\r\n                                    (requiredClaim) => tokenClaimsArray.indexOf(requiredClaim) >= 0\r\n                                );\r\n                            }\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n                return false;\r\n            });\r\n\r\n            if (!hasClaims) {\r\n                return res.status(403).send(\"Forbidden\");\r\n            }\r\n        }\r\n\r\n        next();\r\n    };\r\n}\r\n\r\nexport default guardMiddleware;\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { WebAppAuthProvider } from \"../provider/WebAppAuthProvider\";\r\nimport { Request, Response, NextFunction, ErrorRequestHandler } from \"./MiddlewareTypes\";\r\nimport { InteractionRequiredError } from \"../error/InteractionRequiredError\";\r\n\r\nfunction errorMiddleware(this: WebAppAuthProvider): ErrorRequestHandler {\r\n    return (err: unknown, req: Request, res: Response, next: NextFunction): Response | void => {\r\n        if (err instanceof InteractionRequiredError) {\r\n            return req.authContext.login({\r\n                scopes: err.scopes || [],\r\n                claims: err.claims || undefined,\r\n                postLoginRedirectUri: req.originalUrl\r\n            })(req, res, next);\r\n        }\r\n\r\n        next(err);\r\n    };\r\n}\r\n\r\nexport default errorMiddleware;\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Configuration } from \"@azure/msal-node\";\r\nimport { BaseAuthProvider } from \"./BaseAuthProvider\";\r\nimport { AppSettingsHelper } from \"../config/AppSettingsHelper\";\r\nimport { FetchManager } from \"../network/FetchManager\";\r\nimport { AppSettings, WebAppSettings, AppType } from \"../config/AppSettingsTypes\";\r\nimport { RequestHandler, ErrorRequestHandler } from \"../middleware/MiddlewareTypes\";\r\nimport { AuthenticateMiddlewareOptions, RouteGuardOptions } from \"../middleware/MiddlewareOptions\";\r\nimport authenticateMiddleware from \"../middleware/authenticateMiddleware\";\r\nimport guardMiddleware from \"../middleware/guardMiddleware\";\r\nimport errorMiddleware from \"../middleware/errorMiddlewarer\";\r\n\r\nexport class WebAppAuthProvider extends BaseAuthProvider {\r\n    webAppSettings: WebAppSettings;\r\n\r\n    /**\r\n     * @param {AppSettings} appSettings\r\n     * @param {Configuration} msalConfig\r\n     * @constructor\r\n     */\r\n    private constructor(appSettings: AppSettings, msalConfig: Configuration) {\r\n        super(appSettings, msalConfig);\r\n        this.webAppSettings = appSettings as WebAppSettings;\r\n    }\r\n\r\n    /**\r\n     * Static method to async initialize WebAppAuthProvider\r\n     * @param {AuthenticateMiddlewareOptions} appSettings: configuration object\r\n     * @returns {Promise<WebAppAuthProvider>}\r\n     */\r\n    static async initialize(appSettings: AppSettings): Promise<WebAppAuthProvider> {\r\n        AppSettingsHelper.validateAppSettings(appSettings, AppType.WebApp);\r\n\r\n        const msalConfig = AppSettingsHelper.getMsalConfiguration(appSettings);\r\n\r\n        const [discoveryMetadata, authorityMetadata] = await Promise.all([\r\n            FetchManager.fetchCloudDiscoveryMetadata(appSettings.authOptions.tenantId),\r\n            FetchManager.fetchAuthorityMetadata(appSettings.authOptions.tenantId)\r\n        ]);\r\n\r\n        msalConfig.auth.cloudDiscoveryMetadata = discoveryMetadata;\r\n        msalConfig.auth.authorityMetadata = authorityMetadata;\r\n\r\n        return new WebAppAuthProvider(appSettings, msalConfig);\r\n    }\r\n\r\n    /**\r\n     * Sets request context, default routes and handlers\r\n     * @param {AuthenticateMiddlewareOptions} options: options to modify middleware behavior\r\n     * @returns {RequestHandler}\r\n     */\r\n    authenticate(options: AuthenticateMiddlewareOptions = {\r\n        protectAllRoutes: false,\r\n        useSession: true,\r\n    }): RequestHandler {\r\n        return authenticateMiddleware.call(this, options);\r\n    }\r\n\r\n    /**\r\n     * Guards a specified route with given options\r\n     * @param {RouteGuardOptions} options: options to modify middleware behavior\r\n     * @returns {RequestHandler}\r\n     */\r\n    guard(options: RouteGuardOptions = {\r\n        forceLogin: true,\r\n    }): RequestHandler {\r\n        return guardMiddleware.call(this, options);\r\n    }\r\n\r\n    /**\r\n     * Middleware to handle interaction required errors\r\n     * @returns {ErrorRequestHandler}\r\n     */\r\n    interactionErrorHandler(): ErrorRequestHandler {\r\n        return errorMiddleware.call(this);\r\n    }\r\n}\r\n"],"names":["AppStages","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","AppType","AADAuthorityConstants","COMMON","ORGANIZATIONS","CONSUMERS","OIDC_SCOPES","OIDC_DEFAULT_SCOPES","DEFAULT_LOGGER_OPTIONS","loggerCallback","logLevel","message","containsPii","console","piiLoggingEnabled","LogLevel","Info","BaseAuthProvider","appSettings","msalConfig","cryptoProvider","CryptoProvider","logger","Logger","system","loggerOptions","getAppSettings","getMsalConfig","getMsalClient","ConfidentialClientApplication","getCryptoProvider","getLogger","AppSettingsHelper","getMsalConfiguration","auth","clientId","authOptions","authority","instance","tenantId","Constants","DEFAULT_AUTHORITY_HOST","clientSecret","clientCertificate","systemOptions","proxyUrl","_appSettings$systemOp2","validateAppSettings","appType","StringUtils","isEmpty","isGuid","includes","WebApp","authRoutes","redirectUri","getResourceNameFromScopes","scopes","protectedResources","effectiveScopes","getEffectiveScopes","map","scope","toLowerCase","index","findIndex","resourceParams","every","scopesList","filter","guid","test","FetchManager","fetchCloudDiscoveryMetadata","callApiEndpoint","params","cloudDiscoveryMetadata","JSON","stringify","data","fetchAuthorityMetadata","endpoint","authorityMetadata","options","axios","get","accessToken","headers","Authorization","nextPage","callApiEndpointWithToken","graphResponse","v","id","handlePagination","UrlUtils","loginHandler","req","res","_this","trace","redirectTo","postLoginRedirectUri","customState","authUrlParams","base64Encode","ensureAbsoluteUrl","webAppSettings","protocol","hostname","responseMode","ResponseMode","FORM_POST","prompt","session","tokenRequestParams","code","getAuthCodeUrl","redirect","logoutHandler","logoutUri","postLogoutRedirectUri","tokenCache","getTokenCache","getAccountByHomeId","authContext","getAccount","homeAccountId","account","removeAccount","idpLogout","destroy","url","host","urlComponents","UrlString","getUrlComponents","Protocol","HostNameAndPort","startsWith","originalUrl","ensureAbsoluteUrlFromRequest","PathSegments","join","path","split","InteractionRequiredError","errorCode","errorMessage","subError","claims","InteractionRequiredAuthError","acquireTokenHandler","useAsMiddleware","silentRequest","msalInstance","deserialize","acquireTokenSilent","tokenResponse","serialize","resource","_context","AuthContext","provider","login","postFailureRedirectUri","logout","acquireToken","isAuthenticated","getCachedTokenForResource","resourceName","expiresOn","Date","TimeUtils","isTokenExpired","Math","floor","getTime","toString","redirectHandler","verbose","body","tokenRequest","acquireTokenByCode","status","send","parse","base64Decode","authenticateMiddleware","useSession","frontChannelLogoutUri","protectAllRoutes","acquireTokenForResources","entries","routes","methods","guardMiddleware","forceLogin","idTokenClaims","tokenClaims","requiredClaims","claim","Array","isArray","tokenClaimsArray","some","requiredClaim","indexOf","errorMiddleware","WebAppAuthProvider","initialize","all","authenticate","guard","interactionErrorHandler"],"mappings":"k3BAWYA,mBCJZ,IAAIC,EAAW,SAAUC,GAGvB,IAAIC,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOC,EAAKC,EAAKC,GAOxB,OANAf,OAAOgB,eAAeH,EAAKC,EAAK,CAC9BC,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAELN,EAAIC,GAEb,IAEEF,EAAO,GAAI,IACX,MAAOQ,GACPR,EAAS,SAASC,EAAKC,EAAKC,GAC1B,OAAOF,EAAIC,GAAOC,GAItB,SAASM,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IACIC,EAAY1B,OAAO2B,QADFJ,GAAWA,EAAQtB,qBAAqB2B,EAAYL,EAAUK,GACtC3B,WACzC4B,EAAU,IAAIC,EAAQL,GAAe,IAMzC,OAFAC,EAAUK,QAuMZ,SAA0BT,EAASE,EAAMK,GACvC,IAAIG,EAhLuB,iBAkL3B,OAAO,SAAgBC,EAAQC,GAC7B,GAjLoB,cAiLhBF,EACF,MAAM,IAAIG,MAAM,gCAGlB,GApLoB,cAoLhBH,EAA6B,CAC/B,GAAe,UAAXC,EACF,MAAMC,EAKR,MAoQG,CAAEnB,WA1fPqB,EA0fyBC,MAAM,GA9P/B,IAHAR,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,CACX,IAAII,EAAWT,EAAQS,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUT,GACnD,GAAIU,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBV,EAAQI,OAGVJ,EAAQa,KAAOb,EAAQc,MAAQd,EAAQK,SAElC,GAAuB,UAAnBL,EAAQI,OAAoB,CACrC,GApNqB,mBAoNjBD,EAEF,MADAA,EAlNc,YAmNRH,EAAQK,IAGhBL,EAAQe,kBAAkBf,EAAQK,SAEN,WAAnBL,EAAQI,QACjBJ,EAAQgB,OAAO,SAAUhB,EAAQK,KAGnCF,EA7NkB,YA+NlB,IAAIc,EAASC,EAASzB,EAASE,EAAMK,GACrC,GAAoB,WAAhBiB,EAAOE,KAAmB,CAO5B,GAJAhB,EAAQH,EAAQQ,KAlOA,YAFK,iBAwOjBS,EAAOZ,MAAQO,EACjB,SAGF,MAAO,CACL1B,MAAO+B,EAAOZ,IACdG,KAAMR,EAAQQ,MAGS,UAAhBS,EAAOE,OAChBhB,EAhPgB,YAmPhBH,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,OA/QPe,CAAiB3B,EAASE,EAAMK,GAE7CH,EAcT,SAASqB,EAASG,EAAIrC,EAAKqB,GACzB,IACE,MAAO,CAAEc,KAAM,SAAUd,IAAKgB,EAAGC,KAAKtC,EAAKqB,IAC3C,MAAOd,GACP,MAAO,CAAE4B,KAAM,QAASd,IAAKd,IAhBjCtB,EAAQuB,KAAOA,EAoBf,IAOIoB,EAAmB,GAMvB,SAASb,KACT,SAASwB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxB1C,EAAO0C,EAAmBhD,GAAgB,WACxC,OAAOiD,QAGT,IAAIC,EAAWxD,OAAOyD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4B3D,GAC5BG,EAAOiD,KAAKO,EAAyBpD,KAGvCgD,EAAoBI,GAGtB,IAAIE,EAAKP,EAA2BpD,UAClC2B,EAAU3B,UAAYD,OAAO2B,OAAO2B,GAYtC,SAASO,EAAsB5D,GAC7B,CAAC,OAAQ,QAAS,UAAU6D,SAAQ,SAAS7B,GAC3CrB,EAAOX,EAAWgC,GAAQ,SAASC,GACjC,OAAOqB,KAAKxB,QAAQE,EAAQC,SAkClC,SAAS6B,EAAcrC,EAAWsC,GAgChC,IAAIC,EAgCJV,KAAKxB,QA9BL,SAAiBE,EAAQC,GACvB,SAASgC,IACP,OAAO,IAAIF,GAAY,SAASG,EAASC,IAnC7C,SAASC,EAAOpC,EAAQC,EAAKiC,EAASC,GACpC,IAAItB,EAASC,EAASrB,EAAUO,GAASP,EAAWQ,GACpD,GAAoB,UAAhBY,EAAOE,KAEJ,CACL,IAAIsB,EAASxB,EAAOZ,IAChBnB,EAAQuD,EAAOvD,MACnB,OAAIA,GACiB,iBAAVA,GACPb,EAAOiD,KAAKpC,EAAO,WACdiD,EAAYG,QAAQpD,EAAMwD,SAASC,MAAK,SAASzD,GACtDsD,EAAO,OAAQtD,EAAOoD,EAASC,MAC9B,SAAShD,GACViD,EAAO,QAASjD,EAAK+C,EAASC,MAI3BJ,EAAYG,QAAQpD,GAAOyD,MAAK,SAASC,GAI9CH,EAAOvD,MAAQ0D,EACfN,EAAQG,MACP,SAASI,GAGV,OAAOL,EAAO,QAASK,EAAOP,EAASC,MAvBzCA,EAAOtB,EAAOZ,KAiCZmC,CAAOpC,EAAQC,EAAKiC,EAASC,MAIjC,OAAOH,EAaLA,EAAkBA,EAAgBO,KAChCN,EAGAA,GACEA,KAkHV,SAAS1B,EAAoBF,EAAUT,GACrC,IAAII,EAASK,EAAS/B,SAASsB,EAAQI,QACvC,QA3TEG,IA2TEH,EAAsB,CAKxB,GAFAJ,EAAQS,SAAW,KAEI,UAAnBT,EAAQI,OAAoB,CAE9B,GAAIK,EAAS/B,SAAiB,SAG5BsB,EAAQI,OAAS,SACjBJ,EAAQK,SAtUZE,EAuUII,EAAoBF,EAAUT,GAEP,UAAnBA,EAAQI,QAGV,OAAOQ,EAIXZ,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAChB,kDAGJ,OAAOlC,EAGT,IAAIK,EAASC,EAASd,EAAQK,EAAS/B,SAAUsB,EAAQK,KAEzD,GAAoB,UAAhBY,EAAOE,KAIT,OAHAnB,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,IACrBL,EAAQS,SAAW,KACZG,EAGT,IAAImC,EAAO9B,EAAOZ,IAElB,OAAM0C,EAOFA,EAAKvC,MAGPR,EAAQS,EAASuC,YAAcD,EAAK7D,MAGpCc,EAAQiD,KAAOxC,EAASyC,QAQD,WAAnBlD,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,SA1XVE,GAoYFP,EAAQS,SAAW,KACZG,GANEmC,GA3BP/C,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAAU,oCAC5B9C,EAAQS,SAAW,KACZG,GAoDX,SAASuC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB1B,KAAKgC,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAIpC,EAASoC,EAAMQ,YAAc,GACjC5C,EAAOE,KAAO,gBACPF,EAAOZ,IACdgD,EAAMQ,WAAa5C,EAGrB,SAAShB,EAAQL,GAIf8B,KAAKgC,WAAa,CAAC,CAAEJ,OAAQ,SAC7B1D,EAAYqC,QAAQkB,EAAczB,MAClCA,KAAKoC,OAAM,GA8Bb,SAAShC,EAAOiC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAStF,GAC9B,GAAIuF,EACF,OAAOA,EAAe1C,KAAKyC,GAG7B,GAA6B,mBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIC,GAAK,EAAGlB,EAAO,SAASA,IAC1B,OAASkB,EAAIJ,EAASG,QACpB,GAAI7F,EAAOiD,KAAKyC,EAAUI,GAGxB,OAFAlB,EAAK/D,MAAQ6E,EAASI,GACtBlB,EAAKzC,MAAO,EACLyC,EAOX,OAHAA,EAAK/D,WA1eTqB,EA2eI0C,EAAKzC,MAAO,EAELyC,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMmB,GAIjB,SAASA,IACP,MAAO,CAAElF,WA1fPqB,EA0fyBC,MAAM,GA+MnC,OA7mBAe,EAAkBnD,UAAYoD,EAC9BzC,EAAOgD,EAAI,cAAeP,GAC1BzC,EAAOyC,EAA4B,cAAeD,GAClDA,EAAkB8C,YAActF,EAC9ByC,EACA3C,EACA,qBAaFZ,EAAQqG,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOE,YAClD,QAAOD,IACHA,IAASjD,GAG2B,uBAAnCiD,EAAKH,aAAeG,EAAKE,QAIhCzG,EAAQ0G,KAAO,SAASJ,GAQtB,OAPIpG,OAAOyG,eACTzG,OAAOyG,eAAeL,EAAQ/C,IAE9B+C,EAAOM,UAAYrD,EACnBzC,EAAOwF,EAAQ1F,EAAmB,sBAEpC0F,EAAOnG,UAAYD,OAAO2B,OAAOiC,GAC1BwC,GAOTtG,EAAQ6G,MAAQ,SAASzE,GACvB,MAAO,CAAEqC,QAASrC,IAsEpB2B,EAAsBE,EAAc9D,WACpCW,EAAOmD,EAAc9D,UAAWO,GAAqB,WACnD,OAAO+C,QAETzD,EAAQiE,cAAgBA,EAKxBjE,EAAQ8G,MAAQ,SAAStF,EAASC,EAASC,EAAMC,EAAauC,QACxC,IAAhBA,IAAwBA,EAAc6C,SAE1C,IAAIC,EAAO,IAAI/C,EACb1C,EAAKC,EAASC,EAASC,EAAMC,GAC7BuC,GAGF,OAAOlE,EAAQqG,oBAAoB5E,GAC/BuF,EACAA,EAAKhC,OAAON,MAAK,SAASF,GACxB,OAAOA,EAAOjC,KAAOiC,EAAOvD,MAAQ+F,EAAKhC,WAuKjDjB,EAAsBD,GAEtBhD,EAAOgD,EAAIlD,EAAmB,aAO9BE,EAAOgD,EAAItD,GAAgB,WACzB,OAAOiD,QAGT3C,EAAOgD,EAAI,YAAY,WACrB,MAAO,wBAkCT9D,EAAQiH,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIjG,KAAOkG,EACdD,EAAKvB,KAAK1E,GAMZ,OAJAiG,EAAKE,UAIE,SAASnC,IACd,KAAOiC,EAAKhB,QAAQ,CAClB,IAAIjF,EAAMiG,EAAKG,MACf,GAAIpG,KAAOkG,EAGT,OAFAlC,EAAK/D,MAAQD,EACbgE,EAAKzC,MAAO,EACLyC,EAQX,OADAA,EAAKzC,MAAO,EACLyC,IAsCXhF,EAAQ6D,OAASA,EAMjB7B,EAAQ7B,UAAY,CAClBqG,YAAaxE,EAEb6D,MAAO,SAASwB,GAcd,GAbA5D,KAAK6D,KAAO,EACZ7D,KAAKuB,KAAO,EAGZvB,KAAKb,KAAOa,KAAKZ,WArgBjBP,EAsgBAmB,KAAKlB,MAAO,EACZkB,KAAKjB,SAAW,KAEhBiB,KAAKtB,OAAS,OACdsB,KAAKrB,SA1gBLE,EA4gBAmB,KAAKgC,WAAWzB,QAAQ2B,IAEnB0B,EACH,IAAK,IAAIZ,KAAQhD,KAEQ,MAAnBgD,EAAKc,OAAO,IACZnH,EAAOiD,KAAKI,KAAMgD,KACjBT,OAAOS,EAAKe,MAAM,MACrB/D,KAAKgD,QAphBXnE,IA0hBFmF,KAAM,WACJhE,KAAKlB,MAAO,EAEZ,IACImF,EADYjE,KAAKgC,WAAW,GACLG,WAC3B,GAAwB,UAApB8B,EAAWxE,KACb,MAAMwE,EAAWtF,IAGnB,OAAOqB,KAAKkE,MAGd7E,kBAAmB,SAAS8E,GAC1B,GAAInE,KAAKlB,KACP,MAAMqF,EAGR,IAAI7F,EAAU0B,KACd,SAASoE,EAAOC,EAAKC,GAYnB,OAXA/E,EAAOE,KAAO,QACdF,EAAOZ,IAAMwF,EACb7F,EAAQiD,KAAO8C,EAEXC,IAGFhG,EAAQI,OAAS,OACjBJ,EAAQK,SArjBZE,KAwjBYyF,EAGZ,IAAK,IAAI7B,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GACxBlD,EAASoC,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOwC,EAAO,OAGhB,GAAIzC,EAAMC,QAAU5B,KAAK6D,KAAM,CAC7B,IAAIU,EAAW5H,EAAOiD,KAAK+B,EAAO,YAC9B6C,EAAa7H,EAAOiD,KAAK+B,EAAO,cAEpC,GAAI4C,GAAYC,EAAY,CAC1B,GAAIxE,KAAK6D,KAAOlC,EAAME,SACpB,OAAOuC,EAAOzC,EAAME,UAAU,GACzB,GAAI7B,KAAK6D,KAAOlC,EAAMG,WAC3B,OAAOsC,EAAOzC,EAAMG,iBAGjB,GAAIyC,GACT,GAAIvE,KAAK6D,KAAOlC,EAAME,SACpB,OAAOuC,EAAOzC,EAAME,UAAU,OAG3B,CAAA,IAAI2C,EAMT,MAAM,IAAI5F,MAAM,0CALhB,GAAIoB,KAAK6D,KAAOlC,EAAMG,WACpB,OAAOsC,EAAOzC,EAAMG,gBAU9BxC,OAAQ,SAASG,EAAMd,GACrB,IAAK,IAAI8D,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMC,QAAU5B,KAAK6D,MACrBlH,EAAOiD,KAAK+B,EAAO,eACnB3B,KAAK6D,KAAOlC,EAAMG,WAAY,CAChC,IAAI2C,EAAe9C,EACnB,OAIA8C,IACU,UAAThF,GACS,aAATA,IACDgF,EAAa7C,QAAUjD,GACvBA,GAAO8F,EAAa3C,aAGtB2C,EAAe,MAGjB,IAAIlF,EAASkF,EAAeA,EAAatC,WAAa,GAItD,OAHA5C,EAAOE,KAAOA,EACdF,EAAOZ,IAAMA,EAET8F,GACFzE,KAAKtB,OAAS,OACdsB,KAAKuB,KAAOkD,EAAa3C,WAClB5C,GAGFc,KAAK0E,SAASnF,IAGvBmF,SAAU,SAASnF,EAAQwC,GACzB,GAAoB,UAAhBxC,EAAOE,KACT,MAAMF,EAAOZ,IAcf,MAXoB,UAAhBY,EAAOE,MACS,aAAhBF,EAAOE,KACTO,KAAKuB,KAAOhC,EAAOZ,IACM,WAAhBY,EAAOE,MAChBO,KAAKkE,KAAOlE,KAAKrB,IAAMY,EAAOZ,IAC9BqB,KAAKtB,OAAS,SACdsB,KAAKuB,KAAO,OACa,WAAhBhC,EAAOE,MAAqBsC,IACrC/B,KAAKuB,KAAOQ,GAGP7C,GAGTyF,OAAQ,SAAS7C,GACf,IAAK,IAAIW,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMG,aAAeA,EAGvB,OAFA9B,KAAK0E,SAAS/C,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPzC,IAKb0F,MAAS,SAAShD,GAChB,IAAK,IAAIa,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMC,SAAWA,EAAQ,CAC3B,IAAIrC,EAASoC,EAAMQ,WACnB,GAAoB,UAAhB5C,EAAOE,KAAkB,CAC3B,IAAIoF,EAAStF,EAAOZ,IACpBuD,EAAcP,GAEhB,OAAOkD,GAMX,MAAM,IAAIjG,MAAM,0BAGlBkG,cAAe,SAASzC,EAAUf,EAAYE,GAa5C,OAZAxB,KAAKjB,SAAW,CACd/B,SAAUoD,EAAOiC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBxB,KAAKtB,SAGPsB,KAAKrB,SA9rBPE,GAisBOK,IAQJ3C,GAOsBwI,EAAOxI,SAGtC,IACEyI,mBAAqB1I,EACrB,MAAO2I,GAWmB,iBAAfC,WACTA,WAAWF,mBAAqB1I,EAEhC6I,SAAS,IAAK,yBAAdA,CAAwC7I,iCDpuB5C,SAAYD,GACRA,oBACAA,sBACAA,gCAHJ,CAAYA,IAAAA,OASZ,IEgBY+I,EFhBCC,EAAwB,CACjCC,OAAQ,SACRC,cAAe,gBACfC,UAAW,aAGFC,YAAkBC,uBAAqB,UAyFvCC,EAAwC,CACjDC,eAAgB,SAACC,EAAUC,EAASC,GAC5BA,GAIJC,QAAQ3E,KAAKyE,IAEjBG,mBAAmB,EACnBJ,SAAUK,WAASC,MGjHDC,wBAMIC,EAA0BC,cACvCD,YAAcA,OACdC,WAAaA,OACbC,eAAiB,IAAIC,sBACrBC,OAAS,IAAIC,wBACTJ,WAAWK,iBAAQC,gBAAiBjB,ECjB1B,6BACG,mCDsB1BkB,eAAA,kBACW7G,KAAKqG,eAGhBS,cAAA,kBACW9G,KAAKsG,cAGhBS,cAAA,kBACW,IAAIC,gCAA8BhH,KAAKsG,eAGlDW,kBAAA,kBACWjH,KAAKuG,kBAGhBW,UAAA,kBACWlH,KAAKyG,cDTpB,SAAYrB,GACRA,uBADJ,CAAYA,IAAAA,WG1BC+B,oCAOFC,qBAAP,SAA4Bf,iBACjB,CACHgB,QACIC,SAAUjB,EAAYkB,YAAYD,SAClCE,UAAWnB,EAAYkB,YAAYE,oBAClBpB,EAAYkB,YAAYE,aAAYpB,EAAYkB,YAAYG,oBAC5DC,YAAUC,2BAA0BvB,EAAYkB,YAAYG,UACzErB,EAAYkB,YAAY3K,eAAe,iBAAmB,CAC1DiL,aAAcxB,EAAYkB,YAAYM,cAEtCxB,EAAYkB,YAAY3K,eAAe,sBAAwB,CAC/DkL,kBAAmBzB,EAAYkB,YAAYO,oBAGnDnB,OAAQ,CACJC,uBAAeP,EAAY0B,kBAAenB,cAAgBP,EAAY0B,cAAcnB,cAAgBjB,EACpGqC,kBAAU3B,EAAY0B,sBAAZE,EAA2BD,cAS1CE,oBAAP,SAA2B7B,EAA0B8B,MAC7CC,cAAYC,QAAQhC,EAAYkB,YAAYD,gBACtC,IAAI1I,ML4CJ,yBK3CH,IAAKuI,EAAkBmB,OAAOjC,EAAYkB,YAAYD,gBACnD,IAAI1I,ML2CC,wBKxCXwJ,cAAYC,QAAQhC,EAAYkB,YAAYG,gBACtC,IAAI9I,MLwCF,4BKvCL,IACFuI,EAAkBmB,OAAOjC,EAAYkB,YAAYG,YACjDjL,OAAO2D,OAAOiF,GAAuBkD,SAASlC,EAAYkB,YAAYG,gBAEjE,IAAI9I,MLoCG,+BKjCTuJ,QACC/C,EAAQoD,UACLJ,cAAYC,QAAyBhC,EAAaoC,WAAWC,mBACvD,IAAI9J,MLgCT,iCKlBV+J,0BAAP,SAAiCC,EAAkBC,OACzCC,EAAkB9I,KAAK+I,mBAAmBH,GAAQI,KAAI,SAACC,UAAUA,EAAMC,iBAEvEC,EAAQ1M,OAAO2D,OAAOyI,GACvBO,WAAU,SAACC,UACRA,EAAeT,OAAOU,OAAM,SAACL,UAAUH,EAAgBP,SAASU,EAAMC,4BAGzDzM,OAAO+G,KAAKqF,GAAoBM,MASlDJ,mBAAP,SAA0BQ,UACMA,EAAWC,QAAO,SAAAP,UAAUxD,EAAY8C,SAASU,SAS1EX,OAAP,SAAcmB,SACQ,6EACDC,KAAKD,SC/FjBE,oCA2CIC,uDAAb,WAAyClC,iGAIViC,EAAaE,gBAHvB,8DAGiD,CAC1DC,OAAQ,eACW,kEACgDpC,4CAGjEqC,EAAyBC,KAAKC,iBAAmBC,wBAChDH,+JAMFI,kDAAb,WAAoCzC,iFAC1B0C,uCAAgD1C,6DAG3BiC,EAAaE,gBAAgBO,iBAC9CC,EAAoBL,KAAKC,iBAAmBC,wBAC3CG,kKA3DRV,6CAAkB,WAAOS,EAAkBE,2FAEJC,EAAMC,IAAIJ,EAAUE,uMAe3DX,sDAA2B,WAAOS,EAAkBK,4EACnDrC,cAAYC,QAAQoC,yBACd,IAAI7L,MN2BD,gCMxBP0L,EAA8B,CAChCI,QAAS,CACLC,wBAAyBF,sBAKNd,EAAaE,gBAAgBO,EAAUE,0CAC9CJ,qKA0CjBP,8CAAmB,WAAOc,EAAqBG,EAAkBV,wFAAAA,IAAAA,EAAiB,sBAE9CP,EAAakB,yBAAyBD,EAAUH,iCAAcP,gBAA3FY,UAEO,MAAU9B,KAAI,SAAC+B,UAAWb,EAAKjI,KAAK8I,EAAEC,QAE/CF,EN1DK,qDM2DQnB,EAAasB,iBACtBR,EACAK,EN7DC,mBM8DDZ,6EAGGA,gMC7FVgB,eCKb,SAASC,EAAuCb,gDACrC,WAAOc,EAAcC,EAAe9J,iFACvC+J,EAAKpE,YAAYqE,MAAM,uBAEjB9M,EAAkB,CACpB+M,WAAYlB,EAAQmB,sBAAwB,IAC5CC,YAAapB,EAAQ7L,OAGnBkN,EAAyC,CAC3C/C,OAAQ0B,EAAQ1B,OAChBnK,MAAO6M,EAAKrE,oBAAoB2E,aAAa5B,KAAKC,UAAUxL,IAC5DiK,YAAawC,EAASW,kBAClBP,EAAKQ,eAAerD,WAAWC,YAC/B0C,EAAIW,SACJX,EAAIZ,IAAI,SAAWY,EAAIY,UAE3BC,aAAcC,eAAaC,UAC3BC,OAAQ9B,EAAQ8B,aAAUvN,GAU9BuM,EAAIiB,QAAQC,wBAPqC,CAC7C1D,OAAQ+C,EAAc/C,OACtBnK,MAAOkN,EAAclN,MACrBiK,YAAaiD,EAAcjD,YAC3B6D,KRkGgB,uBQzFOjB,EAAKvE,gBAAgByF,eAAeb,UAC3DN,EAAIoB,mEAEJlL,4HCxCZ,SAASmL,EAAwCpC,gDACtC,WAAOc,EAAcC,qFACxBC,EAAKpE,YAAYqE,MAAM,wBAEnBoB,EAAYrC,EAAQsC,uBAAyB,aAGvCC,EAAavB,EAAKvE,gBAAgB+F,yBAClBD,EAAWE,mBAAmB3B,EAAI4B,YAAYC,aAAaC,2BAA3EC,4CAGIN,EAAWO,cAAcD,6DAGnC7B,EAAK7E,OAAOtF,uDAAuD6I,KAAKC,yBAIxEK,EAAQ+C,YAOFT,EAAwB1B,EAASW,kBACnCvB,EAAQsC,uBAAyB,IACjCxB,EAAIW,SACJX,EAAIZ,IAAI,SAAWY,EAAIY,UAI3BW,EAAerB,EAAKxE,gBAAgBO,KAAKG,0DAAyDoF,GAGtGxB,EAAIiB,QAAQiB,SAAQ,WAEhBjC,EAAIoB,SAASE,wHF/BdzB,oBAAoB,SAACqC,EAAaxB,EAAkByB,OACjDC,EAAsB,IAAIC,YAAUH,GAAKI,0BAE1CF,EAAcG,SASRL,EARFE,EAAcI,iBAAoBN,EAAIO,WAAW,OAM/C/B,EAAW,MAAQwB,EALjBA,EAAIO,WAAW,KAGb/B,EAAW,MAAQyB,EAAOD,EAFtBxB,EAAW,MAAQyB,EAAO,IAAMD,GAgBhDrC,+BAA+B,SAACE,EAAcmC,UAEtCrC,EAASW,kBADhB0B,GAGkCnC,EAAI2C,YAFC3C,EAAIW,SAAUX,EAAIZ,IAAI,SAAWY,EAAIY,WAY7Ed,uBAAuB,SAACE,EAAcmC,UAClCrC,EAAS8C,6BAA6B5C,KAASF,EAAS8C,6BAA6B5C,EAAKmC,IAQ9FrC,iBAAiB,SAACqC,aACO,IAAIG,YAAUH,GAAKI,mBACtBM,aAAaC,KAAK,MAQxChD,sBAAsB,SAACiD,SACG,MAAtBA,EAAKC,MAAM,IAAI,GAAaD,EAAO,IAAMA,OG9D3CE,yBAGGC,EAAmBC,EAAuBC,EAAmB5F,EAAwB6F,8BACvFH,EAAWC,EAAcC,iBAHX,KAIfxL,KAAO,6BACP4F,OAASA,GAAU,KACnB6F,OAASA,GAAU,GAExBhS,OAAOyG,4IAAqBmL,EAAyB3R,8BATfgS,gCCE9C,SAASC,EAA8CrE,EAA8BsE,gDAC1E,WAAOxD,EAAcC,EAAe9J,qFACvC+J,EAAKpE,YAAYqE,MAAM,uCAGb4B,EAAU7C,EAAQ6C,SAAW/B,EAAIiB,QAAQc,8BAGrC,IAAIkB,EAAyB,mBAAoB,wDAAoDxP,EAAWyL,EAAQ1B,sBAG5HiG,EAAmC,CACrC1B,QAASA,EACTvE,OAAQ0B,EAAQ1B,SAGdkG,EAAexD,EAAKvE,iBACb+F,gBAAgBiC,YAAY3D,EAAIiB,QAAQQ,YAAc,cACvCiC,EAAaE,mBAAmBH,cAAtDI,SACN7D,EAAIiB,QAAQQ,WAAaiC,EAAahC,gBAAgBoC,YAEjDD,yBACK,IAAIZ,EAAyB,gBAAiB,+CAA2CxP,EAAWyL,EAAQ1B,oBAGlHgG,0BACItD,EAAKQ,eAAejD,qBACdsG,EAAWhI,EAAkBwB,0BAC/BsG,EAAcrG,OACd0C,EAAKQ,eAAejD,oBAGnBuC,EAAIiB,QAAQxD,mBAKbuC,EAAIiB,QAAQxD,mBAAmBsG,GAAYF,EAJ3C7D,EAAIiB,QAAQxD,2BACPsG,GAAWF,wBAOjB1N,sCAGJ0N,0CAEHG,gBAAiBV,0EACVnN,EAAK,IAAI8M,EACZe,KAAMd,UACNc,KAAMb,aACNa,KAAMZ,SACNlE,EAAQ1B,OACRwG,KAAMX,kBAIdlN,4HC/DZ,IAQa8N,wBAIGC,EAA8BhR,QACjCgR,SAAWA,OACXhR,QAAUA,6BAQnBiR,MAAA,SACIjF,mBAAAA,IAAAA,EAAwB,CACpBmB,qBAAsB,IACtB+D,uBAAwB,IACxB5G,OAAQ,KAGLuC,EAAavL,KAAKI,KAAKsP,SAAUhF,MAQ5CmF,OAAA,SACInF,mBAAAA,IAAAA,EAAyB,CACrBsC,sBAAuB,IACvBS,WAAW,IAGRX,EAAc9M,KAAKI,KAAKsP,SAAUhF,MAQ7CoF,aAAA,SAAapF,mBAAAA,IAAAA,EAA+B,CACxC1B,OAAQ,KAED+F,EAAoB/O,KAAKI,KAAKsP,SAAUhF,MAOnD2C,WAAA,kBACWjN,KAAK1B,QAAQ8M,IAAIiB,QAAQc,WAOpCwC,gBAAA,mBACa3P,KAAKiN,gBAQlB2C,0BAAA,SAA0BC,MAClB7P,KAAK1B,QAAQ8M,IAAIiB,QAAQxD,oBAAsB7I,KAAK1B,QAAQ8M,IAAIiB,QAAQxD,mBAAmBgH,GAAe,KAEpGC,EAAY,IAAIC,KAClB/P,KAAK1B,QAAQ8M,IAAIiB,QAAQxD,mBAAmBgH,GAAcC,eAGzDA,SACM,SAGYE,YAAUC,eAC7BC,KAAKC,MAAML,EAAUM,UAAY,KAAMC,WACvC,YAIOrQ,KAAK1B,QAAQ8M,IAAIiB,QAAQxD,mBAAmBgH,GAAcpF,mBAIlE,oBC7FN6F,iDACE,WAAOlF,EAAcC,EAAe9J,qFACvC+J,EAAKpE,YAAYqJ,QAAQ,0BAEpBnF,EAAIoF,MAASpF,EAAIoF,KAAKjE,4BACvBjB,EAAK7E,OAAOtF,MAAM,kEACXI,EAAK,IAAI3C,MAAM,uCAGpB6R,OACCrF,EAAIiB,QAAQC,oBACfC,KAAMnB,EAAIoF,KAAKjE,iBAITuC,EAAexD,EAAKvE,iBACb+F,gBAAgBiC,YAAY3D,EAAIiB,QAAQQ,YAAc,cAEvCiC,EAAa4B,mBACrCD,EACArF,EAAIoF,iBAFFvB,SAKN7D,EAAIiB,QAAQQ,WAAaiC,EAAahC,gBAAgBoC,YAEjDD,4CACM5D,EAAIsF,OAAO,KAAKC,KAAK,oCAIhCxF,EAAIiB,QAAQc,QAAU8B,EAAc9B,QACpC/B,EAAIiB,QAAQsD,iBAAkB,EAE1BrE,EAAKQ,eAAejD,qBAEdsG,EAAWhI,EAAkBwB,0BAC/BsG,EAAcrG,OACd0C,EAAKQ,eAAejD,oBAGnBuC,EAAIiB,QAAQxD,mBAKbuC,EAAIiB,QAAQxD,mBAAmBsG,GAAYF,EAJ3C7D,EAAIiB,QAAQxD,2BACPsG,GAAWF,QAOD7D,EAAIoF,KAAK/R,MAC5BuL,KAAK6G,MAAMvF,EAAKrE,oBAAoB6J,aAAa1F,EAAIoF,KAAK/R,QAE1D,CAAE+M,WAAY,KAElBH,EAAIoB,WALIjB,8DAORjK,4HC9CZ,SAASwP,EAAiDzG,qBAC/C,SAACc,EAAcC,EAAe9J,MACjC+J,EAAKpE,YAAYqE,MAAM,0BAEnBjB,EAAQ0G,aAAe5F,EAAIiB,cACrB,IAAIzN,Md+CC,4Cc5CfwM,EAAI4B,YAAc,IAAIqC,EAAY/D,EAAM,CAAEF,IAAAA,EAAKC,IAAAA,EAAK9J,KAAAA,IdoGlD,SclGE6J,EAAI1M,QACAwM,EAAS8C,6BAA6B5C,KAASF,EAAS8C,6BAA6B5C,EAAKE,EAAKQ,eAAerD,WAAWC,cACzH4C,EAAKpE,YAAYqE,MAAM,qBAChB+E,EAAgB1Q,KAAK0L,EAArBgF,CAA2BlF,EAAKC,EAAK9J,IAIhD+J,EAAKQ,eAAerD,WAAWwI,uBd0FlC,QczFO7F,EAAI1M,QACAwM,EAAS8C,6BAA6B5C,KAASF,EAAS8C,6BAA6B5C,EAAKE,EAAKQ,eAAerD,WAAWwI,wBACzH3F,EAAKpE,YAAYqE,MAAM,gCAEnBH,EAAIiB,QAAQsD,gBACLvE,EAAI4B,YAAYyC,OAAO,CAC1B7C,sBAAuB,IACvBS,WAAW,GAFRjC,CAGJA,EAAKC,EAAK9J,GAGV8J,EAAIsF,OAAO,KAAKC,KAAK,iBAKpCtG,EAAQ4G,mBACH9F,EAAI4B,YAAY2C,kBACVvE,EAAI4B,YAAYuC,MAAM,CACzB3G,OAAQ,GACR6C,qBAAsBL,EAAI2C,aAFvB3C,CAGJA,EAAKC,EAAK9J,IAIjB+I,EAAQ6G,0BAER1U,OAAO2U,QAAQ9G,EAAQ6G,0BAA0B5Q,SAAQ,SAACuJ,SACjCT,EAAkBS,QAEnCsB,EAAI4B,YAAY4C,0BAFmB9F,MAGnCwB,EAAKpE,YAAYqE,MAAM,oDAIvBlC,EAAegI,OAAO9I,SAAS6C,EAAI2C,wBAC9B1E,EAAeiI,YAAS9O,QAAU6G,EAAeiI,QAAQ/I,SAAS6C,EAAI1M,SdqDtF,QcrDkG0M,EAAI1M,eACvF4M,EAAKpE,YAAYqE,MAAM,yCAChBoD,EAAoB/O,KAAK0L,EAAM,CAAE1C,OAAQS,EAAeT,SAAU,EAAlE+F,CAAwEvD,EAAKC,EAAK9J,WAMzGA,MC1ER,SAASgQ,EAA0CjH,UACxC,SAACc,EAAcC,EAAe9J,OAC5B6J,EAAI4B,YAAY2C,yBACbrF,EAAQkH,WACDpG,EAAI4B,YAAYuC,MAAM,CACzB3G,OAAQ,GACR6C,qBAAsBL,EAAI2C,aAFvB3C,CAGJA,EAAKC,EAAK9J,GAGV8J,EAAIsF,OAAO,KAAKC,KAAK,mBAG5BtG,EAAQmH,cAAe,OACjBC,YAActG,EAAI4B,YAAYC,uBAAcwE,gBAAiB,GAC7DE,EAAiBrH,EAAQmH,kBAEbhV,OAAO+G,KAAKmO,GAAgBrI,OAAM,SAACsI,MAE7CD,EAAeC,IAAUF,EAAYE,iBAEtBD,EAAeC,QACrB,gBACMD,EAAeC,KAAWF,EAAYE,OAC5C,YACGC,MAAMC,QAAQH,EAAeC,IAAS,KAEhCG,EAAmBL,EAAYE,UADTD,EAAeC,GAGhBI,MACvB,SAACC,UAAkBF,EAAiBG,QAAQD,IAAkB,aAQ3E,YAIA5G,EAAIsF,OAAO,KAAKC,KAAK,aAIpCrP,KC9CR,SAAS4Q,WACE,SAACtU,EAAcuN,EAAcC,EAAe9J,MAC3C1D,aAAewQ,SACRjD,EAAI4B,YAAYuC,MAAM,CACzB3G,OAAQ/K,EAAI+K,QAAU,GACtB6F,OAAQ5Q,EAAI4Q,aAAU5P,EACtB4M,qBAAsBL,EAAI2C,aAHvB3C,CAIJA,EAAKC,EAAK9J,GAGjBA,EAAK1D,QCHAuU,yBAQW/L,EAA0BC,8BACpCD,EAAaC,UACdwF,eAAiBzF,aAQbgM,sCAAb,WAAwBhM,mFACpBc,EAAkBe,oBAAoB7B,EAAajB,EAAQoD,QAErDlC,EAAaa,EAAkBC,qBAAqBf,YAEL/C,QAAQgP,IAAI,CAC7D3I,EAAaC,4BAA4BvD,EAAYkB,YAAYG,UACjEiC,EAAaQ,uBAAuB9D,EAAYkB,YAAYG,0BAFtC2C,gBAK1B/D,EAAWe,KAAK0C,4BAChBzD,EAAWe,KAAKgD,kBAAoBA,oBAE7B,IAAI+H,EAAmB/L,EAAaC,iIAQ/CiM,aAAA,SAAajI,mBAAAA,IAAAA,EAAyC,CAClD4G,kBAAkB,EAClBF,YAAY,IAELD,EAAuBnR,KAAKI,KAAMsK,MAQ7CkI,MAAA,SAAMlI,mBAAAA,IAAAA,EAA6B,CAC/BkH,YAAY,IAELD,EAAgB3R,KAAKI,KAAMsK,MAOtCmI,wBAAA,kBACWN,EAAgBvS,KAAKI,UA9DIoG,iXbVV"}