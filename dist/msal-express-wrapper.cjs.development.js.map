{"version":3,"file":"msal-express-wrapper.cjs.development.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/Constants.ts","../src/ConfigurationUtils.ts","../src/Logger.ts","../src/TokenValidator.ts","../src/KeyVaultManager.ts","../src/FetchManager.ts","../src/UrlUtils.ts","../src/AuthProvider.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Basic authentication stages used to determine\r\n * appropriate action after redirect occurs\r\n */\r\nexport const AppStages = {\r\n    SIGN_IN: \"sign_in\",\r\n    SIGN_OUT: \"sign_out\",\r\n    ACQUIRE_TOKEN: \"acquire_token\",\r\n};\r\n\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nexport const AADAuthorityConstants = {\r\n    COMMON: \"common\",\r\n    ORGANIZATIONS: \"organizations\",\r\n    CONSUMERS: \"consumers\"\r\n}\r\n\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nexport const KeyVaultCredentialTypes = {\r\n    SECRET: \"secret\",\r\n    CERTIFICATE: \"certificate\",\r\n}\r\n\r\n/**\r\n * Constants used in access control scenarios\r\n */\r\nexport const AccessConstants = {\r\n    GROUPS: \"groups\",\r\n    ROLES: \"roles\",\r\n    CLAIM_NAMES: \"_claim_name\",\r\n    CLAIM_SOURCES: \"_claim_sources\",\r\n    PAGINATION_LINK: \"@odata.nextLink\",\r\n    GRAPH_MEMBERS_ENDPOINT: \"https://graph.microsoft.com/v1.0/me/memberOf\",\r\n    GRAPH_MEMBER_SCOPES: \"User.Read GroupMember.Read.All\"\r\n};\r\n\r\nexport const InfoMessages = {\r\n    REQUEST_FOR_RESOURCE: \"Request made to web API\",\r\n    OVERAGE_OCCURRED: \"User has too many groups. Groups overage claim occurred\"\r\n}\r\n\r\n/**\r\n * Various error constants\r\n */\r\nexport const ErrorMessages = {\r\n    NOT_PERMITTED: \"Not permitted\",\r\n    INVALID_TOKEN: \"Invalid token\",\r\n    CANNOT_DETERMINE_APP_STAGE: \"Cannot determine application stage\",\r\n    CANNOT_VALIDATE_TOKEN: \"Cannot validate token\",\r\n    NONCE_MISMATCH: \"Nonce does not match\",\r\n    INTERACTION_REQUIRED: \"interaction_required\",\r\n    TOKEN_ACQUISITION_FAILED: \"Token acquisition failed\",\r\n    AUTH_CODE_NOT_OBTAINED: \"Authorization code cannot be obtained\",\r\n    TOKEN_NOT_FOUND: \"No token found\",\r\n    TOKEN_NOT_DECODED: \"Token cannot be decoded\",\r\n    TOKEN_NOT_VERIFIED: \"Token cannot be verified\",\r\n    KEYS_NOT_OBTAINED: \"Signing keys cannot be obtained\",\r\n    STATE_NOT_FOUND: \"State not found\",\r\n    USER_HAS_NO_ROLE: \"User does not have any roles\",\r\n    USER_NOT_IN_ROLE: \"User does not have this role\",\r\n    USER_HAS_NO_GROUP: \"User does not have any groups\",\r\n    USER_NOT_IN_GROUP: \"User does not have this group\",\r\n    METHOD_NOT_ALLOWED: \"Method not allowed for this route\",\r\n    RULE_NOT_FOUND: \"No rule found for this route\",\r\n    SESSION_NOT_FOUND: \"No session found for this request\",\r\n    KEY_VAULT_CONFIG_NOT_FOUND: \"No coordinates found for Key Vault\"\r\n};\r\n\r\nexport const ConfigurationErrorMessages = {\r\n    NO_CLIENT_ID: \"No clientId provided!\",\r\n    INVALID_CLIENT_ID: \"Invalid clientId!\",\r\n    NO_TENANT_INFO: \"No tenant info provided!\",\r\n    INVALID_TENANT_INFO: \"Invalid tenant info!\",\r\n    NO_CLIENT_CREDENTIAL: \"No client credential provided!\",\r\n    NO_REDIRECT_URI: \"No redirect URI provided!\",\r\n    NO_ERROR_ROUTE: \"No error route provided!\",\r\n    NO_UNAUTHORIZED_ROUTE: \"No unauthorized route provided!\"\r\n}\r\n\r\n/**\r\n * For more information, visit: https://login.microsoftonline.com/error\r\n */\r\nexport const ErrorCodes = {\r\n    65001: \"AADSTS65001\", // consent required\r\n};","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { \r\n    UrlString,  \r\n    StringUtils,\r\n    Constants, \r\n} from \"@azure/msal-common\";\r\n\r\nimport { \r\n    ICachePlugin,\r\n    Configuration,\r\n    LogLevel \r\n} from \"@azure/msal-node\";\r\n\r\nimport { AppSettings } from \"./Types\";\r\n\r\nimport { \r\n    AADAuthorityConstants, \r\n    ConfigurationErrorMessages \r\n} from \"./Constants\";\r\n\r\nexport class ConfigurationUtils {\r\n\r\n    /**\r\n     * Validates the fields in the configuration file\r\n     * @param {AppSettings} config: configuration object\r\n     * @returns {void}\r\n     */\r\n    static validateAppSettings(config: AppSettings): void {\r\n        if (StringUtils.isEmpty(config.appCredentials.clientId)) {\r\n            throw new Error(ConfigurationErrorMessages.NO_CLIENT_ID);\r\n        } else if (!ConfigurationUtils.isGuid(config.appCredentials.clientId)) {\r\n            throw new Error(ConfigurationErrorMessages.INVALID_CLIENT_ID);\r\n        }\r\n\r\n        if (StringUtils.isEmpty(config.appCredentials.tenantId)) {\r\n            throw new Error(ConfigurationErrorMessages.NO_TENANT_INFO);\r\n        } else if (!ConfigurationUtils.isGuid(config.appCredentials.tenantId) && !Object.values(AADAuthorityConstants).includes(config.appCredentials.tenantId)) {\r\n            throw new Error(ConfigurationErrorMessages.INVALID_TENANT_INFO);\r\n        }\r\n\r\n        if (StringUtils.isEmpty(config.appCredentials.clientSecret) && !config.appCredentials.clientCertificate) {\r\n            throw new Error(ConfigurationErrorMessages.NO_CLIENT_CREDENTIAL);\r\n        }\r\n\r\n        if (StringUtils.isEmpty(config.authRoutes.redirect)) {\r\n            throw new Error(ConfigurationErrorMessages.NO_REDIRECT_URI);\r\n        }\r\n\r\n        if (StringUtils.isEmpty(config.authRoutes.error)) {\r\n            throw new Error(ConfigurationErrorMessages.NO_ERROR_ROUTE);\r\n        }\r\n\r\n        if (StringUtils.isEmpty(config.authRoutes.unauthorized)) {\r\n            throw new Error(ConfigurationErrorMessages.NO_UNAUTHORIZED_ROUTE);\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Maps the custom configuration object to configuration\r\n     * object expected by MSAL Node ConfidentialClientApplication class\r\n     * @param {AppSettings} config: configuration object\r\n     * @param {ICachePlugin} cachePlugin: persistent cache implementation\r\n     * @returns {Configuration}\r\n     */\r\n    static getMsalConfiguration(config: AppSettings, cachePlugin: ICachePlugin = null): Configuration {\r\n        return {\r\n            auth: {\r\n                clientId: config.appCredentials.clientId,\r\n                authority: config.b2cPolicies ?\r\n                    Object.entries(config.b2cPolicies)[0][1][\"authority\"]\r\n                    :\r\n                    `https://${Constants.DEFAULT_AUTHORITY_HOST}/${config.appCredentials.tenantId}`,\r\n                ...(config.appCredentials.hasOwnProperty(\"clientSecret\")) && { clientSecret: config.appCredentials.clientSecret },\r\n                ...(config.appCredentials.hasOwnProperty(\"clientCertificate\")) && { clientCertificate: config.appCredentials.clientCertificate },\r\n                knownAuthorities: config.b2cPolicies ?\r\n                    [UrlString.getDomainFromUrl(Object.entries(config.b2cPolicies)[0][1][\"authority\"])] // in B2C scenarios\r\n                    :\r\n                    [],\r\n            },\r\n            cache: {\r\n                cachePlugin,\r\n            },\r\n            system: {\r\n                loggerOptions: {\r\n                    loggerCallback: (logLevel, message, containsPii) => {\r\n                        if (containsPii) {\r\n                            return;\r\n                        }\r\n                        switch (logLevel) {\r\n                            case LogLevel.Error:\r\n                                console.error(message);\r\n                                return;\r\n                            case LogLevel.Info:\r\n                                console.info(message);\r\n                                return;\r\n                            case LogLevel.Verbose:\r\n                                console.debug(message);\r\n                                return;\r\n                            case LogLevel.Warning:\r\n                                console.warn(message);\r\n                                return;\r\n                        }\r\n                    },\r\n                    piiLoggingEnabled: false,\r\n                    logLevel: LogLevel.Verbose,\r\n                },\r\n            },\r\n        };\r\n    };\r\n\r\n    /**\r\n     * verifies if a string is  GUID\r\n     * @param guid\r\n     */\r\n    static isGuid(guid: string): boolean {\r\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n        return regexGuid.test(guid);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { LogLevel } from \"@azure/msal-common\"\r\n\r\nexport class Logger {\r\n\r\n    /**\r\n     * Log an error\r\n     * @param {string} log\r\n     * @returns {void}\r\n     */\r\n    static logError(log: string): void {\r\n        console.error(this.logMessage(log));\r\n    }\r\n\r\n    /**\r\n     * Log a warning\r\n     * @param {string} log\r\n     * @returns {void}\r\n     */\r\n    static logWarning(log: string): void {\r\n        console.warn(this.logMessage(log));\r\n    }\r\n\r\n    /**\r\n     * Log anything\r\n     * @param {string} log\r\n     * @returns {void}\r\n     */\r\n    static logInfo(log: string): void {\r\n        console.info(this.logMessage(log));\r\n    }\r\n\r\n    /**\r\n     * Log message with required options.\r\n     * @param {string} logMessage \r\n     * @returns {string}\r\n     */\r\n    private static logMessage(logMessage: string): string {\r\n        const timestamp = new Date().toUTCString();\r\n\r\n        let logHeader: string = `[${timestamp}]`;\r\n\r\n        const log = `${logHeader} : @azure-samples/msal-express-wrapper@0.1.0 : ${LogLevel[LogLevel.Verbose]} - ${logMessage}`;\r\n        return log;\r\n    }\r\n\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport jwt from \"jsonwebtoken\";\r\nimport jwksClient from \"jwks-rsa\";\r\n\r\nimport { \r\n    StringUtils, \r\n    Constants, \r\n    TokenClaims \r\n} from \"@azure/msal-common\";\r\n\r\nimport { Configuration } from \"@azure/msal-node\";\r\n\r\nimport { Logger } from \"./Logger\";\r\n\r\nimport { \r\n    AppSettings,\r\n    Resource, \r\n    IdTokenClaims, \r\n    AccessTokenClaims \r\n} from \"./Types\";\r\n\r\nimport { \r\n    ErrorMessages, \r\n    AADAuthorityConstants \r\n} from \"./Constants\";\r\n\r\nexport class TokenValidator {\r\n    private appSettings: AppSettings;\r\n    private msalConfig: Configuration;\r\n\r\n    /**\r\n     * @param {AppSettings} appSettings \r\n     * @param {Configuration} msalConfig\r\n     * @constructor\r\n     */\r\n    constructor(appSettings: AppSettings, msalConfig: Configuration) {\r\n        this.appSettings = appSettings;\r\n        this.msalConfig = msalConfig;\r\n    }\r\n\r\n    /**\r\n     * Verifies a given token's signature using jwks-rsa\r\n     * @param {string} authToken \r\n     * @returns {Promise}\r\n     */\r\n    async verifyTokenSignature(authToken: string): Promise<TokenClaims | boolean> {\r\n        if (StringUtils.isEmpty(authToken)) {\r\n            Logger.logError(ErrorMessages.TOKEN_NOT_FOUND);\r\n            return false;\r\n        }\r\n\r\n        // we will first decode to get kid parameter in header\r\n        let decodedToken;\r\n\r\n        try {\r\n            decodedToken = jwt.decode(authToken, { complete: true });\r\n        } catch (error) {\r\n            Logger.logError(ErrorMessages.TOKEN_NOT_DECODED);\r\n            console.log(error);\r\n            return false;\r\n        }\r\n\r\n        // obtains signing keys from discovery endpoint\r\n        let keys;\r\n\r\n        try {\r\n            keys = await this.getSigningKeys(decodedToken.header, decodedToken.payload.tid);\r\n        } catch (error) {\r\n            Logger.logError(ErrorMessages.KEYS_NOT_OBTAINED);\r\n            console.log(error);\r\n            return false;\r\n        }\r\n\r\n        // verify the signature at header section using keys\r\n        let verifiedToken: TokenClaims;\r\n\r\n        try {\r\n            verifiedToken = jwt.verify(authToken, keys);\r\n\r\n            /**\r\n             * if a multiplexer was used in place of tenantId i.e. if the app\r\n             * is multi-tenant, the tenantId should be obtained from the user\"s\r\n             * token\"s tid claim for verification purposes\r\n             */\r\n            if (\r\n                this.appSettings.appCredentials.tenantId === AADAuthorityConstants.COMMON ||\r\n                this.appSettings.appCredentials.tenantId === AADAuthorityConstants.ORGANIZATIONS ||\r\n                this.appSettings.appCredentials.tenantId === AADAuthorityConstants.CONSUMERS\r\n            ) {\r\n                this.appSettings.appCredentials.tenantId = decodedToken.payload.tid;\r\n            }\r\n\r\n            return verifiedToken;\r\n        } catch (error) {\r\n            Logger.logError(ErrorMessages.TOKEN_NOT_VERIFIED);\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Verifies the access token for signature\r\n     * @param {string} idToken: raw Id token\r\n     * @returns {Promise}\r\n     */\r\n     async validateIdToken(idToken: string): Promise<boolean> {\r\n        try {\r\n            const verifiedToken = await this.verifyTokenSignature(idToken);\r\n\r\n            if (verifiedToken) {\r\n                return this.validateIdTokenClaims(verifiedToken as IdTokenClaims);\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Validates the id token for a set of claims\r\n     * @param {IdTokenClaims} idTokenClaims: decoded id token claims\r\n     * @returns {boolean}\r\n     */\r\n    validateIdTokenClaims(idTokenClaims: IdTokenClaims): boolean {\r\n        const now = Math.round(new Date().getTime() / 1000); // in UNIX format\r\n\r\n        /**\r\n         * At the very least, check for issuer, audience, issue and expiry dates.\r\n         * For more information on validating id tokens, visit:\r\n         * https://docs.microsoft.com/azure/active-directory/develop/id-tokens#validating-an-id_token\r\n         */\r\n        const checkIssuer = idTokenClaims.iss.includes(this.appSettings.appCredentials.tenantId) ? true : false;\r\n        const checkAudience = idTokenClaims.aud === this.msalConfig.auth.clientId ? true : false;\r\n        const checkTimestamp = idTokenClaims.iat <= now && idTokenClaims.exp >= now ? true : false;\r\n\r\n        return checkIssuer && checkAudience && checkTimestamp;\r\n    };\r\n\r\n    /**\r\n     * Verifies the access token for signature\r\n     * @param {string} accessToken: raw JWT token\r\n     * @param {string} protectedRoute: used for checking scope\r\n     * @returns {Promise}\r\n     */\r\n     async verifyAccessTokenSignature(accessToken: string, protectedRoute: string): Promise<boolean> {\r\n        try {\r\n            const verifiedToken = await this.verifyTokenSignature(accessToken);\r\n\r\n            if (verifiedToken) {\r\n                return this.validateAccessTokenClaims(verifiedToken as AccessTokenClaims, protectedRoute);\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Validates the access token for a set of claims\r\n     * @param {TokenClaims} verifiedToken: token with a verified signature\r\n     * @param {string} protectedRoute: route where this token is required to access\r\n     * @returns {boolean}\r\n     */\r\n    validateAccessTokenClaims(verifiedToken: AccessTokenClaims, protectedRoute: string): boolean {\r\n        const now = Math.round(new Date().getTime() / 1000); // in UNIX format\r\n\r\n        /**\r\n         * At the very least, validate the token with respect to issuer, audience, scope\r\n         * and timestamp, though implementation and extent vary. For more information, visit:\r\n         * https://docs.microsoft.com/azure/active-directory/develop/access-tokens#validating-tokens\r\n         */\r\n        const checkIssuer = verifiedToken.iss.includes(this.appSettings.appCredentials.tenantId) ? true : false;\r\n        const checkTimestamp = verifiedToken.iat <= now && verifiedToken.iat >= now ? true : false;\r\n\r\n        const checkAudience = verifiedToken.aud === this.appSettings.appCredentials.clientId ||\r\n            verifiedToken.aud === \"api://\" + this.appSettings.appCredentials.clientId ? true : false;\r\n\r\n        const checkScopes = Object.values(this.appSettings.ownedResources).find((resource: Resource) => resource.endpoint === protectedRoute)\r\n            .scopes.every(scp => verifiedToken.scp.includes(scp));\r\n\r\n        return checkAudience && checkIssuer && checkTimestamp && checkScopes;\r\n    };\r\n\r\n    /**\r\n     * Fetches signing keys of an access token\r\n     * from the authority discovery endpoint\r\n     * @param {Object} header: token header\r\n     * @param {string} tid: tenant id\r\n     * @returns {Promise}\r\n     */\r\n    private async getSigningKeys(header, tid: string): Promise<string> {\r\n        let jwksUri;\r\n\r\n        // Check if a B2C application i.e. app has b2cPolicies\r\n        if (this.appSettings.b2cPolicies) {\r\n            jwksUri = `${this.msalConfig.auth.authority}/discovery/v2.0/keys`;\r\n        } else {\r\n            jwksUri = `https://${Constants.DEFAULT_AUTHORITY_HOST}/${tid}/discovery/v2.0/keys`;\r\n        }\r\n\r\n        const client = jwksClient({\r\n            jwksUri: jwksUri,\r\n        });\r\n\r\n        return (await client.getSigningKeyAsync(header.kid)).getPublicKey();\r\n    };\r\n}\r\n","import { CertificateClient, KeyVaultCertificate } from \"@azure/keyvault-certificates\";\r\nimport { DefaultAzureCredential } from \"@azure/identity\";\r\nimport { KeyVaultSecret, SecretClient } from \"@azure/keyvault-secrets\";\r\n\r\nimport { AppSettings } from \"./Types\";\r\nimport { KeyVaultCredentialTypes } from \"./Constants\";\r\n\r\nexport class KeyVaultManager {\r\n\r\n    /**\r\n     * Fetches credentials from Key Vault and updates appSettings\r\n     * @param {AppSettings} config \r\n     * @returns {Promise}\r\n     */\r\n    async getCredentialFromKeyVault(config: AppSettings): Promise<AppSettings> {\r\n\r\n        const credential = new DefaultAzureCredential();\r\n\r\n        if (!config.appCredentials.keyVaultCredential) {\r\n            return config\r\n        }\r\n\r\n        switch (config.appCredentials.keyVaultCredential.credentialType) {\r\n            case KeyVaultCredentialTypes.SECRET: {\r\n                try {\r\n                    const secretResponse = await this.getSecretCredential(config, credential);\r\n                    config.appCredentials.clientSecret = secretResponse.value;\r\n                    return config;\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n                break;\r\n            }\r\n\r\n            case KeyVaultCredentialTypes.CERTIFICATE: {\r\n                try {\r\n                    const certificateResponse = await this.getCertificateCredential(config, credential);\r\n                    const secretResponse = await this.getSecretCredential(config, credential);\r\n\r\n                    config.appCredentials.clientCertificate = {\r\n                        thumbprint: certificateResponse.properties.x509Thumbprint.toString(),\r\n                        privateKey: secretResponse.value.split('-----BEGIN CERTIFICATE-----\\n')[0]\r\n                    }\r\n                    return config;\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n                break;\r\n            }\r\n\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets a certificate credential from Key Vault\r\n     * @param {AppSettings} config \r\n     * @param {DefaultAzureCredential} credential \r\n     * @returns {Promise}\r\n     */\r\n    async getCertificateCredential(config: AppSettings, credential: DefaultAzureCredential): Promise<KeyVaultCertificate> {\r\n\r\n        // Initialize secretClient with credentials\r\n        const secretClient = new CertificateClient(config.appCredentials.keyVaultCredential.keyVaultUrl, credential);\r\n\r\n        try {\r\n            const keyVaultCertificate = await secretClient.getCertificate(config.appCredentials.keyVaultCredential.credentialName);\r\n            return keyVaultCertificate;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets a secret credential from Key Vault\r\n     * @param {AppSettings} config \r\n     * @param {DefaultAzureCredential} credential \r\n     * @returns {Promise}\r\n     */\r\n    async getSecretCredential(config: AppSettings, credential: DefaultAzureCredential): Promise<KeyVaultSecret> {\r\n\r\n        // Initialize secretClient with credentials\r\n        const secretClient = new SecretClient(config.appCredentials.keyVaultCredential.keyVaultUrl, credential);\r\n\r\n        try {\r\n            const keyVaultSecret = await secretClient.getSecret(config.appCredentials.keyVaultCredential.credentialName);\r\n            return keyVaultSecret;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return error;\r\n        }\r\n    }\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport axios, { AxiosResponse, AxiosRequestConfig } from \"axios\";\r\nimport { StringUtils } from \"@azure/msal-common\";\r\n\r\nimport { \r\n    AccessConstants, \r\n    InfoMessages, \r\n    ErrorMessages \r\n} from \"./Constants\";\r\n\r\nimport { Logger } from \"./Logger\";\r\n\r\nexport class FetchManager {\r\n\r\n    /**\r\n     * Calls a resource endpoint with a raw access token\r\n     * using the authorization bearer token scheme\r\n     * @param {string} endpoint \r\n     * @param {string} accessToken \r\n     * @returns {Promise}\r\n     */\r\n    static callApiEndpoint = async (endpoint: string, accessToken: string): Promise<any> => {\r\n\r\n        if (StringUtils.isEmpty(accessToken)) {\r\n            throw new Error(ErrorMessages.TOKEN_NOT_FOUND)\r\n        }\r\n\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`\r\n            }\r\n        };\r\n\r\n        try {\r\n            Logger.logInfo(InfoMessages.REQUEST_FOR_RESOURCE);\r\n            const response: AxiosResponse = await axios.get(endpoint, options);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.log(error)\r\n            return error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles queries against Microsoft Graph that return multiple pages of data  \r\n     * @param {string} accessToken: access token required by endpoint \r\n     * @param {string} nextPage: next page link\r\n     * @param {Array} data: stores data from each page\r\n     * @returns {Promise}\r\n     */\r\n    static handlePagination = async (accessToken: string, nextPage: string, data: string[] = []): Promise<any> => {\r\n\r\n        try {\r\n            const graphResponse = await FetchManager.callApiEndpoint(nextPage, accessToken);\r\n            graphResponse[\"value\"].map((v) => data.push(v.id));\r\n    \r\n            if (graphResponse[AccessConstants.PAGINATION_LINK]) {\r\n                return await FetchManager.handlePagination(accessToken, graphResponse[AccessConstants.PAGINATION_LINK], data)\r\n            } else {\r\n                return data;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            return error;\r\n        }\r\n    \r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Request } from \"express\";\r\nimport { IUri, UrlString } from \"@azure/msal-common\";\r\n\r\nexport class UrlUtils {\r\n  /**\r\n   * Gets the absolute URL from a given request and path string\r\n   * @param {Request} req: express request object \r\n   * @param {string} url: a given URL\r\n   * @returns {string}\r\n   */\r\n  static ensureAbsoluteUrl = (req: Request, url: string): string => {\r\n    const urlComponents: IUri = new UrlString(url).getUrlComponents();\r\n\r\n    if (!urlComponents.Protocol) {\r\n      if (!urlComponents.HostNameAndPort) {\r\n        return req.protocol + \"://\" + req.get(\"host\") + url;\r\n      }\r\n      return req.protocol + \"://\" + url;\r\n    } else {\r\n      return url;\r\n    }\r\n  };\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport express from \"express\";\r\n\r\nimport {\r\n    RequestHandler,\r\n    Request,\r\n    Response,\r\n    NextFunction,\r\n    Router\r\n} from \"express\";\r\n\r\nimport {\r\n    InteractionRequiredAuthError,\r\n    OIDC_DEFAULT_SCOPES,\r\n    PromptValue,\r\n    StringUtils,\r\n} from \"@azure/msal-common\";\r\n\r\nimport {\r\n    ConfidentialClientApplication,\r\n    Configuration,\r\n    AccountInfo,\r\n    ICachePlugin,\r\n    CryptoProvider,\r\n    AuthorizationUrlRequest,\r\n    AuthorizationCodeRequest,\r\n    SilentFlowRequest,\r\n    OnBehalfOfRequest,\r\n} from \"@azure/msal-node\";\r\n\r\nimport { ConfigurationUtils } from \"./ConfigurationUtils\";\r\nimport { TokenValidator } from \"./TokenValidator\";\r\nimport { KeyVaultManager } from \"./KeyVaultManager\";\r\nimport { FetchManager } from \"./FetchManager\";\r\nimport { UrlUtils } from \"./UrlUtils\";\r\nimport { Logger } from \"./Logger\";\r\n\r\nimport {\r\n    Resource,\r\n    AppSettings,\r\n    AuthCodeParams,\r\n    InitializationOptions,\r\n    TokenRequestOptions,\r\n    GuardOptions,\r\n    AccessRule,\r\n    SignInOptions,\r\n    SignOutOptions,\r\n    HandleRedirectOptions\r\n} from \"./Types\";\r\n\r\nimport {\r\n    AppStages,\r\n    ErrorMessages,\r\n    AccessConstants,\r\n    InfoMessages\r\n} from \"./Constants\";\r\n\r\n/**\r\n * A simple wrapper around MSAL Node ConfidentialClientApplication object.\r\n * It offers a collection of middleware and utility methods that automate\r\n * basic authentication and authorization tasks in Express MVC web apps and\r\n * RESTful APIs (coming soon).\r\n */\r\nexport class AuthProvider {\r\n    appSettings: AppSettings;\r\n    private logger: Logger;\r\n    private msalConfig: Configuration;\r\n    private cryptoProvider: CryptoProvider;\r\n    private tokenValidator: TokenValidator;\r\n    private msalClient: ConfidentialClientApplication;\r\n\r\n    /**\r\n     * @param {AppSettings} appSettings\r\n     * @param {ICachePlugin} cache: cachePlugin\r\n     * @constructor\r\n     */\r\n    constructor(appSettings: AppSettings, cache?: ICachePlugin) {\r\n        ConfigurationUtils.validateAppSettings(appSettings);\r\n        this.appSettings = appSettings;\r\n\r\n        this.msalConfig = ConfigurationUtils.getMsalConfiguration(appSettings, cache);\r\n        this.msalClient = new ConfidentialClientApplication(this.msalConfig);\r\n\r\n        this.tokenValidator = new TokenValidator(this.appSettings, this.msalConfig);\r\n        this.cryptoProvider = new CryptoProvider();\r\n    }\r\n\r\n    /**\r\n     * Asynchronously builds authProvider object with credentials fetched from Key Vault\r\n     * @param {AppSettings} appSettings\r\n     * @param {ICachePlugin} cache: cachePlugin\r\n     * @returns \r\n     */\r\n    static async buildAsync(appSettings: AppSettings, cache?: ICachePlugin): Promise<AuthProvider> {\r\n        try {\r\n            const keyVault = new KeyVaultManager();\r\n            const appSettingsWithKeyVaultCredentials = await keyVault.getCredentialFromKeyVault(appSettings);\r\n            const authProvider = new AuthProvider(appSettingsWithKeyVaultCredentials, cache);\r\n            return authProvider;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize AuthProvider and set default routes and handlers\r\n     * @param {InitializationOptions} options\r\n     * @returns {Router}\r\n     */\r\n    initialize = (options?: InitializationOptions): Router => {\r\n\r\n        // TODO: initialize app defaults\r\n\r\n        const appRouter = express.Router();\r\n\r\n        // handle redirect\r\n        appRouter.get(this.appSettings.authRoutes.redirect, this.handleRedirect());\r\n\r\n        if (this.appSettings.authRoutes.frontChannelLogout) {\r\n            /**\r\n             * Expose front-channel logout route. For more information, visit: \r\n             * https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc#single-sign-out\r\n             */\r\n            appRouter.get(this.appSettings.authRoutes.frontChannelLogout, (req, res, next) => {\r\n                req.session.destroy(() => {\r\n                    res.sendStatus(200);\r\n                });\r\n            });\r\n        }\r\n\r\n        return appRouter;\r\n    }\r\n\r\n    // ========== ROUTE HANDLERS ===========\r\n\r\n    /**\r\n     * Initiates sign in flow\r\n     * @param {SignInOptions} options: options to modify login request\r\n     * @returns {RequestHandler}\r\n     */\r\n    signIn = (options?: SignInOptions): RequestHandler => {\r\n        return (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n            /**\r\n             * Request Configuration\r\n             * We manipulate these three request objects below\r\n             * to acquire a token with the appropriate claims\r\n             */\r\n            if (!req.session[\"authCodeRequest\"]) {\r\n                req.session.authCodeRequest = {\r\n                    authority: \"\",\r\n                    scopes: [],\r\n                    state: {},\r\n                    redirectUri: \"\",\r\n                } as AuthorizationUrlRequest;\r\n            }\r\n\r\n            if (!req.session[\"tokenRequest\"]) {\r\n                req.session.tokenRequest = {\r\n                    authority: \"\",\r\n                    scopes: [],\r\n                    redirectUri: \"\",\r\n                    code: \"\",\r\n                } as AuthorizationCodeRequest;\r\n            }\r\n\r\n            // signed-in user's account\r\n            if (!req.session[\"account\"]) {\r\n                req.session.account = {\r\n                    homeAccountId: \"\",\r\n                    environment: \"\",\r\n                    tenantId: \"\",\r\n                    username: \"\",\r\n                    idTokenClaims: {},\r\n                } as AccountInfo;\r\n            }\r\n\r\n            // random GUID for csrf protection\r\n            req.session.nonce = this.cryptoProvider.createNewGuid();\r\n\r\n            // TODO: encrypt state parameter \r\n            const state = this.cryptoProvider.base64Encode(\r\n                JSON.stringify({\r\n                    stage: AppStages.SIGN_IN,\r\n                    path: options.successRedirect,\r\n                    nonce: req.session.nonce,\r\n                })\r\n            );\r\n\r\n            const params: AuthCodeParams = {\r\n                authority: this.msalConfig.auth.authority,\r\n                scopes: OIDC_DEFAULT_SCOPES,\r\n                state: state,\r\n                redirect: UrlUtils.ensureAbsoluteUrl(req, this.appSettings.authRoutes.redirect),\r\n                prompt: PromptValue.SELECT_ACCOUNT,\r\n            };\r\n\r\n            // get url to sign user in\r\n            return this.getAuthCode(req, res, next, params);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initiate sign out and destroy the session\r\n     * @param options: options to modify logout request \r\n     * @returns {RequestHandler}\r\n     */\r\n    signOut = (options?: SignOutOptions): RequestHandler => {\r\n        return (req: Request, res: Response, next: NextFunction): void => {\r\n            const postLogoutRedirectUri = UrlUtils.ensureAbsoluteUrl(req, options.successRedirect);\r\n\r\n            /**\r\n             * Construct a logout URI and redirect the user to end the\r\n             * session with Azure AD/B2C. For more information, visit:\r\n             * (AAD) https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc#send-a-sign-out-request\r\n             * (B2C) https://docs.microsoft.com/azure/active-directory-b2c/openid-connect#send-a-sign-out-request\r\n             */\r\n            const logoutURI = `${this.msalConfig.auth.authority}/oauth2/v2.0/logout?post_logout_redirect_uri=${postLogoutRedirectUri}`;\r\n\r\n            req.session.isAuthenticated = false;\r\n\r\n            req.session.destroy(() => {\r\n                res.redirect(logoutURI);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Middleware that handles redirect depending on request state\r\n     * There are basically 2 stages: sign-in and acquire token\r\n     * @param {HandleRedirectOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    private handleRedirect = (options?: HandleRedirectOptions): RequestHandler => {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n            if (req.query.state) {\r\n                const state = JSON.parse(this.cryptoProvider.base64Decode(req.query.state as string));\r\n\r\n                // check if nonce matches\r\n                if (state.nonce === req.session.nonce) {\r\n                    switch (state.stage) {\r\n                        case AppStages.SIGN_IN: {\r\n                            // token request should have auth code\r\n                            req.session.tokenRequest.code = req.query.code as string;\r\n\r\n                            try {\r\n                                // exchange auth code for tokens\r\n                                const tokenResponse = await this.msalClient.acquireTokenByCode(req.session.tokenRequest);\r\n\r\n                                try {\r\n                                    const isIdTokenValid = await this.tokenValidator.validateIdToken(tokenResponse.idToken);\r\n\r\n                                    if (isIdTokenValid) {\r\n                                        // assign session variables\r\n                                        req.session.account = tokenResponse.account;\r\n                                        req.session.isAuthenticated = true;\r\n\r\n                                        res.redirect(state.path);\r\n                                    } else {\r\n                                        Logger.logError(ErrorMessages.INVALID_TOKEN);\r\n                                        res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                                    }\r\n                                } catch (error) {\r\n                                    Logger.logError(ErrorMessages.CANNOT_VALIDATE_TOKEN);\r\n                                    console.log(error);\r\n                                    next(error)\r\n                                }\r\n                            } catch (error) {\r\n                                Logger.logError(ErrorMessages.TOKEN_ACQUISITION_FAILED);\r\n                                console.log(error);\r\n                                next(error)\r\n                            }\r\n                            break;\r\n                        }\r\n\r\n                        case AppStages.ACQUIRE_TOKEN: {\r\n                            // get the name of the resource associated with scope\r\n                            const resourceName = this.getResourceNameFromScopes(req.session.tokenRequest.scopes);\r\n\r\n                            req.session.tokenRequest.code = req.query.code as string\r\n\r\n                            try {\r\n                                const tokenResponse = await this.msalClient.acquireTokenByCode(req.session.tokenRequest);\r\n                                req.session.remoteResources[resourceName].accessToken = tokenResponse.accessToken;\r\n                                res.redirect(state.path);\r\n                            } catch (error) {\r\n                                Logger.logError(ErrorMessages.TOKEN_ACQUISITION_FAILED);\r\n                                console.log(error);\r\n                                next(error);\r\n                            }\r\n                            break;\r\n                        }\r\n\r\n                        default:\r\n                            Logger.logError(ErrorMessages.CANNOT_DETERMINE_APP_STAGE);\r\n                            res.redirect(this.appSettings.authRoutes.error);\r\n                            break;\r\n                    }\r\n                } else {\r\n                    Logger.logError(ErrorMessages.NONCE_MISMATCH);\r\n                    res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                }\r\n            } else {\r\n                Logger.logError(ErrorMessages.STATE_NOT_FOUND)\r\n                res.redirect(this.appSettings.authRoutes.unauthorized);\r\n            }\r\n        }\r\n    };\r\n\r\n    // ========== MIDDLEWARE ===========\r\n\r\n    /**\r\n     * Middleware that gets tokens via acquireToken*\r\n     * @param {TokenRequestOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    getToken = (options: TokenRequestOptions): RequestHandler => {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n            // get scopes for token request\r\n            const scopes = options.resource.scopes;\r\n\r\n            const resourceName = this.getResourceNameFromScopes(scopes)\r\n\r\n            if (!req.session.remoteResources) {\r\n                req.session.remoteResources = {};\r\n            }\r\n\r\n            req.session.remoteResources = {\r\n                [resourceName]: {\r\n                    ...this.appSettings.remoteResources[resourceName],\r\n                    accessToken: null,\r\n                } as Resource\r\n            };\r\n\r\n            try {\r\n                const silentRequest: SilentFlowRequest = {\r\n                    account: req.session.account,\r\n                    scopes: scopes,\r\n                };\r\n\r\n                // acquire token silently to be used in resource call\r\n                const tokenResponse = await this.msalClient.acquireTokenSilent(silentRequest);\r\n\r\n                // In B2C scenarios, sometimes an access token is returned empty.\r\n                // In that case, we will acquire token interactively instead.\r\n                if (StringUtils.isEmpty(tokenResponse.accessToken)) {\r\n                    Logger.logError(ErrorMessages.TOKEN_NOT_FOUND);\r\n                    throw new InteractionRequiredAuthError(ErrorMessages.INTERACTION_REQUIRED);\r\n                }\r\n\r\n                req.session.remoteResources[resourceName].accessToken = tokenResponse.accessToken;\r\n                next();\r\n            } catch (error) {\r\n                // in case there are no cached tokens, initiate an interactive call\r\n                if (error instanceof InteractionRequiredAuthError) {\r\n                    const state = this.cryptoProvider.base64Encode(\r\n                        JSON.stringify({\r\n                            stage: AppStages.ACQUIRE_TOKEN,\r\n                            path: req.route.path,\r\n                            nonce: req.session.nonce,\r\n                        })\r\n                    );\r\n\r\n                    const params: AuthCodeParams = {\r\n                        authority: this.msalConfig.auth.authority,\r\n                        scopes: scopes,\r\n                        state: state,\r\n                        redirect: UrlUtils.ensureAbsoluteUrl(req, this.appSettings.authRoutes.redirect),\r\n                        account: req.session.account,\r\n                    };\r\n\r\n                    // initiate the first leg of auth code grant to get token\r\n                    return this.getAuthCode(req, res, next, params);\r\n                } else {\r\n                    console.log(error);\r\n                    next(error);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Middleware that gets tokens via OBO flow. Used in web API scenarios\r\n     * @param {TokenRequestOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    getTokenOnBehalf = (options: TokenRequestOptions): RequestHandler => {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n            const authHeader = req.headers.authorization;\r\n\r\n            // get scopes for token request\r\n            const scopes = options.resource.scopes;\r\n            const resourceName = this.getResourceNameFromScopes(scopes);\r\n\r\n            const oboRequest: OnBehalfOfRequest = {\r\n                oboAssertion: authHeader.split(\" \")[1],\r\n                scopes: scopes,\r\n            }\r\n\r\n            try {\r\n                const tokenResponse = await this.msalClient.acquireTokenOnBehalfOf(oboRequest);\r\n\r\n                // as OBO is commonly used in middle-tier web APIs without sessions, attach AT to req\r\n                req[\"locals\"] = {\r\n                    [resourceName]: {\r\n                        accessToken: tokenResponse.accessToken\r\n                    }\r\n                }\r\n\r\n                next();\r\n            } catch (error) {\r\n                console.log(error);\r\n                next(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    // ============== GUARDS ===============\r\n\r\n    /**\r\n     * Check if authenticated in session\r\n     * @param {GuardOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    isAuthenticated = (options?: GuardOptions): RequestHandler => {\r\n        return (req: Request, res: Response, next: NextFunction): void => {\r\n            if (req.session) {\r\n                if (!req.session.isAuthenticated) {\r\n                    Logger.logError(ErrorMessages.NOT_PERMITTED);\r\n                    return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                }\r\n\r\n                next();\r\n            } else {\r\n                Logger.logError(ErrorMessages.SESSION_NOT_FOUND);\r\n                res.redirect(this.appSettings.authRoutes.unauthorized);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Receives access token in req authorization header\r\n     * and validates it using the jwt.verify\r\n     * @param {GuardOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    isAuthorized = (options?: GuardOptions): RequestHandler => {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n            const accessToken = req.headers.authorization.split(\" \")[1];\r\n\r\n            if (req.headers.authorization) {\r\n                if (!(await this.tokenValidator.verifyAccessTokenSignature(accessToken, req.route.path))) {\r\n                    Logger.logError(ErrorMessages.INVALID_TOKEN);\r\n                    return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                }\r\n\r\n                next();\r\n            } else {\r\n                Logger.logError(ErrorMessages.TOKEN_NOT_FOUND);\r\n                res.redirect(this.appSettings.authRoutes.unauthorized);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Checks if the user has access for this route, defined in access matrix\r\n     * @param {GuardOptions} options: options to modify this middleware\r\n     * @returns {RequestHandler}\r\n     */\r\n    hasAccess = (options?: GuardOptions): RequestHandler => {\r\n        return async (req: Request, res: Response, next: NextFunction): Promise<any> => {\r\n            if (req.session && this.appSettings.accessMatrix) {\r\n\r\n                const checkFor = options.accessRule.hasOwnProperty(AccessConstants.GROUPS) ? AccessConstants.GROUPS : AccessConstants.ROLES;\r\n\r\n                switch (checkFor) {\r\n                    case AccessConstants.GROUPS:\r\n\r\n                        if (req.session.account.idTokenClaims[AccessConstants.GROUPS] === undefined) {\r\n                            if (req.session.account.idTokenClaims[AccessConstants.CLAIM_NAMES] || req.session.account.idTokenClaims[AccessConstants.CLAIM_SOURCES]) {\r\n                                Logger.logWarning(InfoMessages.OVERAGE_OCCURRED)\r\n                                return await this.handleOverage(req, res, next, options.accessRule);\r\n                            } else {\r\n                                Logger.logError(ErrorMessages.USER_HAS_NO_GROUP);\r\n                                return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                            }\r\n                        } else {\r\n                            const groups = req.session.account.idTokenClaims[AccessConstants.GROUPS];\r\n\r\n                            if (!this.checkAccessRule(req.method, options.accessRule, groups, AccessConstants.GROUPS)) {\r\n                                return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                            }\r\n                        }\r\n\r\n                        next();\r\n                        break;\r\n\r\n                    case AccessConstants.ROLES:\r\n                        if (req.session.account.idTokenClaims[AccessConstants.ROLES] === undefined) {\r\n                            Logger.logError(ErrorMessages.USER_HAS_NO_ROLE);\r\n                            return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                        } else {\r\n                            const roles = req.session.account.idTokenClaims[AccessConstants.ROLES];\r\n\r\n                            if (!this.checkAccessRule(req.method, options.accessRule, roles, AccessConstants.ROLES)) {\r\n                                return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                            }\r\n                        }\r\n\r\n                        next();\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n            } else {\r\n                res.redirect(this.appSettings.authRoutes.unauthorized);\r\n            }\r\n        }\r\n    }\r\n\r\n    // ============== UTILS ===============\r\n\r\n    /**\r\n     * This method is used to generate an auth code url request\r\n     * @param {Request} req: express request object\r\n     * @param {Response} res: express response object\r\n     * @param {NextFunction} next: express next function\r\n     * @param {AuthCodeParams} params: modifies auth code url request\r\n     * @returns {Promise}\r\n     */\r\n    private async getAuthCode(req: Request, res: Response, next: NextFunction, params: AuthCodeParams): Promise<void> {\r\n        // prepare the request\r\n        req.session.authCodeRequest.authority = params.authority;\r\n        req.session.authCodeRequest.scopes = params.scopes;\r\n        req.session.authCodeRequest.state = params.state;\r\n        req.session.authCodeRequest.redirectUri = params.redirect;\r\n        req.session.authCodeRequest.prompt = params.prompt;\r\n        req.session.authCodeRequest.account = params.account;\r\n\r\n        req.session.tokenRequest.authority = params.authority;\r\n        req.session.tokenRequest.scopes = params.scopes;\r\n        req.session.tokenRequest.redirectUri = params.redirect;\r\n\r\n        // request an authorization code to exchange for tokens\r\n        try {\r\n            const response = await this.msalClient.getAuthCodeUrl(req.session.authCodeRequest);\r\n            res.redirect(response);\r\n        } catch (error) {\r\n            Logger.logError(ErrorMessages.AUTH_CODE_NOT_OBTAINED);\r\n            console.log(error);\r\n            next(error);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handles group overage claims by querying MS Graph /memberOf endpoint\r\n     * @param {Request} req: express request object\r\n     * @param {Response} res: express response object\r\n     * @param {NextFunction} next: express next function\r\n     * @param {AccessRule} rule: a given access rule\r\n     * @returns {Promise}\r\n     */\r\n    private async handleOverage(req: Request, res: Response, next: NextFunction, rule: AccessRule): Promise<void> {\r\n        const { _claim_names, _claim_sources, ...newIdTokenClaims } = <any>req.session.account.idTokenClaims;\r\n\r\n        const silentRequest: SilentFlowRequest = {\r\n            account: req.session.account,\r\n            scopes: AccessConstants.GRAPH_MEMBER_SCOPES.split(\" \"),\r\n        };\r\n\r\n        try {\r\n            // acquire token silently to be used in resource call\r\n            const tokenResponse = await this.msalClient.acquireTokenSilent(silentRequest);\r\n            try {\r\n                const graphResponse = await FetchManager.callApiEndpoint(AccessConstants.GRAPH_MEMBERS_ENDPOINT, tokenResponse.accessToken);\r\n\r\n                /**\r\n                 * Some queries against Microsoft Graph return multiple pages of data either due to server-side paging \r\n                 * or due to the use of the $top query parameter to specifically limit the page size in a request. \r\n                 * When a result set spans multiple pages, Microsoft Graph returns an @odata.nextLink property in \r\n                 * the response that contains a URL to the next page of results. Learn more at https://docs.microsoft.com/graph/paging\r\n                 */\r\n                if (graphResponse[AccessConstants.PAGINATION_LINK]) {\r\n                    try {\r\n                        const userGroups = await FetchManager.handlePagination(tokenResponse.accessToken, graphResponse[AccessConstants.PAGINATION_LINK]);\r\n\r\n                        req.session.account.idTokenClaims = {\r\n                            ...newIdTokenClaims,\r\n                            groups: userGroups\r\n                        }\r\n\r\n                        if (!this.checkAccessRule(req.method, rule, req.session.account.idTokenClaims[AccessConstants.GROUPS], AccessConstants.GROUPS)) {\r\n                            return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                        } else {\r\n                            return next();\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        next(error);\r\n                    }\r\n                } else {\r\n                    req.session.account.idTokenClaims = {\r\n                        ...newIdTokenClaims,\r\n                        groups: graphResponse[\"value\"].map((v) => v.id)\r\n                    }\r\n\r\n                    if (!this.checkAccessRule(req.method, rule, req.session.account.idTokenClaims[AccessConstants.GROUPS], AccessConstants.GROUPS)) {\r\n                        return res.redirect(this.appSettings.authRoutes.unauthorized);\r\n                    } else {\r\n                        return next();\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                next(error);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            next(error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the request passes a given access rule\r\n     * @param {string} method: HTTP method for this route\r\n     * @param {AccessRule} rule: access rule for this route\r\n     * @param {Array} creds: user's credentials i.e. roles or groups\r\n     * @param {string} credType: roles or groups\r\n     * @returns {boolean}\r\n     */\r\n    private checkAccessRule(method: string, rule: AccessRule, creds: string[], credType: string): boolean {\r\n        if (rule.methods.includes(method)) {\r\n            switch (credType) {\r\n                case AccessConstants.GROUPS:\r\n                    if (rule.groups.filter(elem => creds.includes(elem)).length < 1) {\r\n                        Logger.logError(ErrorMessages.USER_NOT_IN_GROUP);\r\n                        return false;\r\n                    }\r\n                    break;\r\n\r\n                case AccessConstants.ROLES:\r\n                    if (rule.roles.filter(elem => creds.includes(elem)).length < 1) {\r\n                        Logger.logError(ErrorMessages.USER_NOT_IN_ROLE);\r\n                        return false;\r\n                    }\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        } else {\r\n            Logger.logError(ErrorMessages.METHOD_NOT_ALLOWED);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Util method to get the resource name for a given scope(s)\r\n     * @param {Array} scopes: an array of scopes that the resource is associated with\r\n     * @returns {string}\r\n     */\r\n    private getResourceNameFromScopes(scopes: string[]): string {\r\n        // TODO: deep check equality here \r\n\r\n        const index = Object.values({ ...this.appSettings.remoteResources, ...this.appSettings.ownedResources })\r\n            .findIndex((resource: Resource) => JSON.stringify(resource.scopes) === JSON.stringify(scopes));\r\n\r\n        const resourceName = Object.keys({ ...this.appSettings.remoteResources, ...this.appSettings.ownedResources })[index];\r\n        return resourceName;\r\n    };\r\n}\r\n"],"names":["undefined","AppStages","SIGN_IN","SIGN_OUT","ACQUIRE_TOKEN","AADAuthorityConstants","COMMON","ORGANIZATIONS","CONSUMERS","KeyVaultCredentialTypes","SECRET","CERTIFICATE","AccessConstants","GROUPS","ROLES","CLAIM_NAMES","CLAIM_SOURCES","PAGINATION_LINK","GRAPH_MEMBERS_ENDPOINT","GRAPH_MEMBER_SCOPES","InfoMessages","REQUEST_FOR_RESOURCE","OVERAGE_OCCURRED","ErrorMessages","NOT_PERMITTED","INVALID_TOKEN","CANNOT_DETERMINE_APP_STAGE","CANNOT_VALIDATE_TOKEN","NONCE_MISMATCH","INTERACTION_REQUIRED","TOKEN_ACQUISITION_FAILED","AUTH_CODE_NOT_OBTAINED","TOKEN_NOT_FOUND","TOKEN_NOT_DECODED","TOKEN_NOT_VERIFIED","KEYS_NOT_OBTAINED","STATE_NOT_FOUND","USER_HAS_NO_ROLE","USER_NOT_IN_ROLE","USER_HAS_NO_GROUP","USER_NOT_IN_GROUP","METHOD_NOT_ALLOWED","RULE_NOT_FOUND","SESSION_NOT_FOUND","KEY_VAULT_CONFIG_NOT_FOUND","ConfigurationErrorMessages","NO_CLIENT_ID","INVALID_CLIENT_ID","NO_TENANT_INFO","INVALID_TENANT_INFO","NO_CLIENT_CREDENTIAL","NO_REDIRECT_URI","NO_ERROR_ROUTE","NO_UNAUTHORIZED_ROUTE","ErrorCodes","ConfigurationUtils","validateAppSettings","config","StringUtils","isEmpty","appCredentials","clientId","Error","isGuid","tenantId","Object","values","includes","clientSecret","clientCertificate","authRoutes","redirect","error","unauthorized","getMsalConfiguration","cachePlugin","auth","authority","b2cPolicies","entries","Constants","DEFAULT_AUTHORITY_HOST","hasOwnProperty","knownAuthorities","UrlString","getDomainFromUrl","cache","system","loggerOptions","loggerCallback","logLevel","message","containsPii","LogLevel","console","Info","info","Verbose","debug","Warning","warn","piiLoggingEnabled","guid","regexGuid","test","Logger","logError","log","logMessage","logWarning","logInfo","timestamp","Date","toUTCString","logHeader","TokenValidator","appSettings","msalConfig","verifyTokenSignature","authToken","decodedToken","jwt","decode","complete","getSigningKeys","header","payload","tid","keys","verifiedToken","verify","validateIdToken","idToken","validateIdTokenClaims","idTokenClaims","now","Math","round","getTime","checkIssuer","iss","checkAudience","aud","checkTimestamp","iat","exp","verifyAccessTokenSignature","accessToken","protectedRoute","validateAccessTokenClaims","checkScopes","ownedResources","find","resource","endpoint","scopes","every","scp","jwksUri","client","jwksClient","getSigningKeyAsync","kid","getPublicKey","KeyVaultManager","getCredentialFromKeyVault","credential","DefaultAzureCredential","keyVaultCredential","credentialType","getSecretCredential","secretResponse","value","getCertificateCredential","certificateResponse","thumbprint","properties","x509Thumbprint","toString","privateKey","split","secretClient","CertificateClient","keyVaultUrl","getCertificate","credentialName","keyVaultCertificate","SecretClient","getSecret","keyVaultSecret","FetchManager","options","headers","Authorization","axios","get","response","data","nextPage","callApiEndpoint","graphResponse","map","v","push","id","handlePagination","UrlUtils","req","url","urlComponents","getUrlComponents","Protocol","HostNameAndPort","protocol","AuthProvider","appRouter","express","Router","handleRedirect","frontChannelLogout","res","next","session","destroy","sendStatus","authCodeRequest","state","redirectUri","tokenRequest","code","account","homeAccountId","environment","username","nonce","cryptoProvider","createNewGuid","base64Encode","JSON","stringify","stage","path","successRedirect","params","OIDC_DEFAULT_SCOPES","ensureAbsoluteUrl","prompt","PromptValue","SELECT_ACCOUNT","getAuthCode","postLogoutRedirectUri","logoutURI","isAuthenticated","query","parse","base64Decode","msalClient","acquireTokenByCode","tokenResponse","tokenValidator","isIdTokenValid","resourceName","getResourceNameFromScopes","remoteResources","silentRequest","acquireTokenSilent","InteractionRequiredAuthError","route","authHeader","authorization","oboRequest","oboAssertion","acquireTokenOnBehalfOf","accessMatrix","checkFor","accessRule","handleOverage","groups","checkAccessRule","method","roles","ConfidentialClientApplication","CryptoProvider","buildAsync","keyVault","appSettingsWithKeyVaultCredentials","authProvider","getAuthCodeUrl","rule","_claim_names","newIdTokenClaims","userGroups","creds","credType","methods","filter","elem","length","index","findIndex"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,IAAI,UAAU,OAAO,EAAE;AAElC;AACA,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC;AAC5B,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC,cAAc,CAAC;AACjC,EAAE,IAAIA,WAAS,CAAC;AAChB,EAAE,IAAI,OAAO,GAAG,OAAO,MAAM,KAAK,UAAU,GAAG,MAAM,GAAG,EAAE,CAAC;AAC3D,EAAE,IAAI,cAAc,GAAG,OAAO,CAAC,QAAQ,IAAI,YAAY,CAAC;AACxD,EAAE,IAAI,mBAAmB,GAAG,OAAO,CAAC,aAAa,IAAI,iBAAiB,CAAC;AACvE,EAAE,IAAI,iBAAiB,GAAG,OAAO,CAAC,WAAW,IAAI,eAAe,CAAC;AACjE;AACA,EAAE,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACnC,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;AACpC,MAAM,KAAK,EAAE,KAAK;AAClB,MAAM,UAAU,EAAE,IAAI;AACtB,MAAM,YAAY,EAAE,IAAI;AACxB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;AACpB,GAAG;AACH,EAAE,IAAI;AACN;AACA,IAAI,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACnB,GAAG,CAAC,OAAO,GAAG,EAAE;AAChB,IAAI,MAAM,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACvC,MAAM,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC9B,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,SAAS,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE;AACrD;AACA,IAAI,IAAI,cAAc,GAAG,OAAO,IAAI,OAAO,CAAC,SAAS,YAAY,SAAS,GAAG,OAAO,GAAG,SAAS,CAAC;AACjG,IAAI,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AAC5D,IAAI,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;AACjD;AACA;AACA;AACA,IAAI,SAAS,CAAC,OAAO,GAAG,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACjE;AACA,IAAI,OAAO,SAAS,CAAC;AACrB,GAAG;AACH,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,QAAQ,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;AAClC,IAAI,IAAI;AACR,MAAM,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC;AACxD,KAAK,CAAC,OAAO,GAAG,EAAE;AAClB,MAAM,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AACzC,KAAK;AACL,GAAG;AACH;AACA,EAAE,IAAI,sBAAsB,GAAG,gBAAgB,CAAC;AAChD,EAAE,IAAI,sBAAsB,GAAG,gBAAgB,CAAC;AAChD,EAAE,IAAI,iBAAiB,GAAG,WAAW,CAAC;AACtC,EAAE,IAAI,iBAAiB,GAAG,WAAW,CAAC;AACtC;AACA;AACA;AACA,EAAE,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,SAAS,GAAG,EAAE;AACzB,EAAE,SAAS,iBAAiB,GAAG,EAAE;AACjC,EAAE,SAAS,0BAA0B,GAAG,EAAE;AAC1C;AACA;AACA;AACA,EAAE,IAAI,iBAAiB,GAAG,EAAE,CAAC;AAC7B,EAAE,iBAAiB,CAAC,cAAc,CAAC,GAAG,YAAY;AAClD,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC;AACJ;AACA,EAAE,IAAI,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC;AACvC,EAAE,IAAI,uBAAuB,GAAG,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3E,EAAE,IAAI,uBAAuB;AAC7B,MAAM,uBAAuB,KAAK,EAAE;AACpC,MAAM,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,cAAc,CAAC,EAAE;AAC5D;AACA;AACA,IAAI,iBAAiB,GAAG,uBAAuB,CAAC;AAChD,GAAG;AACH;AACA,EAAE,IAAI,EAAE,GAAG,0BAA0B,CAAC,SAAS;AAC/C,IAAI,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;AAC3D,EAAE,iBAAiB,CAAC,SAAS,GAAG,EAAE,CAAC,WAAW,GAAG,0BAA0B,CAAC;AAC5E,EAAE,0BAA0B,CAAC,WAAW,GAAG,iBAAiB,CAAC;AAC7D,EAAE,iBAAiB,CAAC,WAAW,GAAG,MAAM;AACxC,IAAI,0BAA0B;AAC9B,IAAI,iBAAiB;AACrB,IAAI,mBAAmB;AACvB,GAAG,CAAC;AACJ;AACA;AACA;AACA,EAAE,SAAS,qBAAqB,CAAC,SAAS,EAAE;AAC5C,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,SAAS,MAAM,EAAE;AACzD,MAAM,MAAM,CAAC,SAAS,EAAE,MAAM,EAAE,SAAS,GAAG,EAAE;AAC9C,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACzC,OAAO,CAAC,CAAC;AACT,KAAK,CAAC,CAAC;AACP,GAAG;AACH;AACA,EAAE,OAAO,CAAC,mBAAmB,GAAG,SAAS,MAAM,EAAE;AACjD,IAAI,IAAI,IAAI,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,WAAW,CAAC;AAClE,IAAI,OAAO,IAAI;AACf,QAAQ,IAAI,KAAK,iBAAiB;AAClC;AACA;AACA,QAAQ,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,MAAM,mBAAmB;AAC/D,QAAQ,KAAK,CAAC;AACd,GAAG,CAAC;AACJ;AACA,EAAE,OAAO,CAAC,IAAI,GAAG,SAAS,MAAM,EAAE;AAClC,IAAI,IAAI,MAAM,CAAC,cAAc,EAAE;AAC/B,MAAM,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,0BAA0B,CAAC,CAAC;AAChE,KAAK,MAAM;AACX,MAAM,MAAM,CAAC,SAAS,GAAG,0BAA0B,CAAC;AACpD,MAAM,MAAM,CAAC,MAAM,EAAE,iBAAiB,EAAE,mBAAmB,CAAC,CAAC;AAC7D,KAAK;AACL,IAAI,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AACzC,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,CAAC,KAAK,GAAG,SAAS,GAAG,EAAE;AAChC,IAAI,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;AAC5B,GAAG,CAAC;AACJ;AACA,EAAE,SAAS,aAAa,CAAC,SAAS,EAAE,WAAW,EAAE;AACjD,IAAI,SAAS,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE;AAClD,MAAM,IAAI,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;AAC/D,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACnC,QAAQ,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3B,OAAO,MAAM;AACb,QAAQ,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;AAChC,QAAQ,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AACjC,QAAQ,IAAI,KAAK;AACjB,YAAY,OAAO,KAAK,KAAK,QAAQ;AACrC,YAAY,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;AAC3C,UAAU,OAAO,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,EAAE;AACzE,YAAY,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACnD,WAAW,EAAE,SAAS,GAAG,EAAE;AAC3B,YAAY,MAAM,CAAC,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAClD,WAAW,CAAC,CAAC;AACb,SAAS;AACT;AACA,QAAQ,OAAO,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,SAAS,EAAE;AACnE;AACA;AACA;AACA,UAAU,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC;AACnC,UAAU,OAAO,CAAC,MAAM,CAAC,CAAC;AAC1B,SAAS,EAAE,SAAS,KAAK,EAAE;AAC3B;AACA;AACA,UAAU,OAAO,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACzD,SAAS,CAAC,CAAC;AACX,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,eAAe,CAAC;AACxB;AACA,IAAI,SAAS,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE;AAClC,MAAM,SAAS,0BAA0B,GAAG;AAC5C,QAAQ,OAAO,IAAI,WAAW,CAAC,SAAS,OAAO,EAAE,MAAM,EAAE;AACzD,UAAU,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAC/C,SAAS,CAAC,CAAC;AACX,OAAO;AACP;AACA,MAAM,OAAO,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,eAAe,GAAG,eAAe,CAAC,IAAI;AAC9C,UAAU,0BAA0B;AACpC;AACA;AACA,UAAU,0BAA0B;AACpC,SAAS,GAAG,0BAA0B,EAAE,CAAC;AACzC,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,GAAG;AACH;AACA,EAAE,qBAAqB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACjD,EAAE,aAAa,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG,YAAY;AAC7D,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC;AACJ,EAAE,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC;AACxC;AACA;AACA;AACA;AACA,EAAE,OAAO,CAAC,KAAK,GAAG,SAAS,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE;AAC7E,IAAI,IAAI,WAAW,KAAK,KAAK,CAAC,EAAE,WAAW,GAAG,OAAO,CAAC;AACtD;AACA,IAAI,IAAI,IAAI,GAAG,IAAI,aAAa;AAChC,MAAM,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,CAAC;AAC/C,MAAM,WAAW;AACjB,KAAK,CAAC;AACN;AACA,IAAI,OAAO,OAAO,CAAC,mBAAmB,CAAC,OAAO,CAAC;AAC/C,QAAQ,IAAI;AACZ,QAAQ,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,MAAM,EAAE;AAC1C,UAAU,OAAO,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;AAC1D,SAAS,CAAC,CAAC;AACX,GAAG,CAAC;AACJ;AACA,EAAE,SAAS,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;AACpD,IAAI,IAAI,KAAK,GAAG,sBAAsB,CAAC;AACvC;AACA,IAAI,OAAO,SAAS,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE;AACxC,MAAM,IAAI,KAAK,KAAK,iBAAiB,EAAE;AACvC,QAAQ,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;AACxD,OAAO;AACP;AACA,MAAM,IAAI,KAAK,KAAK,iBAAiB,EAAE;AACvC,QAAQ,IAAI,MAAM,KAAK,OAAO,EAAE;AAChC,UAAU,MAAM,GAAG,CAAC;AACpB,SAAS;AACT;AACA;AACA;AACA,QAAQ,OAAO,UAAU,EAAE,CAAC;AAC5B,OAAO;AACP;AACA,MAAM,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAC9B,MAAM,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AACxB;AACA,MAAM,OAAO,IAAI,EAAE;AACnB,QAAQ,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACxC,QAAQ,IAAI,QAAQ,EAAE;AACtB,UAAU,IAAI,cAAc,GAAG,mBAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACtE,UAAU,IAAI,cAAc,EAAE;AAC9B,YAAY,IAAI,cAAc,KAAK,gBAAgB,EAAE,SAAS;AAC9D,YAAY,OAAO,cAAc,CAAC;AAClC,WAAW;AACX,SAAS;AACT;AACA,QAAQ,IAAI,OAAO,CAAC,MAAM,KAAK,MAAM,EAAE;AACvC;AACA;AACA,UAAU,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC;AACrD;AACA,SAAS,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,EAAE;AAC/C,UAAU,IAAI,KAAK,KAAK,sBAAsB,EAAE;AAChD,YAAY,KAAK,GAAG,iBAAiB,CAAC;AACtC,YAAY,MAAM,OAAO,CAAC,GAAG,CAAC;AAC9B,WAAW;AACX;AACA,UAAU,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACjD;AACA,SAAS,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,QAAQ,EAAE;AAChD,UAAU,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;AAChD,SAAS;AACT;AACA,QAAQ,KAAK,GAAG,iBAAiB,CAAC;AAClC;AACA,QAAQ,IAAI,MAAM,GAAG,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACtD,QAAQ,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AACtC;AACA;AACA,UAAU,KAAK,GAAG,OAAO,CAAC,IAAI;AAC9B,cAAc,iBAAiB;AAC/B,cAAc,sBAAsB,CAAC;AACrC;AACA,UAAU,IAAI,MAAM,CAAC,GAAG,KAAK,gBAAgB,EAAE;AAC/C,YAAY,SAAS;AACrB,WAAW;AACX;AACA,UAAU,OAAO;AACjB,YAAY,KAAK,EAAE,MAAM,CAAC,GAAG;AAC7B,YAAY,IAAI,EAAE,OAAO,CAAC,IAAI;AAC9B,WAAW,CAAC;AACZ;AACA,SAAS,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AAC5C,UAAU,KAAK,GAAG,iBAAiB,CAAC;AACpC;AACA;AACA,UAAU,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AACnC,UAAU,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AACnC,SAAS;AACT,OAAO;AACP,KAAK,CAAC;AACN,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,mBAAmB,CAAC,QAAQ,EAAE,OAAO,EAAE;AAClD,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACnD,IAAI,IAAI,MAAM,KAAKA,WAAS,EAAE;AAC9B;AACA;AACA,MAAM,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC9B;AACA,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,EAAE;AACtC;AACA,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AACzC;AACA;AACA,UAAU,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;AACpC,UAAU,OAAO,CAAC,GAAG,GAAGA,WAAS,CAAC;AAClC,UAAU,mBAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACjD;AACA,UAAU,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,EAAE;AAC1C;AACA;AACA,YAAY,OAAO,gBAAgB,CAAC;AACpC,WAAW;AACX,SAAS;AACT;AACA,QAAQ,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AACjC,QAAQ,OAAO,CAAC,GAAG,GAAG,IAAI,SAAS;AACnC,UAAU,gDAAgD,CAAC,CAAC;AAC5D,OAAO;AACP;AACA,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;AAClE;AACA,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACjC,MAAM,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AAC/B,MAAM,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AAC/B,MAAM,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC9B,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;AAC1B;AACA,IAAI,IAAI,EAAE,IAAI,EAAE;AAChB,MAAM,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AAC/B,MAAM,OAAO,CAAC,GAAG,GAAG,IAAI,SAAS,CAAC,kCAAkC,CAAC,CAAC;AACtE,MAAM,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC9B,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;AACnB;AACA;AACA,MAAM,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;AAChD;AACA;AACA,MAAM,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,QAAQ,EAAE;AACvC,QAAQ,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAChC,QAAQ,OAAO,CAAC,GAAG,GAAGA,WAAS,CAAC;AAChC,OAAO;AACP;AACA,KAAK,MAAM;AACX;AACA,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK;AACL;AACA;AACA;AACA,IAAI,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC5B,IAAI,OAAO,gBAAgB,CAAC;AAC5B,GAAG;AACH;AACA;AACA;AACA,EAAE,qBAAqB,CAAC,EAAE,CAAC,CAAC;AAC5B;AACA,EAAE,MAAM,CAAC,EAAE,EAAE,iBAAiB,EAAE,WAAW,CAAC,CAAC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,EAAE,CAAC,cAAc,CAAC,GAAG,WAAW;AAClC,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC;AACJ;AACA,EAAE,EAAE,CAAC,QAAQ,GAAG,WAAW;AAC3B,IAAI,OAAO,oBAAoB,CAAC;AAChC,GAAG,CAAC;AACJ;AACA,EAAE,SAAS,YAAY,CAAC,IAAI,EAAE;AAC9B,IAAI,IAAI,KAAK,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;AACpC;AACA,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;AACnB,MAAM,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,KAAK;AACL;AACA,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;AACnB,MAAM,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACjC,MAAM,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,KAAK;AACL;AACA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChC,GAAG;AACH;AACA,EAAE,SAAS,aAAa,CAAC,KAAK,EAAE;AAChC,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,IAAI,EAAE,CAAC;AACxC,IAAI,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;AAC3B,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC;AACtB,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC;AAC9B,GAAG;AACH;AACA,EAAE,SAAS,OAAO,CAAC,WAAW,EAAE;AAChC;AACA;AACA;AACA,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;AAC3C,IAAI,WAAW,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACrB,GAAG;AACH;AACA,EAAE,OAAO,CAAC,IAAI,GAAG,SAAS,MAAM,EAAE;AAClC,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;AAClB,IAAI,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;AAC5B,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrB,KAAK;AACL,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;AACnB;AACA;AACA;AACA,IAAI,OAAO,SAAS,IAAI,GAAG;AAC3B,MAAM,OAAO,IAAI,CAAC,MAAM,EAAE;AAC1B,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAC7B,QAAQ,IAAI,GAAG,IAAI,MAAM,EAAE;AAC3B,UAAU,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;AAC3B,UAAU,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC5B,UAAU,OAAO,IAAI,CAAC;AACtB,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACvB,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK,CAAC;AACN,GAAG,CAAC;AACJ;AACA,EAAE,SAAS,MAAM,CAAC,QAAQ,EAAE;AAC5B,IAAI,IAAI,QAAQ,EAAE;AAClB,MAAM,IAAI,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC;AACpD,MAAM,IAAI,cAAc,EAAE;AAC1B,QAAQ,OAAO,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7C,OAAO;AACP;AACA,MAAM,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE;AAC/C,QAAQ,OAAO,QAAQ,CAAC;AACxB,OAAO;AACP;AACA,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACnC,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,SAAS,IAAI,GAAG;AAC3C,UAAU,OAAO,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE;AACxC,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE;AAC1C,cAAc,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AACvC,cAAc,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAChC,cAAc,OAAO,IAAI,CAAC;AAC1B,aAAa;AACb,WAAW;AACX;AACA,UAAU,IAAI,CAAC,KAAK,GAAGA,WAAS,CAAC;AACjC,UAAU,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAC3B;AACA,UAAU,OAAO,IAAI,CAAC;AACtB,SAAS,CAAC;AACV;AACA,QAAQ,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAChC,OAAO;AACP,KAAK;AACL;AACA;AACA,IAAI,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;AAChC,GAAG;AACH,EAAE,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAC1B;AACA,EAAE,SAAS,UAAU,GAAG;AACxB,IAAI,OAAO,EAAE,KAAK,EAAEA,WAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;AAC5C,GAAG;AACH;AACA,EAAE,OAAO,CAAC,SAAS,GAAG;AACtB,IAAI,WAAW,EAAE,OAAO;AACxB;AACA,IAAI,KAAK,EAAE,SAAS,aAAa,EAAE;AACnC,MAAM,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACpB,MAAM,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACpB;AACA;AACA,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAGA,WAAS,CAAC;AACzC,MAAM,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AACxB,MAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC3B;AACA,MAAM,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC3B,MAAM,IAAI,CAAC,GAAG,GAAGA,WAAS,CAAC;AAC3B;AACA,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC7C;AACA,MAAM,IAAI,CAAC,aAAa,EAAE;AAC1B,QAAQ,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;AAC/B;AACA,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;AACpC,cAAc,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;AACrC,cAAc,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;AACtC,YAAY,IAAI,CAAC,IAAI,CAAC,GAAGA,WAAS,CAAC;AACnC,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,EAAE,WAAW;AACrB,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACvB;AACA,MAAM,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACzC,MAAM,IAAI,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;AAC5C,MAAM,IAAI,UAAU,CAAC,IAAI,KAAK,OAAO,EAAE;AACvC,QAAQ,MAAM,UAAU,CAAC,GAAG,CAAC;AAC7B,OAAO;AACP;AACA,MAAM,OAAO,IAAI,CAAC,IAAI,CAAC;AACvB,KAAK;AACL;AACA,IAAI,iBAAiB,EAAE,SAAS,SAAS,EAAE;AAC3C,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE;AACrB,QAAQ,MAAM,SAAS,CAAC;AACxB,OAAO;AACP;AACA,MAAM,IAAI,OAAO,GAAG,IAAI,CAAC;AACzB,MAAM,SAAS,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE;AACnC,QAAQ,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC;AAC9B,QAAQ,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC;AAC/B,QAAQ,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC;AAC3B;AACA,QAAQ,IAAI,MAAM,EAAE;AACpB;AACA;AACA,UAAU,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAClC,UAAU,OAAO,CAAC,GAAG,GAAGA,WAAS,CAAC;AAClC,SAAS;AACT;AACA,QAAQ,OAAO,CAAC,EAAE,MAAM,CAAC;AACzB,OAAO;AACP;AACA,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;AACtC;AACA,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,MAAM,EAAE;AACrC;AACA;AACA;AACA,UAAU,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;AAC/B,SAAS;AACT;AACA,QAAQ,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE;AACvC,UAAU,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;AACxD,UAAU,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;AAC5D;AACA,UAAU,IAAI,QAAQ,IAAI,UAAU,EAAE;AACtC,YAAY,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE;AAC5C,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAClD,aAAa,MAAM,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE;AACrD,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAC9C,aAAa;AACb;AACA,WAAW,MAAM,IAAI,QAAQ,EAAE;AAC/B,YAAY,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE;AAC5C,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAClD,aAAa;AACb;AACA,WAAW,MAAM,IAAI,UAAU,EAAE;AACjC,YAAY,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE;AAC9C,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAC9C,aAAa;AACb;AACA,WAAW,MAAM;AACjB,YAAY,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;AACtE,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,MAAM,EAAE,SAAS,IAAI,EAAE,GAAG,EAAE;AAChC,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI;AACrC,YAAY,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC;AAC5C,YAAY,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE;AAC1C,UAAU,IAAI,YAAY,GAAG,KAAK,CAAC;AACnC,UAAU,MAAM;AAChB,SAAS;AACT,OAAO;AACP;AACA,MAAM,IAAI,YAAY;AACtB,WAAW,IAAI,KAAK,OAAO;AAC3B,WAAW,IAAI,KAAK,UAAU,CAAC;AAC/B,UAAU,YAAY,CAAC,MAAM,IAAI,GAAG;AACpC,UAAU,GAAG,IAAI,YAAY,CAAC,UAAU,EAAE;AAC1C;AACA;AACA,QAAQ,YAAY,GAAG,IAAI,CAAC;AAC5B,OAAO;AACP;AACA,MAAM,IAAI,MAAM,GAAG,YAAY,GAAG,YAAY,CAAC,UAAU,GAAG,EAAE,CAAC;AAC/D,MAAM,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,MAAM,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;AACvB;AACA,MAAM,IAAI,YAAY,EAAE;AACxB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC;AAC5C,QAAQ,OAAO,gBAAgB,CAAC;AAChC,OAAO;AACP;AACA,MAAM,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnC,KAAK;AACL;AACA,IAAI,QAAQ,EAAE,SAAS,MAAM,EAAE,QAAQ,EAAE;AACzC,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACnC,QAAQ,MAAM,MAAM,CAAC,GAAG,CAAC;AACzB,OAAO;AACP;AACA,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO;AACjC,UAAU,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;AACtC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;AAC/B,OAAO,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC3C,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AAC1C,QAAQ,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B,QAAQ,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC1B,OAAO,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,IAAI,QAAQ,EAAE;AACvD,QAAQ,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;AAC7B,OAAO;AACP;AACA,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,MAAM,EAAE,SAAS,UAAU,EAAE;AACjC,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,KAAK,CAAC,UAAU,KAAK,UAAU,EAAE;AAC7C,UAAU,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC1D,UAAU,aAAa,CAAC,KAAK,CAAC,CAAC;AAC/B,UAAU,OAAO,gBAAgB,CAAC;AAClC,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,OAAO,EAAE,SAAS,MAAM,EAAE;AAC9B,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,MAAM,EAAE;AACrC,UAAU,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;AACxC,UAAU,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACvC,YAAY,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;AACpC,YAAY,aAAa,CAAC,KAAK,CAAC,CAAC;AACjC,WAAW;AACX,UAAU,OAAO,MAAM,CAAC;AACxB,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,MAAM,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;AAC/C,KAAK;AACL;AACA,IAAI,aAAa,EAAE,SAAS,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE;AAC3D,MAAM,IAAI,CAAC,QAAQ,GAAG;AACtB,QAAQ,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC;AAClC,QAAQ,UAAU,EAAE,UAAU;AAC9B,QAAQ,OAAO,EAAE,OAAO;AACxB,OAAO,CAAC;AACR;AACA,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE;AAClC;AACA;AACA,QAAQ,IAAI,CAAC,GAAG,GAAGA,WAAS,CAAC;AAC7B,OAAO;AACP;AACA,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL,GAAG,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,OAAO,CAAC;AACjB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,GAA+B,MAAM,CAAC,OAAO,CAAK;AAClD,CAAC,CAAC,CAAC;AACH;AACA,IAAI;AACJ,EAAE,kBAAkB,GAAG,OAAO,CAAC;AAC/B,CAAC,CAAC,OAAO,oBAAoB,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,QAAQ,CAAC,GAAG,EAAE,wBAAwB,CAAC,CAAC,OAAO,CAAC,CAAC;AACnD;;;AC3uBA;;;;;AAKA;;;;AAIA,IAAaC,SAAS,GAAG;AACrBC,EAAAA,OAAO,EAAE,SADY;AAErBC,EAAAA,QAAQ,EAAE,UAFW;AAGrBC,EAAAA,aAAa,EAAE;AAHM,CAAlB;AAMP;;;;AAGA,IAAaC,qBAAqB,GAAG;AACjCC,EAAAA,MAAM,EAAE,QADyB;AAEjCC,EAAAA,aAAa,EAAE,eAFkB;AAGjCC,EAAAA,SAAS,EAAE;AAHsB,CAA9B;AAMP;;;;AAGA,IAAaC,uBAAuB,GAAG;AACnCC,EAAAA,MAAM,EAAE,QAD2B;AAEnCC,EAAAA,WAAW,EAAE;AAFsB,CAAhC;AAKP;;;;AAGA,IAAaC,eAAe,GAAG;AAC3BC,EAAAA,MAAM,EAAE,QADmB;AAE3BC,EAAAA,KAAK,EAAE,OAFoB;AAG3BC,EAAAA,WAAW,EAAE,aAHc;AAI3BC,EAAAA,aAAa,EAAE,gBAJY;AAK3BC,EAAAA,eAAe,EAAE,iBALU;AAM3BC,EAAAA,sBAAsB,EAAE,8CANG;AAO3BC,EAAAA,mBAAmB,EAAE;AAPM,CAAxB;AAUP,IAAaC,YAAY,GAAG;AACxBC,EAAAA,oBAAoB,EAAE,yBADE;AAExBC,EAAAA,gBAAgB,EAAE;AAFM,CAArB;AAKP;;;;AAGA,IAAaC,aAAa,GAAG;AACzBC,EAAAA,aAAa,EAAE,eADU;AAEzBC,EAAAA,aAAa,EAAE,eAFU;AAGzBC,EAAAA,0BAA0B,EAAE,oCAHH;AAIzBC,EAAAA,qBAAqB,EAAE,uBAJE;AAKzBC,EAAAA,cAAc,EAAE,sBALS;AAMzBC,EAAAA,oBAAoB,EAAE,sBANG;AAOzBC,EAAAA,wBAAwB,EAAE,0BAPD;AAQzBC,EAAAA,sBAAsB,EAAE,uCARC;AASzBC,EAAAA,eAAe,EAAE,gBATQ;AAUzBC,EAAAA,iBAAiB,EAAE,yBAVM;AAWzBC,EAAAA,kBAAkB,EAAE,0BAXK;AAYzBC,EAAAA,iBAAiB,EAAE,iCAZM;AAazBC,EAAAA,eAAe,EAAE,iBAbQ;AAczBC,EAAAA,gBAAgB,EAAE,8BAdO;AAezBC,EAAAA,gBAAgB,EAAE,8BAfO;AAgBzBC,EAAAA,iBAAiB,EAAE,+BAhBM;AAiBzBC,EAAAA,iBAAiB,EAAE,+BAjBM;AAkBzBC,EAAAA,kBAAkB,EAAE,mCAlBK;AAmBzBC,EAAAA,cAAc,EAAE,8BAnBS;AAoBzBC,EAAAA,iBAAiB,EAAE,mCApBM;AAqBzBC,EAAAA,0BAA0B,EAAE;AArBH,CAAtB;AAwBP,IAAaC,0BAA0B,GAAG;AACtCC,EAAAA,YAAY,EAAE,uBADwB;AAEtCC,EAAAA,iBAAiB,EAAE,mBAFmB;AAGtCC,EAAAA,cAAc,EAAE,0BAHsB;AAItCC,EAAAA,mBAAmB,EAAE,sBAJiB;AAKtCC,EAAAA,oBAAoB,EAAE,gCALgB;AAMtCC,EAAAA,eAAe,EAAE,2BANqB;AAOtCC,EAAAA,cAAc,EAAE,0BAPsB;AAQtCC,EAAAA,qBAAqB,EAAE;AARe,CAAnC;AAWP;;;;AAGA,IAAaC,UAAU,GAAG;AACtB,SAAO;AADe,CAAnB;;ICnEMC,kBAAb;AAAA;;AAEI;;;;;AAFJ,qBAOWC,mBAPX,GAOI,6BAA2BC,MAA3B;AACI,QAAIC,sBAAW,CAACC,OAAZ,CAAoBF,MAAM,CAACG,cAAP,CAAsBC,QAA1C,CAAJ,EAAyD;AACrD,YAAM,IAAIC,KAAJ,CAAUjB,0BAA0B,CAACC,YAArC,CAAN;AACH,KAFD,MAEO,IAAI,CAACS,kBAAkB,CAACQ,MAAnB,CAA0BN,MAAM,CAACG,cAAP,CAAsBC,QAAhD,CAAL,EAAgE;AACnE,YAAM,IAAIC,KAAJ,CAAUjB,0BAA0B,CAACE,iBAArC,CAAN;AACH;;AAED,QAAIW,sBAAW,CAACC,OAAZ,CAAoBF,MAAM,CAACG,cAAP,CAAsBI,QAA1C,CAAJ,EAAyD;AACrD,YAAM,IAAIF,KAAJ,CAAUjB,0BAA0B,CAACG,cAArC,CAAN;AACH,KAFD,MAEO,IAAI,CAACO,kBAAkB,CAACQ,MAAnB,CAA0BN,MAAM,CAACG,cAAP,CAAsBI,QAAhD,CAAD,IAA8D,CAACC,MAAM,CAACC,MAAP,CAAc7D,qBAAd,EAAqC8D,QAArC,CAA8CV,MAAM,CAACG,cAAP,CAAsBI,QAApE,CAAnE,EAAkJ;AACrJ,YAAM,IAAIF,KAAJ,CAAUjB,0BAA0B,CAACI,mBAArC,CAAN;AACH;;AAED,QAAIS,sBAAW,CAACC,OAAZ,CAAoBF,MAAM,CAACG,cAAP,CAAsBQ,YAA1C,KAA2D,CAACX,MAAM,CAACG,cAAP,CAAsBS,iBAAtF,EAAyG;AACrG,YAAM,IAAIP,KAAJ,CAAUjB,0BAA0B,CAACK,oBAArC,CAAN;AACH;;AAED,QAAIQ,sBAAW,CAACC,OAAZ,CAAoBF,MAAM,CAACa,UAAP,CAAkBC,QAAtC,CAAJ,EAAqD;AACjD,YAAM,IAAIT,KAAJ,CAAUjB,0BAA0B,CAACM,eAArC,CAAN;AACH;;AAED,QAAIO,sBAAW,CAACC,OAAZ,CAAoBF,MAAM,CAACa,UAAP,CAAkBE,KAAtC,CAAJ,EAAkD;AAC9C,YAAM,IAAIV,KAAJ,CAAUjB,0BAA0B,CAACO,cAArC,CAAN;AACH;;AAED,QAAIM,sBAAW,CAACC,OAAZ,CAAoBF,MAAM,CAACa,UAAP,CAAkBG,YAAtC,CAAJ,EAAyD;AACrD,YAAM,IAAIX,KAAJ,CAAUjB,0BAA0B,CAACQ,qBAArC,CAAN;AACH;AACJ,GAnCL;;AAsCI;;;;;;;AAtCJ,qBA6CWqB,oBA7CX,GA6CI,8BAA4BjB,MAA5B,EAAiDkB,WAAjD;QAAiDA;AAAAA,MAAAA,cAA4B;;;AACzE,WAAO;AACHC,MAAAA,IAAI;AACAf,QAAAA,QAAQ,EAAEJ,MAAM,CAACG,cAAP,CAAsBC,QADhC;AAEAgB,QAAAA,SAAS,EAAEpB,MAAM,CAACqB,WAAP,GACPb,MAAM,CAACc,OAAP,CAAetB,MAAM,CAACqB,WAAtB,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,WAAzC,CADO,gBAGIE,oBAAS,CAACC,sBAHd,SAGwCxB,MAAM,CAACG,cAAP,CAAsBI;AALzE,SAMIP,MAAM,CAACG,cAAP,CAAsBsB,cAAtB,CAAqC,cAArC,CAAD,IAA0D;AAAEd,QAAAA,YAAY,EAAEX,MAAM,CAACG,cAAP,CAAsBQ;AAAtC,OAN7D,EAOIX,MAAM,CAACG,cAAP,CAAsBsB,cAAtB,CAAqC,mBAArC,CAAD,IAA+D;AAAEb,QAAAA,iBAAiB,EAAEZ,MAAM,CAACG,cAAP,CAAsBS;AAA3C,OAPlE;AAQAc,QAAAA,gBAAgB,EAAE1B,MAAM,CAACqB,WAAP,GACd,CAACM,oBAAS,CAACC,gBAAV,CAA2BpB,MAAM,CAACc,OAAP,CAAetB,MAAM,CAACqB,WAAtB,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,WAAzC,CAA3B,CAAD,CADc;AAAA,UAGd;AAXJ,QADD;AAcHQ,MAAAA,KAAK,EAAE;AACHX,QAAAA,WAAW,EAAXA;AADG,OAdJ;AAiBHY,MAAAA,MAAM,EAAE;AACJC,QAAAA,aAAa,EAAE;AACXC,UAAAA,cAAc,EAAE,wBAACC,QAAD,EAAWC,OAAX,EAAoBC,WAApB;AACZ,gBAAIA,WAAJ,EAAiB;AACb;AACH;;AACD,oBAAQF,QAAR;AACI,mBAAKG,iBAAQ,CAAC/B,KAAd;AACIgC,gBAAAA,OAAO,CAACtB,KAAR,CAAcmB,OAAd;AACA;;AACJ,mBAAKE,iBAAQ,CAACE,IAAd;AACID,gBAAAA,OAAO,CAACE,IAAR,CAAaL,OAAb;AACA;;AACJ,mBAAKE,iBAAQ,CAACI,OAAd;AACIH,gBAAAA,OAAO,CAACI,KAAR,CAAcP,OAAd;AACA;;AACJ,mBAAKE,iBAAQ,CAACM,OAAd;AACIL,gBAAAA,OAAO,CAACM,IAAR,CAAaT,OAAb;AACA;AAZR;AAcH,WAnBU;AAoBXU,UAAAA,iBAAiB,EAAE,KApBR;AAqBXX,UAAAA,QAAQ,EAAEG,iBAAQ,CAACI;AArBR;AADX;AAjBL,KAAP;AA2CH,GAzFL;;AA2FI;;;;AA3FJ,qBA+FWlC,MA/FX,GA+FI,gBAAcuC,IAAd;AACI,QAAMC,SAAS,GAAG,4EAAlB;AACA,WAAOA,SAAS,CAACC,IAAV,CAAeF,IAAf,CAAP;AACH,GAlGL;;AAAA;AAAA;;ACxBA;;;;AAKA,IAEaG,MAAb;AAAA;;AAEI;;;;;AAFJ,SAOWC,QAPX,GAOI,kBAAgBC,GAAhB;AACIb,IAAAA,OAAO,CAACtB,KAAR,CAAc,KAAKoC,UAAL,CAAgBD,GAAhB,CAAd;AACH;AAED;;;;;AAXJ;;AAAA,SAgBWE,UAhBX,GAgBI,oBAAkBF,GAAlB;AACIb,IAAAA,OAAO,CAACM,IAAR,CAAa,KAAKQ,UAAL,CAAgBD,GAAhB,CAAb;AACH;AAED;;;;;AApBJ;;AAAA,SAyBWG,OAzBX,GAyBI,iBAAeH,GAAf;AACIb,IAAAA,OAAO,CAACE,IAAR,CAAa,KAAKY,UAAL,CAAgBD,GAAhB,CAAb;AACH;AAED;;;;;AA7BJ;;AAAA,SAkCmBC,UAlCnB,GAkCY,oBAAkBA,WAAlB;AACJ,QAAMG,SAAS,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAlB;AAEA,QAAIC,SAAS,SAAeH,SAAf,MAAb;AAEA,QAAMJ,GAAG,GAAMO,SAAN,uDAAiErB,mBAAQ,CAACA,mBAAQ,CAACI,OAAV,CAAzE,WAAiGW,WAA1G;AACA,WAAOD,GAAP;AACH,GAzCL;;AAAA;AAAA;;ICuBaQ,cAAb;AAII;;;;;AAKA,0BAAYC,WAAZ,EAAsCC,UAAtC;AACI,SAAKD,WAAL,GAAmBA,WAAnB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACH;AAED;;;;;;;AAdJ;;AAAA,SAmBUC,oBAnBV;AAAA;AAAA;AAAA,4FAmBI,iBAA2BC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQ7D,sBAAW,CAACC,OAAZ,CAAoB4D,SAApB,CADR;AAAA;AAAA;AAAA;;AAEQd,cAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACS,eAA9B;AAFR,+CAGe,KAHf;;AAAA;AAAA;AAUQwF,cAAAA,YAAY,GAAGC,GAAG,CAACC,MAAJ,CAAWH,SAAX,EAAsB;AAAEI,gBAAAA,QAAQ,EAAE;AAAZ,eAAtB,CAAf;AAVR;AAAA;;AAAA;AAAA;AAAA;AAYQlB,cAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACU,iBAA9B;AACA6D,cAAAA,OAAO,CAACa,GAAR;AAbR,+CAce,KAdf;;AAAA;AAAA;AAAA;AAAA,qBAqBqB,KAAKiB,cAAL,CAAoBJ,YAAY,CAACK,MAAjC,EAAyCL,YAAY,CAACM,OAAb,CAAqBC,GAA9D,CArBrB;;AAAA;AAqBQC,cAAAA,IArBR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAuBQvB,cAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACY,iBAA9B;AACA2D,cAAAA,OAAO,CAACa,GAAR;AAxBR,+CAyBe,KAzBf;;AAAA;AAAA;AAgCQsB,cAAAA,aAAa,GAAGR,GAAG,CAACS,MAAJ,CAAWX,SAAX,EAAsBS,IAAtB,CAAhB;AAEA;;;;;;AAKA,kBACI,KAAKZ,WAAL,CAAiBxD,cAAjB,CAAgCI,QAAhC,KAA6C3D,qBAAqB,CAACC,MAAnE,IACA,KAAK8G,WAAL,CAAiBxD,cAAjB,CAAgCI,QAAhC,KAA6C3D,qBAAqB,CAACE,aADnE,IAEA,KAAK6G,WAAL,CAAiBxD,cAAjB,CAAgCI,QAAhC,KAA6C3D,qBAAqB,CAACG,SAHvE,EAIE;AACE,qBAAK4G,WAAL,CAAiBxD,cAAjB,CAAgCI,QAAhC,GAA2CwD,YAAY,CAACM,OAAb,CAAqBC,GAAhE;AACH;;AA7CT,+CA+CeE,aA/Cf;;AAAA;AAAA;AAAA;AAiDQxB,cAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACW,kBAA9B;AACA4D,cAAAA,OAAO,CAACa,GAAR;AAlDR,+CAmDe,KAnDf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAnBJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA0EI;;;;;AA1EJ,SA+EWwB,eA/EX;AAAA;AAAA;AAAA,uFA+EK,kBAAsBC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEmC,KAAKd,oBAAL,CAA0Bc,OAA1B,CAFnC;;AAAA;AAEaH,cAAAA,aAFb;;AAAA,mBAIWA,aAJX;AAAA;AAAA;AAAA;;AAAA,gDAKkB,KAAKI,qBAAL,CAA2BJ,aAA3B,CALlB;;AAAA;AAAA,gDAOkB,KAPlB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUOnC,cAAAA,OAAO,CAACa,GAAR;AAVP,gDAWc,KAXd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA/EL;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA8FI;;;;;AA9FJ,SAmGI0B,qBAnGJ,GAmGI,+BAAsBC,aAAtB;AACI,QAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,IAAIzB,IAAJ,GAAW0B,OAAX,KAAuB,IAAlC,CAAZ;;AAEA;;;;;;AAKA,QAAMC,WAAW,GAAGL,aAAa,CAACM,GAAd,CAAkBzE,QAAlB,CAA2B,KAAKiD,WAAL,CAAiBxD,cAAjB,CAAgCI,QAA3D,IAAuE,IAAvE,GAA8E,KAAlG;AACA,QAAM6E,aAAa,GAAGP,aAAa,CAACQ,GAAd,KAAsB,KAAKzB,UAAL,CAAgBzC,IAAhB,CAAqBf,QAA3C,GAAsD,IAAtD,GAA6D,KAAnF;AACA,QAAMkF,cAAc,GAAGT,aAAa,CAACU,GAAd,IAAqBT,GAArB,IAA4BD,aAAa,CAACW,GAAd,IAAqBV,GAAjD,GAAuD,IAAvD,GAA8D,KAArF;AAEA,WAAOI,WAAW,IAAIE,aAAf,IAAgCE,cAAvC;AACH,GAhHL;;AAkHI;;;;;;AAlHJ,SAwHWG,0BAxHX;AAAA;AAAA;AAAA,kGAwHK,kBAAiCC,WAAjC,EAAsDC,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEmC,KAAK9B,oBAAL,CAA0B6B,WAA1B,CAFnC;;AAAA;AAEalB,cAAAA,aAFb;;AAAA,mBAIWA,aAJX;AAAA;AAAA;AAAA;;AAAA,gDAKkB,KAAKoB,yBAAL,CAA+BpB,aAA/B,EAAmEmB,cAAnE,CALlB;;AAAA;AAAA,gDAOkB,KAPlB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUOtD,cAAAA,OAAO,CAACa,GAAR;AAVP,gDAWc,KAXd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxHL;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAuII;;;;;;AAvIJ,SA6II0C,yBA7IJ,GA6II,mCAA0BpB,aAA1B,EAA4DmB,cAA5D;AACI,QAAMb,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,IAAIzB,IAAJ,GAAW0B,OAAX,KAAuB,IAAlC,CAAZ;;AAEA;;;;;;AAKA,QAAMC,WAAW,GAAGV,aAAa,CAACW,GAAd,CAAkBzE,QAAlB,CAA2B,KAAKiD,WAAL,CAAiBxD,cAAjB,CAAgCI,QAA3D,IAAuE,IAAvE,GAA8E,KAAlG;AACA,QAAM+E,cAAc,GAAGd,aAAa,CAACe,GAAd,IAAqBT,GAArB,IAA4BN,aAAa,CAACe,GAAd,IAAqBT,GAAjD,GAAuD,IAAvD,GAA8D,KAArF;AAEA,QAAMM,aAAa,GAAGZ,aAAa,CAACa,GAAd,KAAsB,KAAK1B,WAAL,CAAiBxD,cAAjB,CAAgCC,QAAtD,IAClBoE,aAAa,CAACa,GAAd,KAAsB,WAAW,KAAK1B,WAAL,CAAiBxD,cAAjB,CAAgCC,QAD/C,GAC0D,IAD1D,GACiE,KADvF;AAGA,QAAMyF,WAAW,GAAGrF,MAAM,CAACC,MAAP,CAAc,KAAKkD,WAAL,CAAiBmC,cAA/B,EAA+CC,IAA/C,CAAoD,UAACC,QAAD;AAAA,aAAwBA,QAAQ,CAACC,QAAT,KAAsBN,cAA9C;AAAA,KAApD,EACfO,MADe,CACRC,KADQ,CACF,UAAAC,GAAG;AAAA,aAAI5B,aAAa,CAAC4B,GAAd,CAAkB1F,QAAlB,CAA2B0F,GAA3B,CAAJ;AAAA,KADD,CAApB;AAGA,WAAOhB,aAAa,IAAIF,WAAjB,IAAgCI,cAAhC,IAAkDO,WAAzD;AACH,GA/JL;;AAiKI;;;;;;;AAjKJ,SAwKkB1B,cAxKlB;AAAA;AAAA;AAAA,sFAwKY,kBAAqBC,MAArB,EAA6BE,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAGJ;AACA,kBAAI,KAAKX,WAAL,CAAiBtC,WAArB,EAAkC;AAC9BgF,gBAAAA,OAAO,GAAM,KAAKzC,UAAL,CAAgBzC,IAAhB,CAAqBC,SAA3B,yBAAP;AACH,eAFD,MAEO;AACHiF,gBAAAA,OAAO,gBAAc9E,oBAAS,CAACC,sBAAxB,SAAkD8C,GAAlD,yBAAP;AACH;;AAEKgC,cAAAA,MAVF,GAUWC,UAAU,CAAC;AACtBF,gBAAAA,OAAO,EAAEA;AADa,eAAD,CAVrB;AAAA;AAAA,qBAcUC,MAAM,CAACE,kBAAP,CAA0BpC,MAAM,CAACqC,GAAjC,CAdV;;AAAA;AAAA,+DAciDC,YAdjD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxKZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;ICvBaC,eAAb;AAAA;;AAAA;;AAEI;;;;;AAFJ,SAOUC,yBAPV;AAAA;AAAA;AAAA,iGAOI,iBAAgC5G,MAAhC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEU6G,cAAAA,UAFV,GAEuB,IAAIC,+BAAJ,EAFvB;;AAAA,kBAIS9G,MAAM,CAACG,cAAP,CAAsB4G,kBAJ/B;AAAA;AAAA;AAAA;;AAAA,+CAKe/G,MALf;;AAAA;AAAA,4BAQYA,MAAM,CAACG,cAAP,CAAsB4G,kBAAtB,CAAyCC,cARrD;AAAA,8CASahK,uBAAuB,CAACC,MATrC,uBAoBaD,uBAAuB,CAACE,WApBrC;AAAA;;AAAA;AAAA;AAAA;AAAA,qBAW6C,KAAK+J,mBAAL,CAAyBjH,MAAzB,EAAiC6G,UAAjC,CAX7C;;AAAA;AAWsBK,cAAAA,cAXtB;AAYgBlH,cAAAA,MAAM,CAACG,cAAP,CAAsBQ,YAAtB,GAAqCuG,cAAc,CAACC,KAApD;AAZhB,+CAauBnH,MAbvB;;AAAA;AAAA;AAAA;AAegBqC,cAAAA,OAAO,CAACa,GAAR;;AAfhB;AAAA;;AAAA;AAAA;AAAA;AAAA,qBAsBkD,KAAKkE,wBAAL,CAA8BpH,MAA9B,EAAsC6G,UAAtC,CAtBlD;;AAAA;AAsBsBQ,cAAAA,mBAtBtB;AAAA;AAAA,qBAuB6C,KAAKJ,mBAAL,CAAyBjH,MAAzB,EAAiC6G,UAAjC,CAvB7C;;AAAA;AAuBsBK,cAAAA,eAvBtB;AAyBgBlH,cAAAA,MAAM,CAACG,cAAP,CAAsBS,iBAAtB,GAA0C;AACtC0G,gBAAAA,UAAU,EAAED,mBAAmB,CAACE,UAApB,CAA+BC,cAA/B,CAA8CC,QAA9C,EAD0B;AAEtCC,gBAAAA,UAAU,EAAER,eAAc,CAACC,KAAf,CAAqBQ,KAArB,CAA2B,+BAA3B,EAA4D,CAA5D;AAF0B,eAA1C;AAzBhB,+CA6BuB3H,MA7BvB;;AAAA;AAAA;AAAA;AA+BgBqC,cAAAA,OAAO,CAACa,GAAR;;AA/BhB;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAgDI;;;;;;AAhDJ,SAsDUkE,wBAtDV;AAAA;AAAA;AAAA,gGAsDI,kBAA+BpH,MAA/B,EAAoD6G,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI;AACMe,cAAAA,YAHV,GAGyB,IAAIC,sCAAJ,CAAsB7H,MAAM,CAACG,cAAP,CAAsB4G,kBAAtB,CAAyCe,WAA/D,EAA4EjB,UAA5E,CAHzB;AAAA;AAAA;AAAA,qBAM0Ce,YAAY,CAACG,cAAb,CAA4B/H,MAAM,CAACG,cAAP,CAAsB4G,kBAAtB,CAAyCiB,cAArE,CAN1C;;AAAA;AAMcC,cAAAA,mBANd;AAAA,gDAOeA,mBAPf;;AAAA;AAAA;AAAA;AASQ5F,cAAAA,OAAO,CAACa,GAAR;AATR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAtDJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoEI;;;;;;AApEJ;;AAAA,SA0EU+D,mBA1EV;AAAA;AAAA;AAAA,2FA0EI,kBAA0BjH,MAA1B,EAA+C6G,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI;AACMe,cAAAA,YAHV,GAGyB,IAAIM,4BAAJ,CAAiBlI,MAAM,CAACG,cAAP,CAAsB4G,kBAAtB,CAAyCe,WAA1D,EAAuEjB,UAAvE,CAHzB;AAAA;AAAA;AAAA,qBAMqCe,YAAY,CAACO,SAAb,CAAuBnI,MAAM,CAACG,cAAP,CAAsB4G,kBAAtB,CAAyCiB,cAAhE,CANrC;;AAAA;AAMcI,cAAAA,cANd;AAAA,gDAOeA,cAPf;;AAAA;AAAA;AAAA;AASQ/F,cAAAA,OAAO,CAACa,GAAR;AATR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA1EJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;ICSamF,YAAb;AAEI;;;;;;;;AAOOA,4BAAA;AAAA,yEAAkB,iBAAOpC,QAAP,EAAyBP,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEjBzF,sBAAW,CAACC,OAAZ,CAAoBwF,WAApB,CAFiB;AAAA;AAAA;AAAA;;AAAA,kBAGX,IAAIrF,KAAJ,CAAUvC,aAAa,CAACS,eAAxB,CAHW;;AAAA;AAMf+J,YAAAA,OANe,GAMe;AAChCC,cAAAA,OAAO,EAAE;AACLC,gBAAAA,aAAa,cAAY9C;AADpB;AADuB,aANf;AAAA;AAajB1C,YAAAA,MAAM,CAACK,OAAP,CAAe1F,YAAY,CAACC,oBAA5B;AAbiB;AAAA,mBAcqB6K,KAAK,CAACC,GAAN,CAAUzC,QAAV,EAAoBqC,OAApB,CAdrB;;AAAA;AAcXK,YAAAA,QAdW;AAAA,6CAeVA,QAAQ,CAACC,IAfC;;AAAA;AAAA;AAAA;AAiBjBvG,YAAAA,OAAO,CAACa,GAAR;AAjBiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAsBP;;;;;;;;;AAOOmF,6BAAA;AAAA,0EAAmB,kBAAO3C,WAAP,EAA4BmD,QAA5B,EAA8CD,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA8CA,IAA9C;AAA8CA,cAAAA,IAA9C,GAA+D,EAA/D;AAAA;;AAAA;AAAA;AAAA,mBAGUP,YAAY,CAACS,eAAb,CAA6BD,QAA7B,EAAuCnD,WAAvC,CAHV;;AAAA;AAGZqD,YAAAA,aAHY;AAIlBA,YAAAA,aAAa,CAAC,OAAD,CAAb,CAAuBC,GAAvB,CAA2B,UAACC,CAAD;AAAA,qBAAOL,IAAI,CAACM,IAAL,CAAUD,CAAC,CAACE,EAAZ,CAAP;AAAA,aAA3B;;AAJkB,iBAMdJ,aAAa,CAAC5L,eAAe,CAACK,eAAjB,CANC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAOD6K,YAAY,CAACe,gBAAb,CAA8B1D,WAA9B,EAA2CqD,aAAa,CAAC5L,eAAe,CAACK,eAAjB,CAAxD,EAA2FoL,IAA3F,CAPC;;AAAA;AAAA;;AAAA;AAAA,8CASPA,IATO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYlBvG,YAAAA,OAAO,CAACa,GAAR;AAZkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;;ACtDX;;;;AAMA,IAEamG,QAAb;AACE;;;;;;;AAMOA,0BAAA,GAAoB,UAACC,GAAD,EAAeC,GAAf;AACzB,MAAMC,aAAa,GAAS,IAAI7H,oBAAJ,CAAc4H,GAAd,EAAmBE,gBAAnB,EAA5B;;AAEA,MAAI,CAACD,aAAa,CAACE,QAAnB,EAA6B;AAC3B,QAAI,CAACF,aAAa,CAACG,eAAnB,EAAoC;AAClC,aAAOL,GAAG,CAACM,QAAJ,GAAe,KAAf,GAAuBN,GAAG,CAACZ,GAAJ,CAAQ,MAAR,CAAvB,GAAyCa,GAAhD;AACD;;AACD,WAAOD,GAAG,CAACM,QAAJ,GAAe,KAAf,GAAuBL,GAA9B;AACD,GALD,MAKO;AACL,WAAOA,GAAP;AACD;AACF,CAXM;;;AC6CT;;;;;;;AAMA,IAAaM,YAAb;AAQI;;;;;AAKA,wBAAYlG,WAAZ,EAAsC9B,KAAtC;;;AA4BA;;;;;AAKA,mBAAA,GAAa,UAACyG,OAAD;AAET;AAEA,UAAMwB,SAAS,GAAGC,OAAO,CAACC,MAAR,EAAlB;;AAGAF,MAAAA,SAAS,CAACpB,GAAV,CAAc,KAAI,CAAC/E,WAAL,CAAiB9C,UAAjB,CAA4BC,QAA1C,EAAoD,KAAI,CAACmJ,cAAL,EAApD;;AAEA,UAAI,KAAI,CAACtG,WAAL,CAAiB9C,UAAjB,CAA4BqJ,kBAAhC,EAAoD;AAChD;;;;AAIAJ,QAAAA,SAAS,CAACpB,GAAV,CAAc,KAAI,CAAC/E,WAAL,CAAiB9C,UAAjB,CAA4BqJ,kBAA1C,EAA8D,UAACZ,GAAD,EAAMa,GAAN,EAAWC,IAAX;AAC1Dd,UAAAA,GAAG,CAACe,OAAJ,CAAYC,OAAZ,CAAoB;AAChBH,YAAAA,GAAG,CAACI,UAAJ,CAAe,GAAf;AACH,WAFD;AAGH,SAJD;AAKH;;AAED,aAAOT,SAAP;AACH,KAtBD;;AA0BA;;;;;;;AAKA,eAAA,GAAS,UAACxB,OAAD;AACL,aAAO,UAACgB,GAAD,EAAea,GAAf,EAA8BC,IAA9B;AACH;;;;;AAKA,YAAI,CAACd,GAAG,CAACe,OAAJ,CAAY,iBAAZ,CAAL,EAAqC;AACjCf,UAAAA,GAAG,CAACe,OAAJ,CAAYG,eAAZ,GAA8B;AAC1BpJ,YAAAA,SAAS,EAAE,EADe;AAE1B8E,YAAAA,MAAM,EAAE,EAFkB;AAG1BuE,YAAAA,KAAK,EAAE,EAHmB;AAI1BC,YAAAA,WAAW,EAAE;AAJa,WAA9B;AAMH;;AAED,YAAI,CAACpB,GAAG,CAACe,OAAJ,CAAY,cAAZ,CAAL,EAAkC;AAC9Bf,UAAAA,GAAG,CAACe,OAAJ,CAAYM,YAAZ,GAA2B;AACvBvJ,YAAAA,SAAS,EAAE,EADY;AAEvB8E,YAAAA,MAAM,EAAE,EAFe;AAGvBwE,YAAAA,WAAW,EAAE,EAHU;AAIvBE,YAAAA,IAAI,EAAE;AAJiB,WAA3B;AAMH;;;AAGD,YAAI,CAACtB,GAAG,CAACe,OAAJ,CAAY,SAAZ,CAAL,EAA6B;AACzBf,UAAAA,GAAG,CAACe,OAAJ,CAAYQ,OAAZ,GAAsB;AAClBC,YAAAA,aAAa,EAAE,EADG;AAElBC,YAAAA,WAAW,EAAE,EAFK;AAGlBxK,YAAAA,QAAQ,EAAE,EAHQ;AAIlByK,YAAAA,QAAQ,EAAE,EAJQ;AAKlBnG,YAAAA,aAAa,EAAE;AALG,WAAtB;AAOH;;;AAGDyE,QAAAA,GAAG,CAACe,OAAJ,CAAYY,KAAZ,GAAoB,KAAI,CAACC,cAAL,CAAoBC,aAApB,EAApB;;AAGA,YAAMV,KAAK,GAAG,KAAI,CAACS,cAAL,CAAoBE,YAApB,CACVC,IAAI,CAACC,SAAL,CAAe;AACXC,UAAAA,KAAK,EAAE/O,SAAS,CAACC,OADN;AAEX+O,UAAAA,IAAI,EAAElD,OAAO,CAACmD,eAFH;AAGXR,UAAAA,KAAK,EAAE3B,GAAG,CAACe,OAAJ,CAAYY;AAHR,SAAf,CADU,CAAd;;AAQA,YAAMS,MAAM,GAAmB;AAC3BtK,UAAAA,SAAS,EAAE,KAAI,CAACwC,UAAL,CAAgBzC,IAAhB,CAAqBC,SADL;AAE3B8E,UAAAA,MAAM,EAAEyF,8BAFmB;AAG3BlB,UAAAA,KAAK,EAAEA,KAHoB;AAI3B3J,UAAAA,QAAQ,EAAEuI,QAAQ,CAACuC,iBAAT,CAA2BtC,GAA3B,EAAgC,KAAI,CAAC3F,WAAL,CAAiB9C,UAAjB,CAA4BC,QAA5D,CAJiB;AAK3B+K,UAAAA,MAAM,EAAEC,sBAAW,CAACC;AALO,SAA/B;;AASA,eAAO,KAAI,CAACC,WAAL,CAAiB1C,GAAjB,EAAsBa,GAAtB,EAA2BC,IAA3B,EAAiCsB,MAAjC,CAAP;AACH,OAzDD;AA0DH,KA3DD;AA6DA;;;;;;;AAKA,gBAAA,GAAU,UAACpD,OAAD;AACN,aAAO,UAACgB,GAAD,EAAea,GAAf,EAA8BC,IAA9B;AACH,YAAM6B,qBAAqB,GAAG5C,QAAQ,CAACuC,iBAAT,CAA2BtC,GAA3B,EAAgChB,OAAO,CAACmD,eAAxC,CAA9B;AAEA;;;;;;;AAMA,YAAMS,SAAS,GAAM,KAAI,CAACtI,UAAL,CAAgBzC,IAAhB,CAAqBC,SAA3B,qDAAoF6K,qBAAnG;AAEA3C,QAAAA,GAAG,CAACe,OAAJ,CAAY8B,eAAZ,GAA8B,KAA9B;AAEA7C,QAAAA,GAAG,CAACe,OAAJ,CAAYC,OAAZ,CAAoB;AAChBH,UAAAA,GAAG,CAACrJ,QAAJ,CAAaoL,SAAb;AACH,SAFD;AAGH,OAhBD;AAiBH,KAlBD;AAoBA;;;;;;;;AAMQ,uBAAA,GAAiB,UAAC5D,OAAD;AACrB;AAAA,kEAAO,iBAAOgB,GAAP,EAAqBa,GAArB,EAAoCC,IAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uBACCd,GAAG,CAAC8C,KAAJ,CAAU3B,KADX;AAAA;AAAA;AAAA;;AAEOA,kBAAAA,KAFP,GAEeY,IAAI,CAACgB,KAAL,CAAW,KAAI,CAACnB,cAAL,CAAoBoB,YAApB,CAAiChD,GAAG,CAAC8C,KAAJ,CAAU3B,KAA3C,CAAX,CAFf;;AAAA,wBAKKA,KAAK,CAACQ,KAAN,KAAgB3B,GAAG,CAACe,OAAJ,CAAYY,KALjC;AAAA;AAAA;AAAA;;AAAA,gCAMaR,KAAK,CAACc,KANnB;AAAA,kDAOc/O,SAAS,CAACC,OAPxB,uBAyCcD,SAAS,CAACG,aAzCxB;AAAA;;AAAA;AAQa;AACA2M,kBAAAA,GAAG,CAACe,OAAJ,CAAYM,YAAZ,CAAyBC,IAAzB,GAAgCtB,GAAG,CAAC8C,KAAJ,CAAUxB,IAA1C;AATb;AAAA;AAAA,yBAa6C,KAAI,CAAC2B,UAAL,CAAgBC,kBAAhB,CAAmClD,GAAG,CAACe,OAAJ,CAAYM,YAA/C,CAb7C;;AAAA;AAauB8B,kBAAAA,aAbvB;AAAA;AAAA;AAAA,yBAgBkD,KAAI,CAACC,cAAL,CAAoBhI,eAApB,CAAoC+H,aAAa,CAAC9H,OAAlD,CAhBlD;;AAAA;AAgB2BgI,kBAAAA,cAhB3B;;AAkBqB,sBAAIA,cAAJ,EAAoB;AAChB;AACArD,oBAAAA,GAAG,CAACe,OAAJ,CAAYQ,OAAZ,GAAsB4B,aAAa,CAAC5B,OAApC;AACAvB,oBAAAA,GAAG,CAACe,OAAJ,CAAY8B,eAAZ,GAA8B,IAA9B;AAEAhC,oBAAAA,GAAG,CAACrJ,QAAJ,CAAa2J,KAAK,CAACe,IAAnB;AACH,mBAND,MAMO;AACHxI,oBAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACE,aAA9B;AACAmM,oBAAAA,GAAG,CAACrJ,QAAJ,CAAa,KAAI,CAAC6C,WAAL,CAAiB9C,UAAjB,CAA4BG,YAAzC;AACH;;AA3BtB;AAAA;;AAAA;AAAA;AAAA;AA6BqBgC,kBAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACI,qBAA9B;AACAmE,kBAAAA,OAAO,CAACa,GAAR;AACAkH,kBAAAA,IAAI,aAAJ;;AA/BrB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkCiBpH,kBAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACO,wBAA9B;AACAgE,kBAAAA,OAAO,CAACa,GAAR;AACAkH,kBAAAA,IAAI,aAAJ;;AApCjB;AAAA;;AAAA;AA0Ca;AACMwC,kBAAAA,YA3CnB,GA2CkC,KAAI,CAACC,yBAAL,CAA+BvD,GAAG,CAACe,OAAJ,CAAYM,YAAZ,CAAyBzE,MAAxD,CA3ClC;AA6CaoD,kBAAAA,GAAG,CAACe,OAAJ,CAAYM,YAAZ,CAAyBC,IAAzB,GAAgCtB,GAAG,CAAC8C,KAAJ,CAAUxB,IAA1C;AA7Cb;AAAA;AAAA,yBAgD6C,KAAI,CAAC2B,UAAL,CAAgBC,kBAAhB,CAAmClD,GAAG,CAACe,OAAJ,CAAYM,YAA/C,CAhD7C;;AAAA;AAgDuB8B,kBAAAA,cAhDvB;AAiDiBnD,kBAAAA,GAAG,CAACe,OAAJ,CAAYyC,eAAZ,CAA4BF,YAA5B,EAA0ClH,WAA1C,GAAwD+G,cAAa,CAAC/G,WAAtE;AACAyE,kBAAAA,GAAG,CAACrJ,QAAJ,CAAa2J,KAAK,CAACe,IAAnB;AAlDjB;AAAA;;AAAA;AAAA;AAAA;AAoDiBxI,kBAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACO,wBAA9B;AACAgE,kBAAAA,OAAO,CAACa,GAAR;AACAkH,kBAAAA,IAAI,aAAJ;;AAtDjB;AAAA;;AAAA;AA4DapH,kBAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACG,0BAA9B;AACAkM,kBAAAA,GAAG,CAACrJ,QAAJ,CAAa,KAAI,CAAC6C,WAAL,CAAiB9C,UAAjB,CAA4BE,KAAzC;AA7Db;;AAAA;AAAA;AAAA;;AAAA;AAiEKiC,kBAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACK,cAA9B;AACAgM,kBAAAA,GAAG,CAACrJ,QAAJ,CAAa,KAAI,CAAC6C,WAAL,CAAiB9C,UAAjB,CAA4BG,YAAzC;;AAlEL;AAAA;AAAA;;AAAA;AAqECgC,kBAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACa,eAA9B;AACAwL,kBAAAA,GAAG,CAACrJ,QAAJ,CAAa,KAAI,CAAC6C,WAAL,CAAiB9C,UAAjB,CAA4BG,YAAzC;;AAtED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;;AAAA;AAAA;AAAA;AAAA;AAyEH,KA1EO;;AA8ER;;;;;;;AAKA,iBAAA,GAAW,UAACsH,OAAD;AACP;AAAA,mEAAO,kBAAOgB,GAAP,EAAqBa,GAArB,EAAoCC,IAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;AACMlE,kBAAAA,MAFH,GAEYoC,OAAO,CAACtC,QAAR,CAAiBE,MAF7B;AAIG0G,kBAAAA,YAJH,GAIkB,KAAI,CAACC,yBAAL,CAA+B3G,MAA/B,CAJlB;;AAMH,sBAAI,CAACoD,GAAG,CAACe,OAAJ,CAAYyC,eAAjB,EAAkC;AAC9BxD,oBAAAA,GAAG,CAACe,OAAJ,CAAYyC,eAAZ,GAA8B,EAA9B;AACH;;AAEDxD,kBAAAA,GAAG,CAACe,OAAJ,CAAYyC,eAAZ,sDACKF,YADL,iBAEW,KAAI,CAACjJ,WAAL,CAAiBmJ,eAAjB,CAAiCF,YAAjC,CAFX;AAGQlH,oBAAAA,WAAW,EAAE;AAHrB;AAVG;AAkBOqH,kBAAAA,aAlBP,GAkB0C;AACrClC,oBAAAA,OAAO,EAAEvB,GAAG,CAACe,OAAJ,CAAYQ,OADgB;AAErC3E,oBAAAA,MAAM,EAAEA;AAF6B,mBAlB1C;;AAAA;AAAA,yBAwB6B,KAAI,CAACqG,UAAL,CAAgBS,kBAAhB,CAAmCD,aAAnC,CAxB7B;;AAAA;AAwBON,kBAAAA,aAxBP;;AAAA,uBA4BKxM,sBAAW,CAACC,OAAZ,CAAoBuM,aAAa,CAAC/G,WAAlC,CA5BL;AAAA;AAAA;AAAA;;AA6BK1C,kBAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACS,eAA9B;AA7BL,wBA8BW,IAAI0O,uCAAJ,CAAiCnP,aAAa,CAACM,oBAA/C,CA9BX;;AAAA;AAiCCkL,kBAAAA,GAAG,CAACe,OAAJ,CAAYyC,eAAZ,CAA4BF,YAA5B,EAA0ClH,WAA1C,GAAwD+G,aAAa,CAAC/G,WAAtE;AACA0E,kBAAAA,IAAI;AAlCL;AAAA;;AAAA;AAAA;AAAA;;AAAA,wBAqCK,wBAAiB6C,uCArCtB;AAAA;AAAA;AAAA;;AAsCWxC,kBAAAA,KAtCX,GAsCmB,KAAI,CAACS,cAAL,CAAoBE,YAApB,CACVC,IAAI,CAACC,SAAL,CAAe;AACXC,oBAAAA,KAAK,EAAE/O,SAAS,CAACG,aADN;AAEX6O,oBAAAA,IAAI,EAAElC,GAAG,CAAC4D,KAAJ,CAAU1B,IAFL;AAGXP,oBAAAA,KAAK,EAAE3B,GAAG,CAACe,OAAJ,CAAYY;AAHR,mBAAf,CADU,CAtCnB;AA8CWS,kBAAAA,MA9CX,GA8CoC;AAC3BtK,oBAAAA,SAAS,EAAE,KAAI,CAACwC,UAAL,CAAgBzC,IAAhB,CAAqBC,SADL;AAE3B8E,oBAAAA,MAAM,EAAEA,MAFmB;AAG3BuE,oBAAAA,KAAK,EAAEA,KAHoB;AAI3B3J,oBAAAA,QAAQ,EAAEuI,QAAQ,CAACuC,iBAAT,CAA2BtC,GAA3B,EAAgC,KAAI,CAAC3F,WAAL,CAAiB9C,UAAjB,CAA4BC,QAA5D,CAJiB;AAK3B+J,oBAAAA,OAAO,EAAEvB,GAAG,CAACe,OAAJ,CAAYQ;AALM,mBA9CpC;;AAAA,oDAuDY,KAAI,CAACmB,WAAL,CAAiB1C,GAAjB,EAAsBa,GAAtB,EAA2BC,IAA3B,EAAiCsB,MAAjC,CAvDZ;;AAAA;AAyDKrJ,kBAAAA,OAAO,CAACa,GAAR;AACAkH,kBAAAA,IAAI,cAAJ;;AA1DL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;;AAAA;AAAA;AAAA;AAAA;AA8DH,KA/DD;AAiEA;;;;;;;AAKA,yBAAA,GAAmB,UAAC9B,OAAD;AACf;AAAA,mEAAO,kBAAOgB,GAAP,EAAqBa,GAArB,EAAoCC,IAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACG+C,kBAAAA,UADH,GACgB7D,GAAG,CAACf,OAAJ,CAAY6E,aAD5B;;AAIGlH,kBAAAA,MAJH,GAIYoC,OAAO,CAACtC,QAAR,CAAiBE,MAJ7B;AAKG0G,kBAAAA,YALH,GAKkB,KAAI,CAACC,yBAAL,CAA+B3G,MAA/B,CALlB;AAOGmH,kBAAAA,UAPH,GAOmC;AAClCC,oBAAAA,YAAY,EAAEH,UAAU,CAACxF,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CADoB;AAElCzB,oBAAAA,MAAM,EAAEA;AAF0B,mBAPnC;AAAA;AAAA;AAAA,yBAa6B,KAAI,CAACqG,UAAL,CAAgBgB,sBAAhB,CAAuCF,UAAvC,CAb7B;;AAAA;AAaOZ,kBAAAA,aAbP;AAeC;AACAnD,kBAAAA,GAAG,CAAC,QAAD,CAAH,kCACKsD,YADL,IACoB;AACZlH,oBAAAA,WAAW,EAAE+G,aAAa,CAAC/G;AADf,mBADpB;AAMA0E,kBAAAA,IAAI;AAtBL;AAAA;;AAAA;AAAA;AAAA;AAwBC/H,kBAAAA,OAAO,CAACa,GAAR;AACAkH,kBAAAA,IAAI,cAAJ;;AAzBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;;AAAA;AAAA;AAAA;AAAA;AA4BH,KA7BD;;AAiCA;;;;;;;AAKA,wBAAA,GAAkB,UAAC9B,OAAD;AACd,aAAO,UAACgB,GAAD,EAAea,GAAf,EAA8BC,IAA9B;AACH,YAAId,GAAG,CAACe,OAAR,EAAiB;AACb,cAAI,CAACf,GAAG,CAACe,OAAJ,CAAY8B,eAAjB,EAAkC;AAC9BnJ,YAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACC,aAA9B;AACA,mBAAOoM,GAAG,CAACrJ,QAAJ,CAAa,KAAI,CAAC6C,WAAL,CAAiB9C,UAAjB,CAA4BG,YAAzC,CAAP;AACH;;AAEDoJ,UAAAA,IAAI;AACP,SAPD,MAOO;AACHpH,UAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACoB,iBAA9B;AACAiL,UAAAA,GAAG,CAACrJ,QAAJ,CAAa,KAAI,CAAC6C,WAAL,CAAiB9C,UAAjB,CAA4BG,YAAzC;AACH;AACJ,OAZD;AAaH,KAdD;AAgBA;;;;;;;;AAMA,qBAAA,GAAe,UAACsH,OAAD;AACX;AAAA,mEAAO,kBAAOgB,GAAP,EAAqBa,GAArB,EAAoCC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AACG1E,kBAAAA,WADH,GACiB4D,GAAG,CAACf,OAAJ,CAAY6E,aAAZ,CAA0BzF,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CADjB;;AAAA,uBAGC2B,GAAG,CAACf,OAAJ,CAAY6E,aAHb;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAIa,KAAI,CAACV,cAAL,CAAoBjH,0BAApB,CAA+CC,WAA/C,EAA4D4D,GAAG,CAAC4D,KAAJ,CAAU1B,IAAtE,CAJb;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKKxI,kBAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACE,aAA9B;AALL,oDAMYmM,GAAG,CAACrJ,QAAJ,CAAa,KAAI,CAAC6C,WAAL,CAAiB9C,UAAjB,CAA4BG,YAAzC,CANZ;;AAAA;AASCoJ,kBAAAA,IAAI;AATL;AAAA;;AAAA;AAWCpH,kBAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACS,eAA9B;AACA4L,kBAAAA,GAAG,CAACrJ,QAAJ,CAAa,KAAI,CAAC6C,WAAL,CAAiB9C,UAAjB,CAA4BG,YAAzC;;AAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;;AAAA;AAAA;AAAA;AAAA;AAeH,KAhBD;AAkBA;;;;;;;AAKA,kBAAA,GAAY,UAACsH,OAAD;AACR;AAAA,mEAAO,kBAAOgB,GAAP,EAAqBa,GAArB,EAAoCC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACCd,GAAG,CAACe,OAAJ,IAAe,KAAI,CAAC1G,WAAL,CAAiB6J,YADjC;AAAA;AAAA;AAAA;;AAGOC,kBAAAA,QAHP,GAGkBnF,OAAO,CAACoF,UAAR,CAAmBjM,cAAnB,CAAkCtE,eAAe,CAACC,MAAlD,IAA4DD,eAAe,CAACC,MAA5E,GAAqFD,eAAe,CAACE,KAHvH;AAAA,iCAKSoQ,QALT;AAAA,oDAMUtQ,eAAe,CAACC,MAN1B,wBA2BUD,eAAe,CAACE,KA3B1B;AAAA;;AAAA;AAAA,wBAQaiM,GAAG,CAACe,OAAJ,CAAYQ,OAAZ,CAAoBhG,aAApB,CAAkC1H,eAAe,CAACC,MAAlD,MAA8Db,SAR3E;AAAA;AAAA;AAAA;;AAAA,wBASiB+M,GAAG,CAACe,OAAJ,CAAYQ,OAAZ,CAAoBhG,aAApB,CAAkC1H,eAAe,CAACG,WAAlD,KAAkEgM,GAAG,CAACe,OAAJ,CAAYQ,OAAZ,CAAoBhG,aAApB,CAAkC1H,eAAe,CAACI,aAAlD,CATnF;AAAA;AAAA;AAAA;;AAUiByF,kBAAAA,MAAM,CAACI,UAAP,CAAkBzF,YAAY,CAACE,gBAA/B;AAVjB;AAAA,yBAW8B,KAAI,CAAC8P,aAAL,CAAmBrE,GAAnB,EAAwBa,GAAxB,EAA6BC,IAA7B,EAAmC9B,OAAO,CAACoF,UAA3C,CAX9B;;AAAA;AAAA;;AAAA;AAaiB1K,kBAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACgB,iBAA9B;AAbjB,oDAcwBqL,GAAG,CAACrJ,QAAJ,CAAa,KAAI,CAAC6C,WAAL,CAAiB9C,UAAjB,CAA4BG,YAAzC,CAdxB;;AAAA;AAAA;AAAA;;AAAA;AAiBmB4M,kBAAAA,MAjBnB,GAiB4BtE,GAAG,CAACe,OAAJ,CAAYQ,OAAZ,CAAoBhG,aAApB,CAAkC1H,eAAe,CAACC,MAAlD,CAjB5B;;AAAA,sBAmBkB,KAAI,CAACyQ,eAAL,CAAqBvE,GAAG,CAACwE,MAAzB,EAAiCxF,OAAO,CAACoF,UAAzC,EAAqDE,MAArD,EAA6DzQ,eAAe,CAACC,MAA7E,CAnBlB;AAAA;AAAA;AAAA;;AAAA,oDAoBwB+M,GAAG,CAACrJ,QAAJ,CAAa,KAAI,CAAC6C,WAAL,CAAiB9C,UAAjB,CAA4BG,YAAzC,CApBxB;;AAAA;AAwBSoJ,kBAAAA,IAAI;AAxBb;;AAAA;AAAA,wBA4Bad,GAAG,CAACe,OAAJ,CAAYQ,OAAZ,CAAoBhG,aAApB,CAAkC1H,eAAe,CAACE,KAAlD,MAA6Dd,SA5B1E;AAAA;AAAA;AAAA;;AA6BayG,kBAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACc,gBAA9B;AA7Bb,oDA8BoBuL,GAAG,CAACrJ,QAAJ,CAAa,KAAI,CAAC6C,WAAL,CAAiB9C,UAAjB,CAA4BG,YAAzC,CA9BpB;;AAAA;AAgCmB+M,kBAAAA,KAhCnB,GAgC2BzE,GAAG,CAACe,OAAJ,CAAYQ,OAAZ,CAAoBhG,aAApB,CAAkC1H,eAAe,CAACE,KAAlD,CAhC3B;;AAAA,sBAkCkB,KAAI,CAACwQ,eAAL,CAAqBvE,GAAG,CAACwE,MAAzB,EAAiCxF,OAAO,CAACoF,UAAzC,EAAqDK,KAArD,EAA4D5Q,eAAe,CAACE,KAA5E,CAlClB;AAAA;AAAA;AAAA;;AAAA,oDAmCwB8M,GAAG,CAACrJ,QAAJ,CAAa,KAAI,CAAC6C,WAAL,CAAiB9C,UAAjB,CAA4BG,YAAzC,CAnCxB;;AAAA;AAuCSoJ,kBAAAA,IAAI;AAvCb;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AA8CCD,kBAAAA,GAAG,CAACrJ,QAAJ,CAAa,KAAI,CAAC6C,WAAL,CAAiB9C,UAAjB,CAA4BG,YAAzC;;AA9CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;;AAAA;AAAA;AAAA;AAAA;AAiDH,KAlDD;;AAvYIlB,IAAAA,kBAAkB,CAACC,mBAAnB,CAAuC4D,WAAvC;AACA,SAAKA,WAAL,GAAmBA,WAAnB;AAEA,SAAKC,UAAL,GAAkB9D,kBAAkB,CAACmB,oBAAnB,CAAwC0C,WAAxC,EAAqD9B,KAArD,CAAlB;AACA,SAAK0K,UAAL,GAAkB,IAAIyB,sCAAJ,CAAkC,KAAKpK,UAAvC,CAAlB;AAEA,SAAK8I,cAAL,GAAsB,IAAIhJ,cAAJ,CAAmB,KAAKC,WAAxB,EAAqC,KAAKC,UAA1C,CAAtB;AACA,SAAKsH,cAAL,GAAsB,IAAI+C,uBAAJ,EAAtB;AACH;AAED;;;;;;;;AAxBJ,eA8BiBC,UA9BjB;AAAA;AAAA;AAAA,kFA8BI,kBAAwBvK,WAAxB,EAAkD9B,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEcsM,cAAAA,QAFd,GAEyB,IAAIxH,eAAJ,EAFzB;AAAA;AAAA,qBAGyDwH,QAAQ,CAACvH,yBAAT,CAAmCjD,WAAnC,CAHzD;;AAAA;AAGcyK,cAAAA,kCAHd;AAIcC,cAAAA,YAJd,GAI6B,IAAIxE,YAAJ,CAAiBuE,kCAAjB,EAAqDvM,KAArD,CAJ7B;AAAA,gDAKewM,YALf;;AAAA;AAAA;AAAA;AAOQhM,cAAAA,OAAO,CAACa,GAAR;;AAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA9BJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA2cI;;;;;;;;AA3cJ;;AAAA;;AAAA,SAmdkB8I,WAndlB;AAAA;AAAA;AAAA,mFAmdY,kBAAkB1C,GAAlB,EAAgCa,GAAhC,EAA+CC,IAA/C,EAAmEsB,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AACJ;AACApC,cAAAA,GAAG,CAACe,OAAJ,CAAYG,eAAZ,CAA4BpJ,SAA5B,GAAwCsK,MAAM,CAACtK,SAA/C;AACAkI,cAAAA,GAAG,CAACe,OAAJ,CAAYG,eAAZ,CAA4BtE,MAA5B,GAAqCwF,MAAM,CAACxF,MAA5C;AACAoD,cAAAA,GAAG,CAACe,OAAJ,CAAYG,eAAZ,CAA4BC,KAA5B,GAAoCiB,MAAM,CAACjB,KAA3C;AACAnB,cAAAA,GAAG,CAACe,OAAJ,CAAYG,eAAZ,CAA4BE,WAA5B,GAA0CgB,MAAM,CAAC5K,QAAjD;AACAwI,cAAAA,GAAG,CAACe,OAAJ,CAAYG,eAAZ,CAA4BqB,MAA5B,GAAqCH,MAAM,CAACG,MAA5C;AACAvC,cAAAA,GAAG,CAACe,OAAJ,CAAYG,eAAZ,CAA4BK,OAA5B,GAAsCa,MAAM,CAACb,OAA7C;AAEAvB,cAAAA,GAAG,CAACe,OAAJ,CAAYM,YAAZ,CAAyBvJ,SAAzB,GAAqCsK,MAAM,CAACtK,SAA5C;AACAkI,cAAAA,GAAG,CAACe,OAAJ,CAAYM,YAAZ,CAAyBzE,MAAzB,GAAkCwF,MAAM,CAACxF,MAAzC;AACAoD,cAAAA,GAAG,CAACe,OAAJ,CAAYM,YAAZ,CAAyBD,WAAzB,GAAuCgB,MAAM,CAAC5K,QAA9C,CAXI;;AAAA;AAAA;AAAA,qBAeuB,KAAKyL,UAAL,CAAgB+B,cAAhB,CAA+BhF,GAAG,CAACe,OAAJ,CAAYG,eAA3C,CAfvB;;AAAA;AAeM7B,cAAAA,QAfN;AAgBAwB,cAAAA,GAAG,CAACrJ,QAAJ,CAAa6H,QAAb;AAhBA;AAAA;;AAAA;AAAA;AAAA;AAkBA3F,cAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACQ,sBAA9B;AACA+D,cAAAA,OAAO,CAACa,GAAR;AACAkH,cAAAA,IAAI,cAAJ;;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAndZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA2eI;;;;;;;;AA3eJ,SAmfkBuD,aAnflB;AAAA;AAAA;AAAA,qFAmfY,kBAAoBrE,GAApB,EAAkCa,GAAlC,EAAiDC,IAAjD,EAAqEmE,IAArE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sCAC+DjF,GAAG,CAACe,OAAJ,CAAYQ,OAAZ,CAAoBhG,aADnF,EACI2J,AAAiCC,gBADrC;AAGE1B,cAAAA,aAHF,GAGqC;AACrClC,gBAAAA,OAAO,EAAEvB,GAAG,CAACe,OAAJ,CAAYQ,OADgB;AAErC3E,gBAAAA,MAAM,EAAE/I,eAAe,CAACO,mBAAhB,CAAoCiK,KAApC,CAA0C,GAA1C;AAF6B,eAHrC;AAAA;AAAA;AAAA,qBAU4B,KAAK4E,UAAL,CAAgBS,kBAAhB,CAAmCD,aAAnC,CAV5B;;AAAA;AAUMN,cAAAA,aAVN;AAAA;AAAA;AAAA,qBAYgCpE,YAAY,CAACS,eAAb,CAA6B3L,eAAe,CAACM,sBAA7C,EAAqEgP,aAAa,CAAC/G,WAAnF,CAZhC;;AAAA;AAYUqD,cAAAA,aAZV;;AAAA,mBAoBQA,aAAa,CAAC5L,eAAe,CAACK,eAAjB,CApBrB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAsBqC6K,YAAY,CAACe,gBAAb,CAA8BqD,aAAa,CAAC/G,WAA5C,EAAyDqD,aAAa,CAAC5L,eAAe,CAACK,eAAjB,CAAtE,CAtBrC;;AAAA;AAsBkBkR,cAAAA,UAtBlB;AAwBYpF,cAAAA,GAAG,CAACe,OAAJ,CAAYQ,OAAZ,CAAoBhG,aAApB,gBACO4J,gBADP;AAEIb,gBAAAA,MAAM,EAAEc;AAFZ;;AAxBZ,kBA6BiB,KAAKb,eAAL,CAAqBvE,GAAG,CAACwE,MAAzB,EAAiCS,IAAjC,EAAuCjF,GAAG,CAACe,OAAJ,CAAYQ,OAAZ,CAAoBhG,aAApB,CAAkC1H,eAAe,CAACC,MAAlD,CAAvC,EAAkGD,eAAe,CAACC,MAAlH,CA7BjB;AAAA;AAAA;AAAA;;AAAA,gDA8BuB+M,GAAG,CAACrJ,QAAJ,CAAa,KAAK6C,WAAL,CAAiB9C,UAAjB,CAA4BG,YAAzC,CA9BvB;;AAAA;AAAA,gDAgCuBoJ,IAAI,EAhC3B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmCY/H,cAAAA,OAAO,CAACa,GAAR;AACAkH,cAAAA,IAAI,cAAJ;;AApCZ;AAAA;AAAA;;AAAA;AAuCQd,cAAAA,GAAG,CAACe,OAAJ,CAAYQ,OAAZ,CAAoBhG,aAApB,gBACO4J,gBADP;AAEIb,gBAAAA,MAAM,EAAE7E,aAAa,CAAC,OAAD,CAAb,CAAuBC,GAAvB,CAA2B,UAACC,CAAD;AAAA,yBAAOA,CAAC,CAACE,EAAT;AAAA,iBAA3B;AAFZ;;AAvCR,kBA4Ca,KAAK0E,eAAL,CAAqBvE,GAAG,CAACwE,MAAzB,EAAiCS,IAAjC,EAAuCjF,GAAG,CAACe,OAAJ,CAAYQ,OAAZ,CAAoBhG,aAApB,CAAkC1H,eAAe,CAACC,MAAlD,CAAvC,EAAkGD,eAAe,CAACC,MAAlH,CA5Cb;AAAA;AAAA;AAAA;;AAAA,gDA6CmB+M,GAAG,CAACrJ,QAAJ,CAAa,KAAK6C,WAAL,CAAiB9C,UAAjB,CAA4BG,YAAzC,CA7CnB;;AAAA;AAAA,gDA+CmBoJ,IAAI,EA/CvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmDI/H,cAAAA,OAAO,CAACa,GAAR;AACAkH,cAAAA,IAAI,cAAJ;;AApDJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAuDA/H,cAAAA,OAAO,CAACa,GAAR;AACAkH,cAAAA,IAAI,cAAJ;;AAxDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAnfZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+iBI;;;;;;;;AA/iBJ;;AAAA,SAujBYyD,eAvjBZ,GAujBY,yBAAgBC,MAAhB,EAAgCS,IAAhC,EAAkDI,KAAlD,EAAmEC,QAAnE;AACJ,QAAIL,IAAI,CAACM,OAAL,CAAanO,QAAb,CAAsBoN,MAAtB,CAAJ,EAAmC;AAC/B,cAAQc,QAAR;AACI,aAAKzR,eAAe,CAACC,MAArB;AACI,cAAImR,IAAI,CAACX,MAAL,CAAYkB,MAAZ,CAAmB,UAAAC,IAAI;AAAA,mBAAIJ,KAAK,CAACjO,QAAN,CAAeqO,IAAf,CAAJ;AAAA,WAAvB,EAAiDC,MAAjD,GAA0D,CAA9D,EAAiE;AAC7DhM,YAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACiB,iBAA9B;AACA,mBAAO,KAAP;AACH;;AACD;;AAEJ,aAAK5B,eAAe,CAACE,KAArB;AACI,cAAIkR,IAAI,CAACR,KAAL,CAAWe,MAAX,CAAkB,UAAAC,IAAI;AAAA,mBAAIJ,KAAK,CAACjO,QAAN,CAAeqO,IAAf,CAAJ;AAAA,WAAtB,EAAgDC,MAAhD,GAAyD,CAA7D,EAAgE;AAC5DhM,YAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACe,gBAA9B;AACA,mBAAO,KAAP;AACH;;AACD;AAbR;AAkBH,KAnBD,MAmBO;AACHmE,MAAAA,MAAM,CAACC,QAAP,CAAgBnF,aAAa,CAACkB,kBAA9B;AACA,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH;AAED;;;;;AAnlBJ;;AAAA,SAwlBY6N,yBAxlBZ,GAwlBY,mCAA0B3G,MAA1B;AACJ;AAEA,QAAM+I,KAAK,GAAGzO,MAAM,CAACC,MAAP,cAAmB,KAAKkD,WAAL,CAAiBmJ,eAApC,EAAwD,KAAKnJ,WAAL,CAAiBmC,cAAzE,GACToJ,SADS,CACC,UAAClJ,QAAD;AAAA,aAAwBqF,IAAI,CAACC,SAAL,CAAetF,QAAQ,CAACE,MAAxB,MAAoCmF,IAAI,CAACC,SAAL,CAAepF,MAAf,CAA5D;AAAA,KADD,CAAd;AAGA,QAAM0G,YAAY,GAAGpM,MAAM,CAAC+D,IAAP,cAAiB,KAAKZ,WAAL,CAAiBmJ,eAAlC,EAAsD,KAAKnJ,WAAL,CAAiBmC,cAAvE,GAAyFmJ,KAAzF,CAArB;AACA,WAAOrC,YAAP;AACH,GAhmBL;;AAAA;AAAA;;;;;;;;;;;;;;;;;;"}